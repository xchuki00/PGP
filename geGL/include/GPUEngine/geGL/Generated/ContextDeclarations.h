void glMultiDrawArraysIndirectBindlessCountNV(GLenum mode,const void* indirect,GLsizei drawCount,GLsizei maxDrawCount,GLsizei stride,GLint vertexBufferCount)const;
void glTextureParameterfv(GLuint texture,GLenum pname,const GLfloat* param)const;
void glGetListParameterivSGIX(GLuint list,GLenum pname,GLint* params)const;
void glProgramUniform1i64ARB(GLuint program,GLint location,GLint64 x)const;
void glVertexArrayElementBuffer(GLuint vaobj,GLuint buffer)const;
void glHintPGI(GLenum target,GLint mode)const;
void glStencilMaskSeparate(GLenum face,GLuint mask)const;
void glGetFramebufferAttachmentParameterivEXT(GLenum target,GLenum attachment,GLenum pname,GLint* params)const;
void glTextureStorage3DMultisample(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)const;
void glGetIntegerIndexedvEXT(GLenum target,GLuint index,GLint* data)const;
void glCopyTexImage1D(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)const;
void glVertexAttrib4usv(GLuint index,const GLushort* v)const;
void glTexRenderbufferNV(GLenum target,GLuint renderbuffer)const;
void glVertexAttrib3hvNV(GLuint index,const GLhalfNV* v)const;
void glProgramUniform4ui64ARB(GLuint program,GLint location,GLuint64 x,GLuint64 y,GLuint64 z,GLuint64 w)const;
void glInstrumentsBufferSGIX(GLsizei size,GLint* buffer)const;
void glIndexi(GLint c)const;
void glMultiTexCoord2sARB(GLenum target,GLshort s,GLshort t)const;
void glProgramEnvParameter4fARB(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
void glCompressedTexSubImage3D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const GLvoid* data)const;
void glEvalCoord2d(GLdouble u,GLdouble v)const;
void glEvalCoord2f(GLfloat u,GLfloat v)const;
void glIndexd(GLdouble c)const;
void glSecondaryColor3hvNV(const GLhalfNV* v)const;
void glIndexf(GLfloat c)const;
void glFrustumxOES(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)const;
void glTextureStorage3DEXT(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)const;
void glDrawCommandsStatesNV(GLuint buffer,const GLintptr* indirects,const GLsizei* sizes,const GLuint* states,const GLuint* fbos,GLuint count)const;
void glUniform4uiEXT(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)const;
void glProgramUniform3ui64ARB(GLuint program,GLint location,GLuint64 x,GLuint64 y,GLuint64 z)const;
void glIndexs(GLshort c)const;
void glVertexArrayBindVertexBufferEXT(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)const;
void glConvolutionParameteriEXT(GLenum target,GLenum pname,GLint params)const;
void glColor4ubVertex2fSUN(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y)const;
void glProgramUniform1ivEXT(GLuint program,GLint location,GLsizei count,const GLint* value)const;
void glGetnMapfv(GLenum target,GLenum query,GLsizei bufSize,GLfloat* v)const;
void glTransformFeedbackBufferRange(GLuint xfb,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)const;
void glPathGlyphsNV(GLuint firstPathName,GLenum fontTarget,const void* fontName,GLbitfield fontStyle,GLsizei numGlyphs,GLenum type,const void* charcodes,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)const;
void glSecondaryColor3fv(const GLfloat* v)const;
void glGetCombinerInputParameterivNV(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLint* params)const;
void glEndPerfMonitorAMD(GLuint monitor)const;
void glPointParameterfvARB(GLenum pname,const GLfloat* params)const;
void glVertex2xOES(GLfixed x)const;
void glDrawElementsInstancedBaseInstance(GLenum mode,GLsizei count,GLenum type,const void* indices,GLsizei instancecount,GLuint baseinstance)const;
void glMultTransposeMatrixdARB(const GLdouble* m)const;
void glVertexAttribL4dEXT(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
void glVertex4iv(const GLint* v)const;
void glCoverStrokePathInstancedNV(GLsizei numPaths,GLenum pathNameType,const void* paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat* transformValues)const;
void glDeformSGIX(GLbitfield mask)const;
void glUniform2ui64NV(GLint location,GLuint64EXT x,GLuint64EXT y)const;
void glCopyPathNV(GLuint resultPath,GLuint srcPath)const;
void glVertexAttribP4ui(GLuint index,GLenum type,GLboolean normalized,GLuint value)const;
void glVertexAttribL2d(GLuint index,GLdouble x,GLdouble y)const;
void glGetMultisamplefv(GLenum pname,GLuint index,GLfloat* val)const;
void glCompressedMultiTexSubImage3DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void* bits)const;
GLvdpauSurfaceNV glVDPAURegisterOutputSurfaceNV(const void* vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint* textureNames)const;
void glMinSampleShading(GLfloat value)const;
void glProgramUniform4fEXT(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)const;
void glCoverStrokePathNV(GLuint path,GLenum coverMode)const;
void glTextureImage2DMultisampleNV(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)const;
void glVertex3bOES(GLbyte x,GLbyte y,GLbyte z)const;
void glTessellationFactorAMD(GLfloat factor)const;
void glDebugMessageControl(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint* ids,GLboolean enabled)const;
GLboolean glIsObjectBufferATI(GLuint buffer)const;
void glPopAttrib()const;
void glProgramUniform4iEXT(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)const;
void glVertexAttrib4ubNV(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)const;
void glColorMaterial(GLenum face,GLenum mode)const;
void glVertexAttrib2svARB(GLuint index,const GLshort* v)const;
void glMinSampleShadingARB(GLfloat value)const;
void glColor3b(GLbyte red,GLbyte green,GLbyte blue)const;
void glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(GLuint rc,GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)const;
void glColor3f(GLfloat red,GLfloat green,GLfloat blue)const;
void glVDPAUGetSurfaceivNV(GLvdpauSurfaceNV surface,GLenum pname,GLsizei bufSize,GLsizei* length,GLint* values)const;
void glColor3d(GLdouble red,GLdouble green,GLdouble blue)const;
void glGetnMapiv(GLenum target,GLenum query,GLsizei bufSize,GLint* v)const;
void glColor3i(GLint red,GLint green,GLint blue)const;
void glGetInternalformatSampleivNV(GLenum target,GLenum internalformat,GLsizei samples,GLenum pname,GLsizei bufSize,GLint* params)const;
void glVertexAttrib4ubv(GLuint index,const GLubyte* v)const;
void glColor3s(GLshort red,GLshort green,GLshort blue)const;
void glVertexAttribs4hvNV(GLuint index,GLsizei n,const GLhalfNV* v)const;
void glVertexAttrib4NubvARB(GLuint index,const GLubyte* v)const;
void glMultiTexCoord3hvNV(GLenum target,const GLhalfNV* v)const;
void glMatrixPushEXT(GLenum mode)const;
void glProgramUniform2fEXT(GLuint program,GLint location,GLfloat v0,GLfloat v1)const;
void glGetVertexArrayIndexediv(GLuint vaobj,GLuint index,GLenum pname,GLint* param)const;
void glBlitFramebuffer(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)const;
void glMultiTexCoordP2ui(GLenum texture,GLenum type,GLuint coords)const;
void glColorPointerListIBM(GLint size,GLenum type,GLint stride,const void** pointer,GLint ptrstride)const;
void glVertexAttribL4d(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
void glGetFragmentMaterialfvSGIX(GLenum face,GLenum pname,GLfloat* params)const;
void glVertex2iv(const GLint* v)const;
void glGetTexEnvxvOES(GLenum target,GLenum pname,GLfixed* params)const;
void glUniformMatrix3dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glGetVertexAttribLdvEXT(GLuint index,GLenum pname,GLdouble* params)const;
void glTexCoordP3uiv(GLenum type,const GLuint* coords)const;
void glDeformationMap3dSGIX(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,GLdouble w1,GLdouble w2,GLint wstride,GLint worder,const GLdouble* points)const;
void glResumeTransformFeedback()const;
void glInsertEventMarkerEXT(GLsizei length,const GLchar* marker)const;
void glTessellationModeAMD(GLenum mode)const;
void glDrawCommandsAddressNV(GLenum primitiveMode,const GLuint64* indirects,const GLsizei* sizes,GLuint count)const;
void glFogi(GLenum pname,GLint param)const;
void glGetTexParameterxvOES(GLenum target,GLenum pname,GLfixed* params)const;
void glVertexPointer(GLint size,GLenum type,GLsizei stride,const GLvoid* ptr)const;
void glGetPerfMonitorCounterDataAMD(GLuint monitor,GLenum pname,GLsizei dataSize,GLuint* data,GLint* bytesWritten)const;
void glFogf(GLenum pname,GLfloat param)const;
void glMultiTexCoord1d(GLenum target,GLdouble s)const;
void glMultiTexCoord1f(GLenum target,GLfloat s)const;
void glGetMultiTexParameterivEXT(GLenum texunit,GLenum target,GLenum pname,GLint* params)const;
void glProgramUniformMatrix3x4fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glVertexAttribI2i(GLuint index,GLint x,GLint y)const;
void glMultiTexCoord1i(GLenum target,GLint s)const;
void glUniform1ui64vARB(GLint location,GLsizei count,const GLuint64* value)const;
void glLoadProgramNV(GLenum target,GLuint id,GLsizei len,const GLubyte* program)const;
void glWriteMaskEXT(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)const;
GLenum glGetGraphicsResetStatus()const;
void glVertexAttrib1fv(GLuint index,const GLfloat* v)const;
GLboolean glIsEnabled(GLenum cap)const;
void glImageTransformParameterfvHP(GLenum target,GLenum pname,const GLfloat* params)const;
void glFramebufferTexture2D(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)const;
void glGetFragmentLightfvSGIX(GLenum light,GLenum pname,GLfloat* params)const;
void glListParameterfSGIX(GLuint list,GLenum pname,GLfloat param)const;
void glTexCoord3sv(const GLshort* v)const;
void glNamedFramebufferRenderbufferEXT(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)const;
void glFragmentLightModelfSGIX(GLenum pname,GLfloat param)const;
void glIndexPointerEXT(GLenum type,GLsizei stride,GLsizei count,const void* pointer)const;
void glBlendEquationSeparateATI(GLenum modeRGB,GLenum modeA)const;
void glVertexArrayAttribIFormat(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)const;
void glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(GLuint rc,GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)const;
void glReplacementCodeubvSUN(const GLubyte* code)const;
void glGenFramebuffers(GLsizei n,GLuint* framebuffers)const;
void glPixelMapx(GLenum map,GLint size,const GLfixed* values)const;
void glTexSubImage3DEXT(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void* pixels)const;
void glGetAttachedShaders(GLuint program,GLsizei maxCount,GLsizei* count,GLuint* shaders)const;
void glGetPixelTexGenParameterfvSGIS(GLenum pname,GLfloat* params)const;
void glReplacementCodeuiNormal3fVertex3fSUN(GLuint rc,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)const;
GLuint glGetDebugMessageLogAMD(GLuint count,GLsizei bufsize,GLenum* categories,GLuint* severities,GLuint* ids,GLsizei* lengths,GLchar* message)const;
void glVertexStream4sATI(GLenum stream,GLshort x,GLshort y,GLshort z,GLshort w)const;
void glVertexAttribs4dvNV(GLuint index,GLsizei count,const GLdouble* v)const;
void glGetnMapdvARB(GLenum target,GLenum query,GLsizei bufSize,GLdouble* v)const;
void glOrthofOES(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)const;
void glViewportArrayv(GLuint first,GLsizei count,const GLfloat* v)const;
void glDrawElementArrayATI(GLenum mode,GLsizei count)const;
void glGetPathColorGenfvNV(GLenum color,GLenum pname,GLfloat* value)const;
void glWindowPos3iMESA(GLint x,GLint y,GLint z)const;
void glMultiTexCoord2s(GLenum target,GLshort s,GLshort t)const;
void glVertex3dv(const GLdouble* v)const;
void glVertexAttribI3uivEXT(GLuint index,const GLuint* v)const;
void glUniform3ui64ARB(GLint location,GLuint64 x,GLuint64 y,GLuint64 z)const;
void glVertexAttrib2fvNV(GLuint index,const GLfloat* v)const;
void glGetNamedBufferSubDataEXT(GLuint buffer,GLintptr offset,GLsizeiptr size,void* data)const;
void glConvolutionFilter2D(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid* image)const;
void glMemoryBarrierByRegion(GLbitfield barriers)const;
void glVertexArrayBindingDivisor(GLuint vaobj,GLuint bindingindex,GLuint divisor)const;
void glMatrixRotatedEXT(GLenum mode,GLdouble angle,GLdouble x,GLdouble y,GLdouble z)const;
void glTexCoord2sv(const GLshort* v)const;
GLboolean glIsProgramNV(GLuint id)const;
void glUniform2dv(GLint location,GLsizei count,const GLdouble* value)const;
void glGetPixelMapuiv(GLenum map,GLuint* values)const;
void glDepthBoundsEXT(GLclampd zmin,GLclampd zmax)const;
void glVertexAttrib4hvNV(GLuint index,const GLhalfNV* v)const;
void glMultiTexParameteriEXT(GLenum texunit,GLenum target,GLenum pname,GLint param)const;
void glGetPointerv(GLenum pname,GLvoid** params)const;
void glPathCommandsNV(GLuint path,GLsizei numCommands,const GLubyte* commands,GLsizei numCoords,GLenum coordType,const void* coords)const;
void glGetUniformfv(GLuint program,GLint location,GLfloat* params)const;
void glGetUniformuiv(GLuint program,GLint location,GLuint* params)const;
void glDebugMessageInsertAMD(GLenum category,GLenum severity,GLuint id,GLsizei length,const GLchar* buf)const;
void glFrustum(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble near_val,GLdouble far_val)const;
void glVertexAttribL1ui64vNV(GLuint index,const GLuint64EXT* v)const;
void glClearColorxOES(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)const;
void glProgramUniformMatrix3fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glSampleMaskIndexedNV(GLuint index,GLbitfield mask)const;
void glCompileShaderIncludeARB(GLuint shader,GLsizei count,const GLchar*const* path,const GLint* length)const;
void glGetArrayObjectfvATI(GLenum array,GLenum pname,GLfloat* params)const;
void glVertexStream4svATI(GLenum stream,const GLshort* coords)const;
void glMultiTexCoord4iARB(GLenum target,GLint s,GLint t,GLint r,GLint q)const;
void glVariantfvEXT(GLuint id,const GLfloat* addr)const;
void glMatrixLoadfEXT(GLenum mode,const GLfloat* m)const;
void glLoadIdentityDeformationMapSGIX(GLbitfield mask)const;
void glGetRenderbufferParameteriv(GLenum target,GLenum pname,GLint* params)const;
void glProgramUniform3fEXT(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)const;
void glNamedRenderbufferStorage(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)const;
void glProgramPathFragmentInputGenNV(GLuint program,GLint location,GLenum genMode,GLint components,const GLfloat* coeffs)const;
void glFogCoordPointerListIBM(GLenum type,GLint stride,const void** pointer,GLint ptrstride)const;
GLsync glFenceSync(GLenum condition,GLbitfield flags)const;
void glGetVertexAttribIivEXT(GLuint index,GLenum pname,GLint* params)const;
void glFramebufferDrawBuffersEXT(GLuint framebuffer,GLsizei n,const GLenum* bufs)const;
void glVertexAttribs4fvNV(GLuint index,GLsizei count,const GLfloat* v)const;
void glPauseTransformFeedbackNV()const;
void glGetQueryObjecti64vEXT(GLuint id,GLenum pname,GLint64* params)const;
void glVDPAUSurfaceAccessNV(GLvdpauSurfaceNV surface,GLenum access)const;
void glValidateProgramPipeline(GLuint pipeline)const;
void glTexPageCommitmentARB(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean commit)const;
void glWindowPos3dvARB(const GLdouble* v)const;
void glStencilStrokePathInstancedNV(GLsizei numPaths,GLenum pathNameType,const void* paths,GLuint pathBase,GLint reference,GLuint mask,GLenum transformType,const GLfloat* transformValues)const;
void glFogfv(GLenum pname,const GLfloat* params)const;
void glGenQueriesARB(GLsizei n,GLuint* ids)const;
void glProgramUniform2i64NV(GLuint program,GLint location,GLint64EXT x,GLint64EXT y)const;
void glVertexP4ui(GLenum type,GLuint value)const;
void glVertexStream1ivATI(GLenum stream,const GLint* coords)const;
void glProgramEnvParameterI4iNV(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)const;
void glGenVertexArraysAPPLE(GLsizei n,GLuint* arrays)const;
void glDrawTransformFeedbackInstanced(GLenum mode,GLuint id,GLsizei instancecount)const;
void glStencilThenCoverStrokePathNV(GLuint path,GLint reference,GLuint mask,GLenum coverMode)const;
void glDeleteVertexArraysAPPLE(GLsizei n,const GLuint* arrays)const;
void glGetNamedBufferParameterui64vNV(GLuint buffer,GLenum pname,GLuint64EXT* params)const;
GLbitfield glQueryMatrixxOES(GLfixed* mantissa,GLint* exponent)const;
void glSecondaryColor3usv(const GLushort* v)const;
void glTranslatexOES(GLfixed x,GLfixed y,GLfixed z)const;
void glDrawTransformFeedback(GLenum mode,GLuint id)const;
void glTexCoord2fColor4fNormal3fVertex3fvSUN(const GLfloat* tc,const GLfloat* c,const GLfloat* n,const GLfloat* v)const;
GLvdpauSurfaceNV glVDPAURegisterVideoSurfaceNV(const void* vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint* textureNames)const;
void glGetTexParameterIuiv(GLenum target,GLenum pname,GLuint* params)const;
void glBindBufferBaseNV(GLenum target,GLuint index,GLuint buffer)const;
void glIndexPointer(GLenum type,GLsizei stride,const GLvoid* ptr)const;
void glVertexAttrib4Nbv(GLuint index,const GLbyte* v)const;
void glListParameteriSGIX(GLuint list,GLenum pname,GLint param)const;
void glBlendColorxOES(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)const;
void glUniformui64vNV(GLint location,GLsizei count,const GLuint64EXT* value)const;
GLboolean glIsSync(GLsync sync)const;
void glGetTextureParameterivEXT(GLuint texture,GLenum target,GLenum pname,GLint* params)const;
void glFogCoordhvNV(const GLhalfNV* fog)const;
void glFramebufferTextureLayerEXT(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)const;
void glGetObjectPtrLabel(const void* ptr,GLsizei bufSize,GLsizei* length,GLchar* label)const;
void glTextureParameteri(GLuint texture,GLenum pname,GLint param)const;
void glMultiTexCoord1fARB(GLenum target,GLfloat s)const;
void glUniformMatrix2x3dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glFramebufferDrawBufferEXT(GLuint framebuffer,GLenum mode)const;
void glCopyColorSubTable(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)const;
void glVertexAttribL3d(GLuint index,GLdouble x,GLdouble y,GLdouble z)const;
void glFragmentMaterialfvSGIX(GLenum face,GLenum pname,const GLfloat* params)const;
void glMatrixLoadTranspose3x3fNV(GLenum matrixMode,const GLfloat* m)const;
void glDeleteNamesAMD(GLenum identifier,GLuint num,const GLuint* names)const;
void glDrawRangeElementsEXT(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void* indices)const;
void glOrtho(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble near_val,GLdouble far_val)const;
void glProgramUniform1dvEXT(GLuint program,GLint location,GLsizei count,const GLdouble* value)const;
void glColor4xOES(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)const;
void glTexImage4DSGIS(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLint border,GLenum format,GLenum type,const void* pixels)const;
void glProgramUniform1ui(GLuint program,GLint location,GLuint v0)const;
void glDeleteBuffersARB(GLsizei n,const GLuint* buffers)const;
GLboolean glUnmapBufferARB(GLenum target)const;
void glCopyTexImage2D(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)const;
void glMaterialxOES(GLenum face,GLenum pname,GLfixed param)const;
void glProgramUniformMatrix2x4fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GLboolean glTestObjectAPPLE(GLenum object,GLuint name)const;
void glRenderbufferStorageEXT(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)const;
void glVertexAttribL1ui64ARB(GLuint index,GLuint64EXT x)const;
void glEndFragmentShaderATI()const;
void glPathParameterivNV(GLuint path,GLenum pname,const GLint* value)const;
void glUniform4uiv(GLint location,GLsizei count,const GLuint* value)const;
void glFrameZoomSGIX(GLint factor)const;
void glSecondaryColor3fEXT(GLfloat red,GLfloat green,GLfloat blue)const;
void glVertexAttribL1dv(GLuint index,const GLdouble* v)const;
void glNormalStream3svATI(GLenum stream,const GLshort* coords)const;
void glPathStencilFuncNV(GLenum func,GLint ref,GLuint mask)const;
void glSetInvariantEXT(GLuint id,GLenum type,const void* addr)const;
void glGetTexBumpParameterivATI(GLenum pname,GLint* param)const;
void glBlendEquationSeparateEXT(GLenum modeRGB,GLenum modeAlpha)const;
void glEndOcclusionQueryNV()const;
void glScissorArrayv(GLuint first,GLsizei count,const GLint* v)const;
void glCallList(GLuint list)const;
void* glMapTexture2DINTEL(GLuint texture,GLint level,GLbitfield access,GLint* stride,GLenum* layout)const;
void glPixelTransferxOES(GLenum pname,GLfixed param)const;
void glDeleteRenderbuffersEXT(GLsizei n,const GLuint* renderbuffers)const;
void glTexCoord4fColor4fNormal3fVertex4fSUN(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
void glProgramUniformMatrix4dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glGetnColorTable(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void* table)const;
void glFramebufferTextureLayerARB(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)const;
void glVertexAttribL2dvEXT(GLuint index,const GLdouble* v)const;
void glGetCombinerStageParameterfvNV(GLenum stage,GLenum pname,GLfloat* params)const;
void glMultiTexCoord1xvOES(GLenum texture,const GLfixed* coords)const;
void* glMapBuffer(GLenum target,GLenum access)const;
void glSecondaryColor3d(GLdouble red,GLdouble green,GLdouble blue)const;
void glSecondaryColor3f(GLfloat red,GLfloat green,GLfloat blue)const;
void glVertexAttribLFormat(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)const;
void glElementPointerAPPLE(GLenum type,const void* pointer)const;
void glVertexStream1fATI(GLenum stream,GLfloat x)const;
void glCoverageModulationNV(GLenum components)const;
void glSecondaryColor3i(GLint red,GLint green,GLint blue)const;
void glDeleteSync(GLsync sync)const;
void glGetProgramParameterfvNV(GLenum target,GLuint index,GLenum pname,GLfloat* params)const;
void glMaxShaderCompilerThreadsARB(GLuint count)const;
void glUniformMatrix4x2dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glVertexArrayVertexAttribLOffsetEXT(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)const;
void glSecondaryColor3s(GLshort red,GLshort green,GLshort blue)const;
GLboolean glIsImageHandleResidentNV(GLuint64 handle)const;
void glUniform3iv(GLint location,GLsizei count,const GLint* value)const;
void glVertexAttribL3i64vNV(GLuint index,const GLint64EXT* v)const;
void glPolygonMode(GLenum face,GLenum mode)const;
void glConvolutionFilter1DEXT(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void* image)const;
void glVertexAttrib1dvARB(GLuint index,const GLdouble* v)const;
void glTextureSubImage2DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void* pixels)const;
GLboolean glIsVertexArrayAPPLE(GLuint array)const;
void glUseProgram(GLuint program)const;
void glLineStipple(GLint factor,GLushort pattern)const;
void glMultiTexCoord4fvARB(GLenum target,const GLfloat* v)const;
GLenum glVideoCaptureNV(GLuint video_capture_slot,GLuint* sequence_num,GLuint64EXT* capture_time)const;
void glVertexArrayVertexAttribLFormatEXT(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)const;
void glUniform3fvARB(GLint location,GLsizei count,const GLfloat* value)const;
void glProgramUniformMatrix3x2fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glCopyTextureSubImage3DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
void glMultiTexCoord2bvOES(GLenum texture,const GLbyte* coords)const;
void glDeleteObjectARB(GLhandleARB obj)const;
void glTextureLightEXT(GLenum pname)const;
void glMultiTexCoord3dARB(GLenum target,GLdouble s,GLdouble t,GLdouble r)const;
void glNamedFramebufferTextureEXT(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)const;
void glTextureParameteriEXT(GLuint texture,GLenum target,GLenum pname,GLint param)const;
void glEvalCoord2xvOES(const GLfixed* coords)const;
void glBindVideoCaptureStreamBufferNV(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLintptrARB offset)const;
void glTexImage2DMultisampleCoverageNV(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)const;
GLint glGetAttribLocationARB(GLhandleARB programObj,const GLcharARB* name)const;
void glDeleteShader(GLuint shader)const;
void glVertexAttrib1fARB(GLuint index,GLfloat x)const;
void glTexCoord2fColor4ubVertex3fSUN(GLfloat s,GLfloat t,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)const;
void glTexCoord4fVertex4fSUN(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
void glGetMapdv(GLenum target,GLenum query,GLdouble* v)const;
void glMapParameterfvNV(GLenum target,GLenum pname,const GLfloat* params)const;
void glTextureParameterIuiv(GLuint texture,GLenum pname,const GLuint* params)const;
void glTransformFeedbackAttribsNV(GLsizei count,const GLint* attribs,GLenum bufferMode)const;
void glFragmentLightfvSGIX(GLenum light,GLenum pname,const GLfloat* params)const;
void glWindowPos3sARB(GLshort x,GLshort y,GLshort z)const;
void glGetConvolutionParameterfv(GLenum target,GLenum pname,GLfloat* params)const;
void glCopyTexSubImage3D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
void glVertexAttribI3i(GLuint index,GLint x,GLint y,GLint z)const;
GLhandleARB glCreateShaderObjectARB(GLenum shaderType)const;
void glVertexAttribFormat(GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)const;
void glGetProgramivARB(GLenum target,GLenum pname,GLint* params)const;
void glVertexAttribI4usv(GLuint index,const GLushort* v)const;
void glTexParameterf(GLenum target,GLenum pname,GLfloat param)const;
void glVertexAttribBinding(GLuint attribindex,GLuint bindingindex)const;
void glGetHistogramParameteriv(GLenum target,GLenum pname,GLint* params)const;
void glTexParameteri(GLenum target,GLenum pname,GLint param)const;
void glGetShaderSource(GLuint shader,GLsizei bufSize,GLsizei* length,GLchar* source)const;
void glVertexAttrib4s(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)const;
void glVertexAttrib4dvNV(GLuint index,const GLdouble* v)const;
void glVertexAttrib1dvNV(GLuint index,const GLdouble* v)const;
void glPopName()const;
void glTextureBufferEXT(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer)const;
void glGetMultiTexImageEXT(GLenum texunit,GLenum target,GLint level,GLenum format,GLenum type,void* pixels)const;
void glGetPointerIndexedvEXT(GLenum target,GLuint index,void** data)const;
GLboolean glIsNameAMD(GLenum identifier,GLuint name)const;
void glColor4ub(GLubyte red,GLubyte green,GLubyte blue,GLubyte alpha)const;
void glBufferParameteriAPPLE(GLenum target,GLenum pname,GLint param)const;
void glColor4ui(GLuint red,GLuint green,GLuint blue,GLuint alpha)const;
void glGetInternalformativ(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint* params)const;
void glColor4us(GLushort red,GLushort green,GLushort blue,GLushort alpha)const;
void glVertexAttribP1uiv(GLuint index,GLenum type,GLboolean normalized,const GLuint* value)const;
void glLinkProgram(GLuint program)const;
void glTexCoord3s(GLshort s,GLshort t,GLshort r)const;
void glTexCoord2dv(const GLdouble* v)const;
void glGetObjectLabel(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei* length,GLchar* label)const;
void glVertexPointerEXT(GLint size,GLenum type,GLsizei stride,GLsizei count,const void* pointer)const;
void glDebugMessageCallbackARB(GLDEBUGPROCARB callback,const void* userParam)const;
const GLubyte* glGetString(GLenum name)const;
void glGetPathParameterfvNV(GLuint path,GLenum pname,GLfloat* value)const;
void glLightxvOES(GLenum light,GLenum pname,const GLfixed* params)const;
void glEndQuery(GLenum target)const;
void glSecondaryColor3uiv(const GLuint* v)const;
void glPrioritizeTexturesxOES(GLsizei n,const GLuint* textures,const GLfixed* priorities)const;
void glEdgeFlagPointer(GLsizei stride,const GLvoid* ptr)const;
void glFramebufferParameteri(GLenum target,GLenum pname,GLint param)const;
void glTexCoord3hNV(GLhalfNV s,GLhalfNV t,GLhalfNV r)const;
void glMultiModeDrawElementsIBM(const GLenum* mode,const GLsizei* count,GLenum type,const void*const* indices,GLsizei primcount,GLint modestride)const;
void glCopyPixels(GLint x,GLint y,GLsizei width,GLsizei height,GLenum type)const;
void glVertexAttribI2ui(GLuint index,GLuint x,GLuint y)const;
void glClampColorARB(GLenum target,GLenum clamp)const;
void glColorPointervINTEL(GLint size,GLenum type,const void** pointer)const;
void glDeleteTextures(GLsizei n,const GLuint* textures)const;
void glGetMinmaxParameterfvEXT(GLenum target,GLenum pname,GLfloat* params)const;
void glWindowPos3sMESA(GLshort x,GLshort y,GLshort z)const;
void glVertexAttrib4f(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
void glNamedFramebufferParameteri(GLuint framebuffer,GLenum pname,GLint param)const;
void glTexCoord2fVertex3fvSUN(const GLfloat* tc,const GLfloat* v)const;
void glReplacementCodeusSUN(GLushort code)const;
void glGetNamedFramebufferParameteriv(GLuint framebuffer,GLenum pname,GLint* param)const;
void glVertexStream1fvATI(GLenum stream,const GLfloat* coords)const;
void glCreateVertexArrays(GLsizei n,GLuint* arrays)const;
void glBeginConditionalRender(GLuint id,GLenum mode)const;
void glConvolutionFilter1D(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid* image)const;
void glMultiTexCoord3fARB(GLenum target,GLfloat s,GLfloat t,GLfloat r)const;
void glGetQueryObjectuivARB(GLuint id,GLenum pname,GLuint* params)const;
void glScalexOES(GLfixed x,GLfixed y,GLfixed z)const;
void glSamplerParameteri(GLuint sampler,GLenum pname,GLint param)const;
void glSamplerParameterf(GLuint sampler,GLenum pname,GLfloat param)const;
void glShaderOp1EXT(GLenum op,GLuint res,GLuint arg1)const;
void glBeginVideoCaptureNV(GLuint video_capture_slot)const;
void glGetnHistogram(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void* values)const;
void glUniform1d(GLint location,GLdouble x)const;
GLint glRenderMode(GLenum mode)const;
void glClearColorIiEXT(GLint red,GLint green,GLint blue,GLint alpha)const;
void glGetCompressedTexImage(GLenum target,GLint lod,GLvoid* img)const;
void glCompressedTextureImage1DEXT(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void* bits)const;
void glGetActiveUniformBlockiv(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint* params)const;
void glUniform1i(GLint location,GLint v0)const;
void glGetTexEnvfv(GLenum target,GLenum pname,GLfloat* params)const;
void glColorTableParameterivSGI(GLenum target,GLenum pname,const GLint* params)const;
void glCullFace(GLenum mode)const;
void glDeleteFencesAPPLE(GLsizei n,const GLuint* fences)const;
void glProgramUniform4i(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)const;
void glUniformHandleui64ARB(GLint location,GLuint64 value)const;
void glProgramUniform4f(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)const;
void glViewportIndexedf(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h)const;
void glProgramUniform4d(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2,GLdouble v3)const;
void glTexCoord1xOES(GLfixed s)const;
void glVertexStream3ivATI(GLenum stream,const GLint* coords)const;
const GLubyte* glGetStringi(GLenum name,GLuint index)const;
void glEndQueryARB(GLenum target)const;
void glVDPAUMapSurfacesNV(GLsizei numSurfaces,const GLvdpauSurfaceNV* surfaces)const;
void glVertex3i(GLint x,GLint y,GLint z)const;
void glVertexAttrib4uivARB(GLuint index,const GLuint* v)const;
void glResumeTransformFeedbackNV()const;
void glAttachShader(GLuint program,GLuint shader)const;
void glColor4hNV(GLhalfNV red,GLhalfNV green,GLhalfNV blue,GLhalfNV alpha)const;
void glGetFenceivNV(GLuint fence,GLenum pname,GLint* params)const;
void glTexCoord2fColor4ubVertex3fvSUN(const GLfloat* tc,const GLubyte* c,const GLfloat* v)const;
void glGetColorTable(GLenum target,GLenum format,GLenum type,GLvoid* table)const;
void glFogCoordPointer(GLenum type,GLsizei stride,const void* pointer)const;
void glTexStorageSparseAMD(GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)const;
GLboolean glUnmapNamedBuffer(GLuint buffer)const;
void glTexCoord4bvOES(const GLbyte* coords)const;
void glVertexAttrib3fARB(GLuint index,GLfloat x,GLfloat y,GLfloat z)const;
void glRasterPos2xOES(GLfixed x,GLfixed y)const;
void glColor4ubVertex2fvSUN(const GLubyte* c,const GLfloat* v)const;
void glSecondaryColor3dv(const GLdouble* v)const;
void glVertexAttribI4sv(GLuint index,const GLshort* v)const;
void glDrawTransformFeedbackStreamInstanced(GLenum mode,GLuint id,GLuint stream,GLsizei instancecount)const;
void glMultiTexCoord4ivARB(GLenum target,const GLint* v)const;
void glSpriteParameterfSGIX(GLenum pname,GLfloat param)const;
void glSecondaryColor3sv(const GLshort* v)const;
void glBindVideoCaptureStreamTextureNV(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLenum target,GLuint texture)const;
void glTexParameterIuiv(GLenum target,GLenum pname,const GLuint* params)const;
void glFlushPixelDataRangeNV(GLenum target)const;
void glWindowPos3fv(const GLfloat* v)const;
void glVertexAttribLFormatNV(GLuint index,GLint size,GLenum type,GLsizei stride)const;
void glLightModelfv(GLenum pname,const GLfloat* params)const;
void glGetColorTableSGI(GLenum target,GLenum format,GLenum type,void* table)const;
void glGetCompressedTexImageARB(GLenum target,GLint level,void* img)const;
void glConvolutionParameteri(GLenum target,GLenum pname,GLint params)const;
void glVertexWeighthNV(GLhalfNV weight)const;
void glColorMaskIndexedEXT(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)const;
void glColorMaski(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)const;
void glColorFragmentOp1ATI(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)const;
void glVertexAttribI4ubvEXT(GLuint index,const GLubyte* v)const;
void glVertexAttrib1dNV(GLuint index,GLdouble x)const;
void glUnmapObjectBufferATI(GLuint buffer)const;
void glNamedProgramLocalParameterI4uiEXT(GLuint program,GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)const;
void glProgramUniform1iEXT(GLuint program,GLint location,GLint v0)const;
void glDeleteQueriesARB(GLsizei n,const GLuint* ids)const;
void glWindowPos3svARB(const GLshort* v)const;
void glVertex4s(GLshort x,GLshort y,GLshort z,GLshort w)const;
void glStringMarkerGREMEDY(GLsizei len,const void* string)const;
GLboolean glIsTransformFeedback(GLuint id)const;
void glProgramUniformMatrix2x3dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glGetObjectLabelEXT(GLenum type,GLuint object,GLsizei bufSize,GLsizei* length,GLchar* label)const;
void glUniformHandleui64vNV(GLint location,GLsizei count,const GLuint64* value)const;
void glRotated(GLdouble angle,GLdouble x,GLdouble y,GLdouble z)const;
GLboolean glIsProgramPipeline(GLuint pipeline)const;
void glRotatef(GLfloat angle,GLfloat x,GLfloat y,GLfloat z)const;
void glVertex4i(GLint x,GLint y,GLint z,GLint w)const;
void glGetActiveSubroutineUniformName(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei* length,GLchar* name)const;
void glVertexAttrib4sNV(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)const;
void glProgramLocalParameter4dvARB(GLenum target,GLuint index,const GLdouble* params)const;
void glReplacementCodeubSUN(GLubyte code)const;
void glMultiDrawElementsIndirectBindlessNV(GLenum mode,GLenum type,const void* indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)const;
void glUniformMatrix3fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glGetnMapfvARB(GLenum target,GLenum query,GLsizei bufSize,GLfloat* v)const;
void glGetnUniformfv(GLuint program,GLint location,GLsizei bufSize,GLfloat* params)const;
void glVertexAttribL2dv(GLuint index,const GLdouble* v)const;
void glVertexWeightPointerEXT(GLint size,GLenum type,GLsizei stride,const void* pointer)const;
void glTangent3sEXT(GLshort tx,GLshort ty,GLshort tz)const;
void glSecondaryColorPointer(GLint size,GLenum type,GLsizei stride,const void* pointer)const;
void glAlphaFunc(GLenum func,GLclampf ref)const;
void glGetNamedStringARB(GLint namelen,const GLchar* name,GLsizei bufSize,GLint* stringlen,GLchar* string)const;
void glTexCoord4d(GLdouble s,GLdouble t,GLdouble r,GLdouble q)const;
void glBufferPageCommitmentARB(GLenum target,GLintptr offset,GLsizeiptr size,GLboolean commit)const;
void glProgramLocalParameters4fvEXT(GLenum target,GLuint index,GLsizei count,const GLfloat* params)const;
void glStencilFunc(GLenum func,GLint ref,GLuint mask)const;
void glGetVertexAttribdvNV(GLuint index,GLenum pname,GLdouble* params)const;
void glTexCoord3dv(const GLdouble* v)const;
void glGetQueryBufferObjectiv(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)const;
void glTexGenxOES(GLenum coord,GLenum pname,GLfixed param)const;
void glMultiTexCoord1fvARB(GLenum target,const GLfloat* v)const;
void glLightEnviSGIX(GLenum pname,GLint param)const;
void glGetProgramPipelineiv(GLuint pipeline,GLenum pname,GLint* params)const;
void glVertexStream2ivATI(GLenum stream,const GLint* coords)const;
void glGetColorTableEXT(GLenum target,GLenum format,GLenum type,void* data)const;
void glGetShaderInfoLog(GLuint shader,GLsizei bufSize,GLsizei* length,GLchar* infoLog)const;
void glGetOcclusionQueryuivNV(GLuint id,GLenum pname,GLuint* params)const;
void glInvalidateNamedFramebufferSubData(GLuint framebuffer,GLsizei numAttachments,const GLenum* attachments,GLint x,GLint y,GLsizei width,GLsizei height)const;
void glVertexAttribL1i64NV(GLuint index,GLint64EXT x)const;
void glVDPAUInitNV(const void* vdpDevice,const void* getProcAddress)const;
void glVertexAttrib1hvNV(GLuint index,const GLhalfNV* v)const;
void glVertexAttribI4i(GLuint index,GLint x,GLint y,GLint z,GLint w)const;
void glRasterPos2iv(const GLint* v)const;
void glGetIntegerui64i_vNV(GLenum value,GLuint index,GLuint64EXT* result)const;
void glUniformHandleui64NV(GLint location,GLuint64 value)const;
void glWindowPos3ivMESA(const GLint* v)const;
void glBlendEquationSeparate(GLenum modeRGB,GLenum modeAlpha)const;
void glDrawElementsInstancedARB(GLenum mode,GLsizei count,GLenum type,const void* indices,GLsizei primcount)const;
GLuint glGetSubroutineIndex(GLuint program,GLenum shadertype,const GLchar* name)const;
void glVertexAttrib2sv(GLuint index,const GLshort* v)const;
void glSamplePatternSGIS(GLenum pattern)const;
void glEGLImageTargetRenderbufferStorageOES(GLenum target,GLeglImageOES image)const;
void glPushAttrib(GLbitfield mask)const;
void glVertex3hNV(GLhalfNV x,GLhalfNV y,GLhalfNV z)const;
void glRasterPos3xvOES(const GLfixed* coords)const;
void glPathParameterfNV(GLuint path,GLenum pname,GLfloat value)const;
void glGetUniformi64vNV(GLuint program,GLint location,GLint64EXT* params)const;
void glLightiv(GLenum light,GLenum pname,const GLint* params)const;
void glMaterialxvOES(GLenum face,GLenum pname,const GLfixed* param)const;
void glNamedProgramLocalParameter4fEXT(GLuint program,GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
void glVertexAttribL1dEXT(GLuint index,GLdouble x)const;
void glGetnUniformdvARB(GLuint program,GLint location,GLsizei bufSize,GLdouble* params)const;
void glSecondaryColor3bEXT(GLbyte red,GLbyte green,GLbyte blue)const;
void glBeginPerfQueryINTEL(GLuint queryHandle)const;
void glProgramUniform1uivEXT(GLuint program,GLint location,GLsizei count,const GLuint* value)const;
void glImageTransformParameterivHP(GLenum target,GLenum pname,const GLint* params)const;
void glDeleteBuffers(GLsizei n,const GLuint* buffers)const;
void glBindProgramPipeline(GLuint pipeline)const;
void glScissor(GLint x,GLint y,GLsizei width,GLsizei height)const;
void glProgramUniform4fv(GLuint program,GLint location,GLsizei count,const GLfloat* value)const;
void glGetBooleanv(GLenum pname,GLboolean* params)const;
void glMaterialfv(GLenum face,GLenum pname,const GLfloat* params)const;
void glWindowPos4fvMESA(const GLfloat* v)const;
void glVertexAttribIPointerEXT(GLuint index,GLint size,GLenum type,GLsizei stride,const void* pointer)const;
void glProgramBufferParametersfvNV(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLfloat* params)const;
void glAlphaFuncxOES(GLenum func,GLfixed ref)const;
void glMultiDrawArraysIndirectAMD(GLenum mode,const void* indirect,GLsizei primcount,GLsizei stride)const;
void glNormalStream3ivATI(GLenum stream,const GLint* coords)const;
void glTextureImage3DMultisampleNV(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)const;
void glProgramUniform4uivEXT(GLuint program,GLint location,GLsizei count,const GLuint* value)const;
void glReplacementCodeusvSUN(const GLushort* code)const;
GLint glPollInstrumentsSGIX(GLint* marker_p)const;
void glGetTextureLevelParameteriv(GLuint texture,GLint level,GLenum pname,GLint* params)const;
void glVertexAttribI2uiv(GLuint index,const GLuint* v)const;
void glMapControlPointsNV(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLint uorder,GLint vorder,GLboolean packed,const void* points)const;
void glColor4dv(const GLdouble* v)const;
void glInvalidateBufferSubData(GLuint buffer,GLintptr offset,GLsizeiptr length)const;
void glMultiTexCoord1hNV(GLenum target,GLhalfNV s)const;
void glPointParameterfv(GLenum pname,const GLfloat* params)const;
void glUniformMatrix2fvARB(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glUniform2fv(GLint location,GLsizei count,const GLfloat* value)const;
void glVertexPointerListIBM(GLint size,GLenum type,GLint stride,const void** pointer,GLint ptrstride)const;
void glGetMultiTexGenfvEXT(GLenum texunit,GLenum coord,GLenum pname,GLfloat* params)const;
void glGetMinmaxEXT(GLenum target,GLboolean reset,GLenum format,GLenum type,void* values)const;
GLboolean glIsFenceNV(GLuint fence)const;
void glMatrixFrustumEXT(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)const;
void glDispatchComputeIndirect(GLintptr indirect)const;
void glMultiTexCoord4bOES(GLenum texture,GLbyte s,GLbyte t,GLbyte r,GLbyte q)const;
void glProgramEnvParameter4dARB(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
void glProgramUniform1uiEXT(GLuint program,GLint location,GLuint v0)const;
void glBindBufferRange(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)const;
void glNormal3iv(const GLint* v)const;
void glVertexAttribL3dv(GLuint index,const GLdouble* v)const;
void glGetUniformdv(GLuint program,GLint location,GLdouble* params)const;
void glGetMultiTexLevelParameterfvEXT(GLenum texunit,GLenum target,GLint level,GLenum pname,GLfloat* params)const;
void glFinalCombinerInputNV(GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)const;
void glCullParameterdvEXT(GLenum pname,GLdouble* params)const;
void glMultiTexCoord4s(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)const;
void glMapVertexAttrib1fAPPLE(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat* points)const;
void glConvolutionParameterfEXT(GLenum target,GLenum pname,GLfloat params)const;
void glTexCoord1iv(const GLint* v)const;
void glProgramUniform3fvEXT(GLuint program,GLint location,GLsizei count,const GLfloat* value)const;
void glColor3uiv(const GLuint* v)const;
void glListBase(GLuint base)const;
void glTexCoord2bOES(GLbyte s,GLbyte t)const;
GLuint glBindMaterialParameterEXT(GLenum face,GLenum value)const;
void glGlobalAlphaFactorubSUN(GLubyte factor)const;
void glVertexAttribL1ui64NV(GLuint index,GLuint64EXT x)const;
void glPointParameterfSGIS(GLenum pname,GLfloat param)const;
void glGetImageTransformParameterivHP(GLenum target,GLenum pname,GLint* params)const;
void glColorSubTableEXT(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void* data)const;
void glPixelTexGenParameterfvSGIS(GLenum pname,const GLfloat* params)const;
GLenum glClientWaitSync(GLsync sync,GLbitfield flags,GLuint64 timeout)const;
void glQueryObjectParameteruiAMD(GLenum target,GLuint id,GLenum pname,GLuint param)const;
void glVertexAttribs1fvNV(GLuint index,GLsizei count,const GLfloat* v)const;
void glVertexAttrib4NusvARB(GLuint index,const GLushort* v)const;
void glVariantPointerEXT(GLuint id,GLenum type,GLuint stride,const void* addr)const;
void glTextureBuffer(GLuint texture,GLenum internalformat,GLuint buffer)const;
void glVertexAttribI1uiEXT(GLuint index,GLuint x)const;
void glInvalidateTexImage(GLuint texture,GLint level)const;
void glProgramEnvParametersI4ivNV(GLenum target,GLuint index,GLsizei count,const GLint* params)const;
GLenum glPathGlyphIndexArrayNV(GLuint firstPathName,GLenum fontTarget,const void* fontName,GLbitfield fontStyle,GLuint firstGlyphIndex,GLsizei numGlyphs,GLuint pathParameterTemplate,GLfloat emScale)const;
void glCopyImageSubData(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)const;
void glGetUniformSubroutineuiv(GLenum shadertype,GLint location,GLuint* params)const;
void glBindVertexBuffer(GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)const;
void glMultiTexCoord1iARB(GLenum target,GLint s)const;
void glDebugMessageInsert(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar* buf)const;
void glBeginVertexShaderEXT()const;
GLboolean glIsVariantEnabledEXT(GLuint id,GLenum cap)const;
void glPassThroughxOES(GLfixed token)const;
GLboolean glIsSampler(GLuint sampler)const;
void glConservativeRasterParameterfNV(GLenum pname,GLfloat value)const;
void glMultiTexGenivEXT(GLenum texunit,GLenum coord,GLenum pname,const GLint* params)const;
void glNamedFramebufferTexture2DEXT(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)const;
void glCopyTexSubImage1D(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)const;
void glTexCoord1i(GLint s)const;
GLenum glCheckFramebufferStatus(GLenum target)const;
void glDrawElementArrayAPPLE(GLenum mode,GLint first,GLsizei count)const;
void glTexCoord1d(GLdouble s)const;
void glTexCoord1f(GLfloat s)const;
void glFragmentLightivSGIX(GLenum light,GLenum pname,const GLint* params)const;
void glBindImageTexture(GLuint unit,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLenum format)const;
void glTransformFeedbackVaryings(GLuint program,GLsizei count,const GLchar*const* varyings,GLenum bufferMode)const;
void glDrawRangeElements(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const GLvoid* indices)const;
void glTexCoord1s(GLshort s)const;
void glBindBufferBase(GLenum target,GLuint index,GLuint buffer)const;
void glColor3bv(const GLbyte* v)const;
void glSyncTextureINTEL(GLuint texture)const;
void glCreateSamplers(GLsizei n,GLuint* samplers)const;
void glCombinerParameterfNV(GLenum pname,GLfloat param)const;
void glGetArrayObjectivATI(GLenum array,GLenum pname,GLint* params)const;
void glMultiDrawArrays(GLenum mode,const GLint* first,const GLsizei* count,GLsizei drawcount)const;
void glSampleMapATI(GLuint dst,GLuint interp,GLenum swizzle)const;
void glProgramUniform2i64ARB(GLuint program,GLint location,GLint64 x,GLint64 y)const;
void glBinormal3ivEXT(const GLint* v)const;
void glMultiDrawArraysIndirectCountARB(GLenum mode,GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)const;
void glUniformBufferEXT(GLuint program,GLint location,GLuint buffer)const;
void glWindowPos2ivMESA(const GLint* v)const;
void glTexCoordP4ui(GLenum type,GLuint coords)const;
void glMultiTexSubImage1DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void* pixels)const;
void glProgramUniformMatrix2x3fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glBufferDataARB(GLenum target,GLsizeiptrARB size,const void* data,GLenum usage)const;
void glVertexAttribIFormat(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)const;
void glCreateFramebuffers(GLsizei n,GLuint* framebuffers)const;
void glNormalStream3dvATI(GLenum stream,const GLdouble* coords)const;
void glClearAccum(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)const;
void glUniform3i64vNV(GLint location,GLsizei count,const GLint64EXT* value)const;
void glNormal3fVertex3fSUN(GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)const;
void glUniform2uivEXT(GLint location,GLsizei count,const GLuint* value)const;
void glBeginQuery(GLenum target,GLuint id)const;
void glStencilThenCoverStrokePathInstancedNV(GLsizei numPaths,GLenum pathNameType,const void* paths,GLuint pathBase,GLint reference,GLuint mask,GLenum coverMode,GLenum transformType,const GLfloat* transformValues)const;
void glBindBuffer(GLenum target,GLuint buffer)const;
void glMap2d(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble* points)const;
void glMap2f(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat* points)const;
void glMakeImageHandleResidentNV(GLuint64 handle,GLenum access)const;
void glUniformMatrix2x4fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glGetMultiTexParameterfvEXT(GLenum texunit,GLenum target,GLenum pname,GLfloat* params)const;
void glDepthRangeIndexed(GLuint index,GLdouble n,GLdouble f)const;
void glMultiTexCoord1s(GLenum target,GLshort s)const;
void glMatrixScalefEXT(GLenum mode,GLfloat x,GLfloat y,GLfloat z)const;
GLenum glGetError()const;
void glGetTexEnviv(GLenum target,GLenum pname,GLint* params)const;
GLuint glBindTextureUnitParameterEXT(GLenum unit,GLenum value)const;
void glGetnUniformfvARB(GLuint program,GLint location,GLsizei bufSize,GLfloat* params)const;
void glReplacementCodeuiNormal3fVertex3fvSUN(const GLuint* rc,const GLfloat* n,const GLfloat* v)const;
void glDeletePerfQueryINTEL(GLuint queryHandle)const;
void glActiveVaryingNV(GLuint program,const GLchar* name)const;
void glGetActiveUniformARB(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei* length,GLint* size,GLenum* type,GLcharARB* name)const;
void glVertexAttribI3ivEXT(GLuint index,const GLint* v)const;
void glEvalCoord1d(GLdouble u)const;
void glNamedCopyBufferSubDataEXT(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)const;
void glEvalCoord1f(GLfloat u)const;
void glPixelMapfv(GLenum map,GLsizei mapsize,const GLfloat* values)const;
void glVertexAttribI1ivEXT(GLuint index,const GLint* v)const;
GLsync glCreateSyncFromCLeventARB(struct _cl_context* context,struct _cl_event* event,GLbitfield flags)const;
void glGetPixelMapusv(GLenum map,GLushort* values)const;
void glGetnColorTableARB(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void* table)const;
void glAccum(GLenum op,GLfloat value)const;
void glRasterPos3sv(const GLshort* v)const;
void glTexCoord2iv(const GLint* v)const;
void glBlendFunciARB(GLuint buf,GLenum src,GLenum dst)const;
void glProgramUniform3i64vARB(GLuint program,GLint location,GLsizei count,const GLint64* value)const;
void glGetFramebufferAttachmentParameteriv(GLenum target,GLenum attachment,GLenum pname,GLint* params)const;
void glProgramUniform4ui(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)const;
void glStencilMask(GLuint mask)const;
void glResetHistogramEXT(GLenum target)const;
void glLightxOES(GLenum light,GLenum pname,GLfixed param)const;
void glNamedBufferData(GLuint buffer,GLsizeiptr size,const void* data,GLenum usage)const;
void glVertexStream3sATI(GLenum stream,GLshort x,GLshort y,GLshort z)const;
void glVertexAttrib3fvARB(GLuint index,const GLfloat* v)const;
void glClearNamedBufferSubData(GLuint buffer,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void* data)const;
void glProgramUniformHandleui64ARB(GLuint program,GLint location,GLuint64 value)const;
void glUniform3iARB(GLint location,GLint v0,GLint v1,GLint v2)const;
GLhandleARB glCreateProgramObjectARB()const;
void glMultiTexCoord1dvARB(GLenum target,const GLdouble* v)const;
void glGetObjectParameterfvARB(GLhandleARB obj,GLenum pname,GLfloat* params)const;
void glRectsv(const GLshort* v1,const GLshort* v2)const;
void glMultiTexImage2DEXT(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void* pixels)const;
void glProgramUniform1i64NV(GLuint program,GLint location,GLint64EXT x)const;
void glGetObjectBufferivATI(GLuint buffer,GLenum pname,GLint* params)const;
void glUniform4i64ARB(GLint location,GLint64 x,GLint64 y,GLint64 z,GLint64 w)const;
void glReplacementCodeuiColor4ubVertex3fvSUN(const GLuint* rc,const GLubyte* c,const GLfloat* v)const;
void glBlendFuncSeparateINGR(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)const;
void glGetVideoCaptureStreamfvNV(GLuint video_capture_slot,GLuint stream,GLenum pname,GLfloat* params)const;
void glVertexAttrib2fARB(GLuint index,GLfloat x,GLfloat y)const;
void glGetTexGeniv(GLenum coord,GLenum pname,GLint* params)const;
void glPixelStorei(GLenum pname,GLint param)const;
void glGetCompressedTextureSubImage(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei bufSize,void* pixels)const;
void glCopyImageSubDataNV(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)const;
void glActiveShaderProgram(GLuint pipeline,GLuint program)const;
void glVertexStream1iATI(GLenum stream,GLint x)const;
void glPatchParameterfv(GLenum pname,const GLfloat* values)const;
GLboolean glIsFramebufferEXT(GLuint framebuffer)const;
void glTextureStorage2D(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)const;
void glProgramUniform1ui64ARB(GLuint program,GLint location,GLuint64 x)const;
void glTexBufferRange(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)const;
void glGetPixelTexGenParameterivSGIS(GLenum pname,GLint* params)const;
void glTextureSubImage3DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void* pixels)const;
void glClipControl(GLenum origin,GLenum depth)const;
void glGetProgramResourceiv(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum* props,GLsizei bufSize,GLsizei* length,GLint* params)const;
void glMultiTexCoordP2uiv(GLenum texture,GLenum type,const GLuint* coords)const;
void glVertexAttribI3ui(GLuint index,GLuint x,GLuint y,GLuint z)const;
void glSampleMaskSGIS(GLclampf value,GLboolean invert)const;
void glVertexAttrib4NivARB(GLuint index,const GLint* v)const;
void glGlobalAlphaFactorfSUN(GLfloat factor)const;
void glBlendEquationSeparateIndexedAMD(GLuint buf,GLenum modeRGB,GLenum modeAlpha)const;
void glGetPerfCounterInfoINTEL(GLuint queryId,GLuint counterId,GLuint counterNameLength,GLchar* counterName,GLuint counterDescLength,GLchar* counterDesc,GLuint* counterOffset,GLuint* counterDataSize,GLuint* counterTypeEnum,GLuint* counterDataTypeEnum,GLuint64* rawCounterMaxValue)const;
void glDeleteProgramsNV(GLsizei n,const GLuint* programs)const;
void glPixelZoomxOES(GLfixed xfactor,GLfixed yfactor)const;
void glGetCombinerOutputParameterivNV(GLenum stage,GLenum portion,GLenum pname,GLint* params)const;
void glRasterPos2xvOES(const GLfixed* coords)const;
void glGetTexImage(GLenum target,GLint level,GLenum format,GLenum type,GLvoid* pixels)const;
void glVertexArrayVertexBuffers(GLuint vaobj,GLuint first,GLsizei count,const GLuint* buffers,const GLintptr* offsets,const GLsizei* strides)const;
void glUniform1ui64NV(GLint location,GLuint64EXT x)const;
void glProgramParameteri(GLuint program,GLenum pname,GLint value)const;
void glNormal3xOES(GLfixed nx,GLfixed ny,GLfixed nz)const;
void glGetMapfv(GLenum target,GLenum query,GLfloat* v)const;
void glVertexStream2dvATI(GLenum stream,const GLdouble* coords)const;
void glPathStencilDepthOffsetNV(GLfloat factor,GLfloat units)const;
GLboolean glIsStateNV(GLuint state)const;
void glGetIntegerui64vNV(GLenum value,GLuint64EXT* result)const;
void glGetImageTransformParameterfvHP(GLenum target,GLenum pname,GLfloat* params)const;
void glRasterPos2fv(const GLfloat* v)const;
void glVertex3xOES(GLfixed x,GLfixed y)const;
void glProgramUniform2dvEXT(GLuint program,GLint location,GLsizei count,const GLdouble* value)const;
void glWeightPointerARB(GLint size,GLenum type,GLsizei stride,const void* pointer)const;
void glFinishFenceNV(GLuint fence)const;
void glDepthRangexOES(GLfixed n,GLfixed f)const;
void glEnableVertexArrayAttribEXT(GLuint vaobj,GLuint index)const;
void glProgramUniform2uivEXT(GLuint program,GLint location,GLsizei count,const GLuint* value)const;
void glGetDoubleIndexedvEXT(GLenum target,GLuint index,GLdouble* data)const;
void glWindowPos2fMESA(GLfloat x,GLfloat y)const;
void glSecondaryColor3b(GLbyte red,GLbyte green,GLbyte blue)const;
void glCopyConvolutionFilter1DEXT(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)const;
void glWindowPos2sv(const GLshort* v)const;
void glBindFramebufferEXT(GLenum target,GLuint framebuffer)const;
GLuint glCreateShader(GLenum type)const;
GLuint glGenPathsNV(GLsizei range)const;
void glGenRenderbuffers(GLsizei n,GLuint* renderbuffers)const;
void glCopyTexSubImage2D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
void glVertexAttrib4ubvARB(GLuint index,const GLubyte* v)const;
void glDrawTextureNV(GLuint texture,GLuint sampler,GLfloat x0,GLfloat y0,GLfloat x1,GLfloat y1,GLfloat z,GLfloat s0,GLfloat t0,GLfloat s1,GLfloat t1)const;
void glVertexAttribs1svNV(GLuint index,GLsizei count,const GLshort* v)const;
void glClearNamedBufferSubDataEXT(GLuint buffer,GLenum internalformat,GLsizeiptr offset,GLsizeiptr size,GLenum format,GLenum type,const void* data)const;
void glBlendFuncSeparate(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)const;
void glPointParameterfARB(GLenum pname,GLfloat param)const;
void glTexCoord2fv(const GLfloat* v)const;
void glGetVariantFloatvEXT(GLuint id,GLenum value,GLfloat* data)const;
void glVertexP2ui(GLenum type,GLuint value)const;
void glWindowPos2dMESA(GLdouble x,GLdouble y)const;
void glTexCoord4fv(const GLfloat* v)const;
void glBindFragDataLocationEXT(GLuint program,GLuint color,const GLchar* name)const;
void glCompressedTexSubImage1DARB(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void* data)const;
void glGetTextureImageEXT(GLuint texture,GLenum target,GLint level,GLenum format,GLenum type,void* pixels)const;
void glFogCoordd(GLdouble coord)const;
void glPointSize(GLfloat size)const;
void glBindTextureUnit(GLuint unit,GLuint texture)const;
void glProgramEnvParameterI4uiNV(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)const;
void glGetProgramPipelineInfoLog(GLuint pipeline,GLsizei bufSize,GLsizei* length,GLchar* infoLog)const;
void glProgramUniform4i64vARB(GLuint program,GLint location,GLsizei count,const GLint64* value)const;
void glVertexAttrib4Nuiv(GLuint index,const GLuint* v)const;
void glGetUniformfvARB(GLhandleARB programObj,GLint location,GLfloat* params)const;
void glWaitSync(GLsync sync,GLbitfield flags,GLuint64 timeout)const;
void glUniform3i(GLint location,GLint v0,GLint v1,GLint v2)const;
void glBlendEquationSeparatei(GLuint buf,GLenum modeRGB,GLenum modeAlpha)const;
void glVertexAttrib2hvNV(GLuint index,const GLhalfNV* v)const;
void glTextureParameterivEXT(GLuint texture,GLenum target,GLenum pname,const GLint* params)const;
void glUniform3d(GLint location,GLdouble x,GLdouble y,GLdouble z)const;
void glUniform3f(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)const;
void glActiveProgramEXT(GLuint program)const;
void glDeleteVertexArrays(GLsizei n,const GLuint* arrays)const;
void glUniform3ui64vARB(GLint location,GLsizei count,const GLuint64* value)const;
void glProgramUniform1ui64vARB(GLuint program,GLint location,GLsizei count,const GLuint64* value)const;
void glTextureParameterfEXT(GLuint texture,GLenum target,GLenum pname,GLfloat param)const;
void glSetFragmentShaderConstantATI(GLuint dst,const GLfloat* value)const;
void glColorSubTable(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const GLvoid* data)const;
void glReplacementCodeuiSUN(GLuint code)const;
void glStateCaptureNV(GLuint state,GLenum mode)const;
void glBindAttribLocation(GLuint program,GLuint index,const GLchar* name)const;
void glWeightusvARB(GLint size,const GLushort* weights)const;
GLint glGetFragDataIndex(GLuint program,const GLchar* name)const;
void glMultiTexCoord2xOES(GLenum texture,GLfixed s,GLfixed t)const;
void glColor3sv(const GLshort* v)const;
void glTexCoord2fVertex3fSUN(GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)const;
void glPolygonOffsetEXT(GLfloat factor,GLfloat bias)const;
void glWeightPathsNV(GLuint resultPath,GLsizei numPaths,const GLuint* paths,const GLfloat* weights)const;
void glCombinerStageParameterfvNV(GLenum stage,GLenum pname,const GLfloat* params)const;
void glPointParameterfEXT(GLenum pname,GLfloat param)const;
void glCopyTexImage1DEXT(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)const;
void glVertex4sv(const GLshort* v)const;
void glMatrixMultfEXT(GLenum mode,const GLfloat* m)const;
void glCompressedTextureSubImage3DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void* bits)const;
void glGetTexLevelParameterxvOES(GLenum target,GLint level,GLenum pname,GLfixed* params)const;
void glVertexAttribL3dvEXT(GLuint index,const GLdouble* v)const;
void glMultiTexCoordP4ui(GLenum texture,GLenum type,GLuint coords)const;
void glGetTextureLevelParameterivEXT(GLuint texture,GLenum target,GLint level,GLenum pname,GLint* params)const;
void glAlphaFragmentOp2ATI(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)const;
void glDeleteFramebuffers(GLsizei n,const GLuint* framebuffers)const;
void glDrawArrays(GLenum mode,GLint first,GLsizei count)const;
void glGetTransformFeedbackiv(GLuint xfb,GLenum pname,GLint* param)const;
void glGetnTexImageARB(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void* img)const;
void glClear(GLbitfield mask)const;
void glVertexArrayParameteriAPPLE(GLenum pname,GLint param)const;
void glMultiTexCoord2dvARB(GLenum target,const GLdouble* v)const;
void glGetVideoCaptureStreamdvNV(GLuint video_capture_slot,GLuint stream,GLenum pname,GLdouble* params)const;
void glFragmentLightModelivSGIX(GLenum pname,const GLint* params)const;
void glVertexAttribP2ui(GLuint index,GLenum type,GLboolean normalized,GLuint value)const;
void glMultiTexCoordPointerEXT(GLenum texunit,GLint size,GLenum type,GLsizei stride,const void* pointer)const;
void glProgramUniform3iEXT(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)const;
void glTranslatef(GLfloat x,GLfloat y,GLfloat z)const;
void glVertexAttrib4Nub(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)const;
void glTranslated(GLdouble x,GLdouble y,GLdouble z)const;
void glSamplerParameterIiv(GLuint sampler,GLenum pname,const GLint* param)const;
void glTexCoord4hNV(GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)const;
void glDrawElementsIndirect(GLenum mode,GLenum type,const void* indirect)const;
void glDeletePerfMonitorsAMD(GLsizei n,GLuint* monitors)const;
GLboolean glIsRenderbufferEXT(GLuint renderbuffer)const;
void glDrawCommandsNV(GLenum primitiveMode,GLuint buffer,const GLintptr* indirects,const GLsizei* sizes,GLuint count)const;
void glUniform3ivARB(GLint location,GLsizei count,const GLint* value)const;
void glBufferSubData(GLenum target,GLintptr offset,GLsizeiptr size,const void* data)const;
void glSecondaryColor3bv(const GLbyte* v)const;
void glMatrixMultTransposedEXT(GLenum mode,const GLdouble* m)const;
void glRequestResidentProgramsNV(GLsizei n,const GLuint* programs)const;
void glAlphaFragmentOp1ATI(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)const;
void glGetQueryObjecti64v(GLuint id,GLenum pname,GLint64* params)const;
void glMatrixMult3x3fNV(GLenum matrixMode,const GLfloat* m)const;
void glColorTableParameteriv(GLenum target,GLenum pname,const GLint* params)const;
void glPathSubCommandsNV(GLuint path,GLsizei commandStart,GLsizei commandsToDelete,GLsizei numCommands,const GLubyte* commands,GLsizei numCoords,GLenum coordType,const void* coords)const;
void glGetFinalCombinerInputParameterivNV(GLenum variable,GLenum pname,GLint* params)const;
GLboolean glIsRenderbuffer(GLuint renderbuffer)const;
void glVertex3iv(const GLint* v)const;
void glTexGenfv(GLenum coord,GLenum pname,const GLfloat* params)const;
void glFrustumfOES(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)const;
void glBindVertexBuffers(GLuint first,GLsizei count,const GLuint* buffers,const GLintptr* offsets,const GLsizei* strides)const;
void glMateriali(GLenum face,GLenum pname,GLint param)const;
void glMultiTexCoord2svARB(GLenum target,const GLshort* v)const;
void glDisableVertexAttribArray(GLuint index)const;
void glWindowPos3ivARB(const GLint* v)const;
void glTexCoordFormatNV(GLint size,GLenum type,GLsizei stride)const;
void glBlitNamedFramebuffer(GLuint readFramebuffer,GLuint drawFramebuffer,GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)const;
void glMatrixLoadTransposefEXT(GLenum mode,const GLfloat* m)const;
void glMultiTexGenfEXT(GLenum texunit,GLenum coord,GLenum pname,GLfloat param)const;
void glShaderStorageBlockBinding(GLuint program,GLuint storageBlockIndex,GLuint storageBlockBinding)const;
void glMaterialf(GLenum face,GLenum pname,GLfloat param)const;
void glReplacementCodeuiColor4fNormal3fVertex3fSUN(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)const;
GLenum glCheckNamedFramebufferStatusEXT(GLuint framebuffer,GLenum target)const;
void glVertexArrayVertexAttribFormatEXT(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)const;
void glVertex2hNV(GLhalfNV x,GLhalfNV y)const;
void glDeleteVertexShaderEXT(GLuint id)const;
void glTexImage3DEXT(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void* pixels)const;
void glProgramLocalParameterI4ivNV(GLenum target,GLuint index,const GLint* params)const;
void glGlobalAlphaFactoriSUN(GLint factor)const;
void glTextureStorage1D(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width)const;
void glBinormal3sEXT(GLshort bx,GLshort by,GLshort bz)const;
void glGetProgramInterfaceiv(GLuint program,GLenum programInterface,GLenum pname,GLint* params)const;
void glMatrixIndexPointerARB(GLint size,GLenum type,GLsizei stride,const void* pointer)const;
void glTexCoordPointerEXT(GLint size,GLenum type,GLsizei stride,GLsizei count,const void* pointer)const;
void glMultiTexGeniEXT(GLenum texunit,GLenum coord,GLenum pname,GLint param)const;
void glVertexAttrib2fNV(GLuint index,GLfloat x,GLfloat y)const;
void glNamedProgramStringEXT(GLuint program,GLenum target,GLenum format,GLsizei len,const void* string)const;
void* glMapNamedBuffer(GLuint buffer,GLenum access)const;
void glGetMinmaxParameteriv(GLenum target,GLenum pname,GLint* params)const;
void glGetnUniformdv(GLuint program,GLint location,GLsizei bufSize,GLdouble* params)const;
void glEndConditionalRenderNVX()const;
void glBinormal3fEXT(GLfloat bx,GLfloat by,GLfloat bz)const;
void glNormalStream3iATI(GLenum stream,GLint nx,GLint ny,GLint nz)const;
void glProgramBufferParametersIivNV(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLint* params)const;
void glMapGrid1xOES(GLint n,GLfixed u1,GLfixed u2)const;
void glGetVertexAttribPointervARB(GLuint index,GLenum pname,void** pointer)const;
void glFlushMappedNamedBufferRangeEXT(GLuint buffer,GLintptr offset,GLsizeiptr length)const;
void glGetVertexAttribIiv(GLuint index,GLenum pname,GLint* params)const;
void glVertexP4uiv(GLenum type,const GLuint* value)const;
void glUniformui64NV(GLint location,GLuint64EXT value)const;
void glColor4fv(const GLfloat* v)const;
void glTexParameterxvOES(GLenum target,GLenum pname,const GLfixed* params)const;
void glPatchParameteri(GLenum pname,GLint value)const;
void glMap1d(GLenum target,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble* points)const;
void glGetTexFilterFuncSGIS(GLenum target,GLenum filter,GLfloat* weights)const;
void glGetTexParameteriv(GLenum target,GLenum pname,GLint* params)const;
void glVertexArrayVertexBindingDivisorEXT(GLuint vaobj,GLuint bindingindex,GLuint divisor)const;
void glMultiTexCoord3svARB(GLenum target,const GLshort* v)const;
void glBindProgramNV(GLenum target,GLuint id)const;
void glGetConvolutionParameteriv(GLenum target,GLenum pname,GLint* params)const;
void glGetProgramLocalParameterfvARB(GLenum target,GLuint index,GLfloat* params)const;
GLuint glGenFragmentShadersATI(GLuint range)const;
void glTexBumpParameterivATI(GLenum pname,const GLint* param)const;
void glGetNamedFramebufferAttachmentParameteriv(GLuint framebuffer,GLenum attachment,GLenum pname,GLint* params)const;
void glGetnSeparableFilter(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void* row,GLsizei columnBufSize,void* column,void* span)const;
void glNormal3xvOES(const GLfixed* coords)const;
void glPassTexCoordATI(GLuint dst,GLuint coord,GLenum swizzle)const;
void glFramebufferTextureFaceARB(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)const;
void glProgramUniform1dv(GLuint program,GLint location,GLsizei count,const GLdouble* value)const;
void glTextureStorage2DEXT(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)const;
void glVertexArrayFogCoordOffsetEXT(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)const;
void glDeleteNamedStringARB(GLint namelen,const GLchar* name)const;
void glGenOcclusionQueriesNV(GLsizei n,GLuint* ids)const;
void glLighti(GLenum light,GLenum pname,GLint param)const;
void glTexImage1D(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLint border,GLenum format,GLenum type,const GLvoid* pixels)const;
void glLightf(GLenum light,GLenum pname,GLfloat param)const;
void glClientAttribDefaultEXT(GLbitfield mask)const;
void glVertexAttrib4bvARB(GLuint index,const GLbyte* v)const;
void glVertexAttribIFormatNV(GLuint index,GLint size,GLenum type,GLsizei stride)const;
void glStencilFuncSeparate(GLenum face,GLenum func,GLint ref,GLuint mask)const;
void glGetVertexAttribfvARB(GLuint index,GLenum pname,GLfloat* params)const;
void glVertexAttrib2dNV(GLuint index,GLdouble x,GLdouble y)const;
void glProgramUniform2iEXT(GLuint program,GLint location,GLint v0,GLint v1)const;
void glClientActiveVertexStreamATI(GLenum stream)const;
void glRasterPos3xOES(GLfixed x,GLfixed y,GLfixed z)const;
void glGetMapParameterivNV(GLenum target,GLenum pname,GLint* params)const;
void glSampleCoverage(GLclampf value,GLboolean invert)const;
void glClearDepthxOES(GLfixed depth)const;
void glTexCoord2fNormal3fVertex3fvSUN(const GLfloat* tc,const GLfloat* n,const GLfloat* v)const;
void glGetFirstPerfQueryIdINTEL(GLuint* queryId)const;
GLboolean glUnmapNamedBufferEXT(GLuint buffer)const;
void glGetTransformFeedbacki_v(GLuint xfb,GLenum pname,GLuint index,GLint* param)const;
void glUniform4fvARB(GLint location,GLsizei count,const GLfloat* value)const;
void glRenderbufferStorageMultisampleCoverageNV(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)const;
void glGetFloati_vEXT(GLenum pname,GLuint index,GLfloat* params)const;
void glBindAttribLocationARB(GLhandleARB programObj,GLuint index,const GLcharARB* name)const;
void glBufferAddressRangeNV(GLenum pname,GLuint index,GLuint64EXT address,GLsizeiptr length)const;
void glGenProgramsARB(GLsizei n,GLuint* programs)const;
void glMultiTexEnvivEXT(GLenum texunit,GLenum target,GLenum pname,const GLint* params)const;
void glSecondaryColor3uiEXT(GLuint red,GLuint green,GLuint blue)const;
void glCompressedTextureImage2DEXT(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void* bits)const;
void glUniform2i(GLint location,GLint v0,GLint v1)const;
void glCopyTexImage2DEXT(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)const;
void glUniform2d(GLint location,GLdouble x,GLdouble y)const;
void glVertexAttribL1d(GLuint index,GLdouble x)const;
void glFramebufferTextureFaceEXT(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)const;
void glFramebufferTextureLayer(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)const;
void glMultiTexCoord4bvOES(GLenum texture,const GLbyte* coords)const;
void glGetVertexArrayPointeri_vEXT(GLuint vaobj,GLuint index,GLenum pname,void** param)const;
void glNamedProgramLocalParameter4dEXT(GLuint program,GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
void glBinormal3bEXT(GLbyte bx,GLbyte by,GLbyte bz)const;
void glConvolutionFilter2DEXT(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void* image)const;
void glProgramUniform2fv(GLuint program,GLint location,GLsizei count,const GLfloat* value)const;
void glColor3fVertex3fSUN(GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)const;
void glNormal3fVertex3fvSUN(const GLfloat* n,const GLfloat* v)const;
void glCopyMultiTexSubImage3DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
void glProgramLocalParameterI4iNV(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)const;
void glProgramUniformMatrix2x4dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GLenum glPathMemoryGlyphIndexArrayNV(GLuint firstPathName,GLenum fontTarget,GLsizeiptr fontSize,const void* fontData,GLsizei faceIndex,GLuint firstGlyphIndex,GLsizei numGlyphs,GLuint pathParameterTemplate,GLfloat emScale)const;
void glDrawArraysEXT(GLenum mode,GLint first,GLsizei count)const;
void glBlendEquationEXT(GLenum mode)const;
void glStencilOp(GLenum fail,GLenum zfail,GLenum zpass)const;
void glCopyTextureSubImage2DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
void glTexEnvf(GLenum target,GLenum pname,GLfloat param)const;
void glVertexAttrib2dvNV(GLuint index,const GLdouble* v)const;
void glGenPerfMonitorsAMD(GLsizei n,GLuint* monitors)const;
void glGetInteger64i_v(GLenum target,GLuint index,GLint64* data)const;
void glGetHistogramParameterfv(GLenum target,GLenum pname,GLfloat* params)const;
void glVertexFormatNV(GLint size,GLenum type,GLsizei stride)const;
void glBlendFuncIndexedAMD(GLuint buf,GLenum src,GLenum dst)const;
void glTexEnvi(GLenum target,GLenum pname,GLint param)const;
void glMultiTexCoord1iv(GLenum target,const GLint* v)const;
GLboolean glIsEnabledi(GLenum target,GLuint index)const;
void glVertexAttribL2ui64vNV(GLuint index,const GLuint64EXT* v)const;
void glVertexAttribL4i64NV(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)const;
void glMatrixTranslatedEXT(GLenum mode,GLdouble x,GLdouble y,GLdouble z)const;
void glMakeTextureHandleResidentARB(GLuint64 handle)const;
void glMatrixMultdEXT(GLenum mode,const GLdouble* m)const;
void glBinormal3dvEXT(const GLdouble* v)const;
GLsync glImportSyncEXT(GLenum external_sync_type,GLintptr external_sync,GLbitfield flags)const;
void glGetMapiv(GLenum target,GLenum query,GLint* v)const;
void glGetListParameterfvSGIX(GLuint list,GLenum pname,GLfloat* params)const;
void glMultiTexCoord4sv(GLenum target,const GLshort* v)const;
void glPNTrianglesiATI(GLenum pname,GLint param)const;
void glBindVertexArrayAPPLE(GLuint array)const;
void glObjectPtrLabel(const void* ptr,GLsizei length,const GLchar* label)const;
GLuint glGetDebugMessageLog(GLuint count,GLsizei bufSize,GLenum* sources,GLenum* types,GLuint* ids,GLenum* severities,GLsizei* lengths,GLchar* messageLog)const;
void glTrackMatrixNV(GLenum target,GLuint address,GLenum matrix,GLenum transform)const;
void glBindFragDataLocation(GLuint program,GLuint color,const GLchar* name)const;
void glTangent3ivEXT(const GLint* v)const;
void glSecondaryColor3ubv(const GLubyte* v)const;
void glMakeTextureHandleNonResidentNV(GLuint64 handle)const;
void glVertexAttribs4ubvNV(GLuint index,GLsizei count,const GLubyte* v)const;
void glClipPlanexOES(GLenum plane,const GLfixed* equation)const;
void glMultiTexCoord3iv(GLenum target,const GLint* v)const;
void glGetnPolygonStippleARB(GLsizei bufSize,GLubyte* pattern)const;
void glUniform2i64vNV(GLint location,GLsizei count,const GLint64EXT* value)const;
void glLightModelf(GLenum pname,GLfloat param)const;
void glMultiTexSubImage2DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void* pixels)const;
void glReplacementCodeuiColor3fVertex3fSUN(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)const;
void glTangent3dvEXT(const GLdouble* v)const;
void glLightModeli(GLenum pname,GLint param)const;
void glVertexWeighthvNV(const GLhalfNV* weight)const;
void glWindowPos3iv(const GLint* v)const;
void glMultiTexCoordP1uiv(GLenum texture,GLenum type,const GLuint* coords)const;
void glTransformPathNV(GLuint resultPath,GLuint srcPath,GLenum transformType,const GLfloat* transformValues)const;
void glProgramNamedParameter4dNV(GLuint id,GLsizei len,const GLubyte* name,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
void glMultiDrawElementsIndirect(GLenum mode,GLenum type,const void* indirect,GLsizei drawcount,GLsizei stride)const;
void glProgramUniform1dEXT(GLuint program,GLint location,GLdouble x)const;
void glCallLists(GLsizei n,GLenum type,const GLvoid* lists)const;
void glNormal3hvNV(const GLhalfNV* v)const;
void glGetCombinerOutputParameterfvNV(GLenum stage,GLenum portion,GLenum pname,GLfloat* params)const;
void glVertexAttrib4sARB(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)const;
void glTexCoord3i(GLint s,GLint t,GLint r)const;
void glVertexAttribI3uiv(GLuint index,const GLuint* v)const;
void glPushDebugGroup(GLenum source,GLuint id,GLsizei length,const GLchar* message)const;
void glTexCoord3f(GLfloat s,GLfloat t,GLfloat r)const;
void glTexCoord3d(GLdouble s,GLdouble t,GLdouble r)const;
void glTexCoord2xOES(GLfixed s,GLfixed t)const;
GLushort glGetStageIndexNV(GLenum shadertype)const;
void glProgramUniform4i64vNV(GLuint program,GLint location,GLsizei count,const GLint64EXT* value)const;
void glGetNamedBufferPointervEXT(GLuint buffer,GLenum pname,void** params)const;
void glTextureBarrierNV()const;
void glColor4ubVertex3fvSUN(const GLubyte* c,const GLfloat* v)const;
GLuint glGetCommandHeaderNV(GLenum tokenID,GLuint size)const;
void glGetPerfMonitorCounterInfoAMD(GLuint group,GLuint counter,GLenum pname,void* data)const;
void glVertexAttrib1svARB(GLuint index,const GLshort* v)const;
void glCombinerParameteriNV(GLenum pname,GLint param)const;
void glMatrixMultTransposefEXT(GLenum mode,const GLfloat* m)const;
void glDetailTexFuncSGIS(GLenum target,GLsizei n,const GLfloat* points)const;
GLboolean glAreTexturesResident(GLsizei n,const GLuint* textures,GLboolean* residences)const;
void glProgramUniform2d(GLuint program,GLint location,GLdouble v0,GLdouble v1)const;
void glGetConvolutionParameterfvEXT(GLenum target,GLenum pname,GLfloat* params)const;
void glIndexPointerListIBM(GLenum type,GLint stride,const void** pointer,GLint ptrstride)const;
void glVertexAttribI4iEXT(GLuint index,GLint x,GLint y,GLint z,GLint w)const;
void glProgramUniform2f(GLuint program,GLint location,GLfloat v0,GLfloat v1)const;
void glRasterPos4sv(const GLshort* v)const;
void glColor4s(GLshort red,GLshort green,GLshort blue,GLshort alpha)const;
void glColorFragmentOp3ATI(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)const;
void glResizeBuffersMESA()const;
void glGetMinmaxParameterfv(GLenum target,GLenum pname,GLfloat* params)const;
void glClientActiveTextureARB(GLenum texture)const;
void glBindVertexArray(GLuint array)const;
void glColor4b(GLbyte red,GLbyte green,GLbyte blue,GLbyte alpha)const;
void glColor4f(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)const;
void glColor4d(GLdouble red,GLdouble green,GLdouble blue,GLdouble alpha)const;
void glColor4i(GLint red,GLint green,GLint blue,GLint alpha)const;
void glEdgeFlagFormatNV(GLsizei stride)const;
void glNamedBufferSubData(GLuint buffer,GLintptr offset,GLsizeiptr size,const void* data)const;
void glDrawElementsInstanced(GLenum mode,GLsizei count,GLenum type,const void* indices,GLsizei instancecount)const;
void glGetMultiTexParameterIivEXT(GLenum texunit,GLenum target,GLenum pname,GLint* params)const;
void glVertex2dv(const GLdouble* v)const;
void glDisableVertexArrayAttribEXT(GLuint vaobj,GLuint index)const;
GLenum glObjectUnpurgeableAPPLE(GLenum objectType,GLuint name,GLenum option)const;
void glVertexAttribs2dvNV(GLuint index,GLsizei count,const GLdouble* v)const;
void glReplacementCodeuiTexCoord2fVertex3fSUN(GLuint rc,GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)const;
void glGetMapParameterfvNV(GLenum target,GLenum pname,GLfloat* params)const;
void glProgramUniform4ivEXT(GLuint program,GLint location,GLsizei count,const GLint* value)const;
void glProgramUniform3ui64vNV(GLuint program,GLint location,GLsizei count,const GLuint64EXT* value)const;
void glRectfv(const GLfloat* v1,const GLfloat* v2)const;
void glTexFilterFuncSGIS(GLenum target,GLenum filter,GLsizei n,const GLfloat* weights)const;
void glSpriteParameterfvSGIX(GLenum pname,const GLfloat* params)const;
void glCopyMultiTexImage1DEXT(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)const;
void glGetVertexAttribIuivEXT(GLuint index,GLenum pname,GLuint* params)const;
void glUniformMatrix2x4dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GLint glGetProgramResourceLocationIndex(GLuint program,GLenum programInterface,const GLchar* name)const;
void glColor3hNV(GLhalfNV red,GLhalfNV green,GLhalfNV blue)const;
void glViewport(GLint x,GLint y,GLsizei width,GLsizei height)const;
void glProgramNamedParameter4fNV(GLuint id,GLsizei len,const GLubyte* name,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
void glGetInvariantBooleanvEXT(GLuint id,GLenum value,GLboolean* data)const;
void glTexStorage2DMultisample(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)const;
void glPixelStorex(GLenum pname,GLfixed param)const;
void glVertexAttribL1dvEXT(GLuint index,const GLdouble* v)const;
void glGetActiveSubroutineUniformiv(GLuint program,GLenum shadertype,GLuint index,GLenum pname,GLint* values)const;
void glVertexAttribPointerARB(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void* pointer)const;
void glCompressedTexSubImage2DARB(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void* data)const;
void glVertex2hvNV(const GLhalfNV* v)const;
void glTexBuffer(GLenum target,GLenum internalformat,GLuint buffer)const;
void glArrayElement(GLint i)const;
void glValidateProgram(GLuint program)const;
void glPixelStoref(GLenum pname,GLfloat param)const;
void glWindowPos3dARB(GLdouble x,GLdouble y,GLdouble z)const;
void glEvalCoord1dv(const GLdouble* u)const;
void glVertexAttribs2fvNV(GLuint index,GLsizei count,const GLfloat* v)const;
void glRecti(GLint x1,GLint y1,GLint x2,GLint y2)const;
void glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(const GLuint* rc,const GLfloat* tc,const GLfloat* c,const GLfloat* n,const GLfloat* v)const;
void glTexCoord1bOES(GLbyte s)const;
void glProgramUniform2i64vARB(GLuint program,GLint location,GLsizei count,const GLint64* value)const;
void glWindowPos2dARB(GLdouble x,GLdouble y)const;
void glGetProgramParameterdvNV(GLenum target,GLuint index,GLenum pname,GLdouble* params)const;
void glRectf(GLfloat x1,GLfloat y1,GLfloat x2,GLfloat y2)const;
void glRectd(GLdouble x1,GLdouble y1,GLdouble x2,GLdouble y2)const;
void glMap1xOES(GLenum target,GLfixed u1,GLfixed u2,GLint stride,GLint order,GLfixed points)const;
void glVertexAttrib3fvNV(GLuint index,const GLfloat* v)const;
void glReferencePlaneSGIX(const GLdouble* equation)const;
void glGetMultiTexGendvEXT(GLenum texunit,GLenum coord,GLenum pname,GLdouble* params)const;
void glGetCombinerInputParameterfvNV(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLfloat* params)const;
GLuint64 glGetTextureSamplerHandleARB(GLuint texture,GLuint sampler)const;
void glBindTexture(GLenum target,GLuint texture)const;
void glRects(GLshort x1,GLshort y1,GLshort x2,GLshort y2)const;
void glGetActiveAttribARB(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei* length,GLint* size,GLenum* type,GLcharARB* name)const;
void glHistogramEXT(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)const;
GLuint64 glGetTextureSamplerHandleNV(GLuint texture,GLuint sampler)const;
void glDetachShader(GLuint program,GLuint shader)const;
void glFinishTextureSUNX()const;
void glUniformMatrix3x4dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glVertexAttrib4fARB(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
void glGetPathColorGenivNV(GLenum color,GLenum pname,GLint* value)const;
GLint glGetProgramResourceLocation(GLuint program,GLenum programInterface,const GLchar* name)const;
void glVertexArrayAttribLFormat(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)const;
void glGetTexLevelParameterfv(GLenum target,GLint level,GLenum pname,GLfloat* params)const;
void glVertexArrayVertexAttribOffsetEXT(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLintptr offset)const;
void glIndexFormatNV(GLenum type,GLsizei stride)const;
void glMultiTexCoord3i(GLenum target,GLint s,GLint t,GLint r)const;
void glReplacementCodeuiVertex3fvSUN(const GLuint* rc,const GLfloat* v)const;
void glViewportIndexedfv(GLuint index,const GLfloat* v)const;
void glBindBuffersBase(GLenum target,GLuint first,GLsizei count,const GLuint* buffers)const;
void glTexBumpParameterfvATI(GLenum pname,const GLfloat* param)const;
void glMatrixIndexuivARB(GLint size,const GLuint* indices)const;
void glVertexAttrib1hNV(GLuint index,GLhalfNV x)const;
void glWindowPos3svMESA(const GLshort* v)const;
void glStencilOpSeparateATI(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)const;
void glDrawElementsBaseVertex(GLenum mode,GLsizei count,GLenum type,const void* indices,GLint basevertex)const;
void glBlendEquationSeparateiARB(GLuint buf,GLenum modeRGB,GLenum modeAlpha)const;
void glVertexAttrib1fNV(GLuint index,GLfloat x)const;
void glMapVertexAttrib2fAPPLE(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat* points)const;
void glCompressedTextureSubImage1DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void* bits)const;
void glClearBufferSubData(GLenum target,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void* data)const;
void glTexStorage1D(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)const;
void glVertexAttribI3iEXT(GLuint index,GLint x,GLint y,GLint z)const;
void glMakeTextureHandleNonResidentARB(GLuint64 handle)const;
void glMultiDrawElementArrayAPPLE(GLenum mode,const GLint* first,const GLsizei* count,GLsizei primcount)const;
void glVertexStream4dATI(GLenum stream,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
void glProgramUniformMatrix2dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glVertexAttribs2hvNV(GLuint index,GLsizei n,const GLhalfNV* v)const;
void glGetUniformiv(GLuint program,GLint location,GLint* params)const;
void glClipPlanefOES(GLenum plane,const GLfloat* equation)const;
void glRenderbufferStorage(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)const;
void glUniform4ui(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)const;
void glBindFramebuffer(GLenum target,GLuint framebuffer)const;
void glValidateProgramARB(GLhandleARB programObj)const;
void glTexGenf(GLenum coord,GLenum pname,GLfloat param)const;
void glTexGend(GLenum coord,GLenum pname,GLdouble param)const;
void glTexGeni(GLenum coord,GLenum pname,GLint param)const;
void glDeleteFramebuffersEXT(GLsizei n,const GLuint* framebuffers)const;
void glResetMinmaxEXT(GLenum target)const;
void glVertexAttrib1fvNV(GLuint index,const GLfloat* v)const;
GLboolean glIsQueryARB(GLuint id)const;
void glEnableVariantClientStateEXT(GLuint id)const;
void glScissorIndexed(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height)const;
void glGetInvariantIntegervEXT(GLuint id,GLenum value,GLint* data)const;
void glProgramLocalParameterI4uiNV(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)const;
void glConvolutionParameterxvOES(GLenum target,GLenum pname,const GLfixed* params)const;
void glGenFramebuffersEXT(GLsizei n,GLuint* framebuffers)const;
void glVertexArrayColorOffsetEXT(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)const;
void glMultiTexCoord3ivARB(GLenum target,const GLint* v)const;
void glVertexWeightfEXT(GLfloat weight)const;
void glRasterPos4dv(const GLdouble* v)const;
GLboolean glIsTextureHandleResidentARB(GLuint64 handle)const;
void glRasterPos2dv(const GLdouble* v)const;
void glWindowPos4ivMESA(const GLint* v)const;
void glGetVariantPointervEXT(GLuint id,GLenum value,void** data)const;
void* glMapNamedBufferRangeEXT(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)const;
void glGetnUniformui64vARB(GLuint program,GLint location,GLsizei bufSize,GLuint64* params)const;
GLuint glCreateShaderProgramv(GLenum type,GLsizei count,const GLchar*const* strings)const;
void glGetQueryObjectiv(GLuint id,GLenum pname,GLint* params)const;
void glPNTrianglesfATI(GLenum pname,GLfloat param)const;
void glGlobalAlphaFactorusSUN(GLushort factor)const;
void glVertexAttrib3dvNV(GLuint index,const GLdouble* v)const;
void glMultiTexCoord3sARB(GLenum target,GLshort s,GLshort t,GLshort r)const;
void glGenerateMipmap(GLenum target)const;
void glCompressedTextureSubImage2D(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void* data)const;
void glNamedRenderbufferStorageMultisampleEXT(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)const;
void glPolygonOffsetClampEXT(GLfloat factor,GLfloat units,GLfloat clamp)const;
void glTextureRangeAPPLE(GLenum target,GLsizei length,const void* pointer)const;
void glBlendEquationIndexedAMD(GLuint buf,GLenum mode)const;
void glTexCoord2d(GLdouble s,GLdouble t)const;
void glPointParameteri(GLenum pname,GLint param)const;
void glTexCoord2f(GLfloat s,GLfloat t)const;
void glColor4iv(const GLint* v)const;
void* glMapNamedBufferRange(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)const;
GLboolean glUnmapBuffer(GLenum target)const;
void glSampleMaskEXT(GLclampf value,GLboolean invert)const;
void glTexCoord2i(GLint s,GLint t)const;
void glTexCoord1xvOES(const GLfixed* coords)const;
void glVertexAttrib1sARB(GLuint index,GLshort x)const;
void glGetVertexArrayiv(GLuint vaobj,GLenum pname,GLint* param)const;
void glProgramParameter4dvNV(GLenum target,GLuint index,const GLdouble* v)const;
void glTexCoord2s(GLshort s,GLshort t)const;
void glTextureParameterIuivEXT(GLuint texture,GLenum target,GLenum pname,const GLuint* params)const;
void glGetColorTableParameterfvSGI(GLenum target,GLenum pname,GLfloat* params)const;
void glTexCoord4dv(const GLdouble* v)const;
void glVertexAttrib1svNV(GLuint index,const GLshort* v)const;
void glNamedFramebufferTextureFaceEXT(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLenum face)const;
void glProgramUniform2ui64vNV(GLuint program,GLint location,GLsizei count,const GLuint64EXT* value)const;
void glNormal3dv(const GLdouble* v)const;
void glReleaseShaderCompiler()const;
void glTexCoord3bvOES(const GLbyte* coords)const;
GLboolean glIsVertexAttribEnabledAPPLE(GLuint index,GLenum pname)const;
void glTexCoord1dv(const GLdouble* v)const;
void glReadPixels(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLvoid* pixels)const;
void glVertexAttribI3iv(GLuint index,const GLint* v)const;
void glSetFenceAPPLE(GLuint fence)const;
void glWeightsvARB(GLint size,const GLshort* weights)const;
void glShadeModel(GLenum mode)const;
void glMapGrid1d(GLint un,GLdouble u1,GLdouble u2)const;
void glGetHistogramParameterivEXT(GLenum target,GLenum pname,GLint* params)const;
void glConservativeRasterParameteriNV(GLenum pname,GLint param)const;
void glClearNamedBufferData(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void* data)const;
void glClearDepthf(GLfloat d)const;
void glCreatePerfQueryINTEL(GLuint queryId,GLuint* queryHandle)const;
void glFogCoordfEXT(GLfloat coord)const;
void glVertexAttrib2dARB(GLuint index,GLdouble x,GLdouble y)const;
void glMultiTexCoord4dARB(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)const;
void glReadnPixelsARB(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void* data)const;
void glMultiTexBufferEXT(GLenum texunit,GLenum target,GLenum internalformat,GLuint buffer)const;
void glWindowPos4dvMESA(const GLdouble* v)const;
void glInvalidateNamedFramebufferData(GLuint framebuffer,GLsizei numAttachments,const GLenum* attachments)const;
void glSecondaryColorPointerListIBM(GLint size,GLenum type,GLint stride,const void** pointer,GLint ptrstride)const;
void glRectiv(const GLint* v1,const GLint* v2)const;
void glColorP4ui(GLenum type,GLuint color)const;
void glUseProgramStages(GLuint pipeline,GLbitfield stages,GLuint program)const;
void glRasterPos3dv(const GLdouble* v)const;
void glPathTexGenNV(GLenum texCoordSet,GLenum genMode,GLint components,const GLfloat* coeffs)const;
void glVertexBlendEnviATI(GLenum pname,GLint param)const;
void glUniform3i64ARB(GLint location,GLint64 x,GLint64 y,GLint64 z)const;
void glLoadMatrixf(const GLfloat* m)const;
void glProgramUniform2dEXT(GLuint program,GLint location,GLdouble x,GLdouble y)const;
void glVertexAttribI4iv(GLuint index,const GLint* v)const;
void glNamedFramebufferDrawBuffer(GLuint framebuffer,GLenum buf)const;
void glColor4ubv(const GLubyte* v)const;
void glColor3hvNV(const GLhalfNV* v)const;
void glGetMapAttribParameterfvNV(GLenum target,GLuint index,GLenum pname,GLfloat* params)const;
void glGetBufferSubData(GLenum target,GLintptr offset,GLsizeiptr size,void* data)const;
void glGetVertexAttribLdv(GLuint index,GLenum pname,GLdouble* params)const;
void glGetnUniformuiv(GLuint program,GLint location,GLsizei bufSize,GLuint* params)const;
void glGetUniformui64vNV(GLuint program,GLint location,GLuint64EXT* params)const;
void glNamedRenderbufferStorageEXT(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)const;
void glVertexAttrib3dNV(GLuint index,GLdouble x,GLdouble y,GLdouble z)const;
void glTextureStorage1DEXT(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)const;
void glPixelTexGenParameteriSGIS(GLenum pname,GLint param)const;
void glColorTableEXT(GLenum target,GLenum internalFormat,GLsizei width,GLenum format,GLenum type,const void* table)const;
void glGenBuffers(GLsizei n,GLuint* buffers)const;
void glMultiTexCoord3xvOES(GLenum texture,const GLfixed* coords)const;
void glExecuteProgramNV(GLenum target,GLuint id,const GLfloat* params)const;
void glVariantArrayObjectATI(GLuint id,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)const;
void glColor3xvOES(const GLfixed* components)const;
void glGetnConvolutionFilterARB(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void* image)const;
void glNormalFormatNV(GLenum type,GLsizei stride)const;
void glGetInvariantFloatvEXT(GLuint id,GLenum value,GLfloat* data)const;
void glClearNamedFramebufferiv(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLint* value)const;
void glTexImage3D(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const GLvoid* pixels)const;
void glGenSamplers(GLsizei count,GLuint* samplers)const;
GLboolean glIsFramebuffer(GLuint framebuffer)const;
void glProgramUniform3dvEXT(GLuint program,GLint location,GLsizei count,const GLdouble* value)const;
void glGetVertexAttribfvNV(GLuint index,GLenum pname,GLfloat* params)const;
void glDrawRangeElementArrayAPPLE(GLenum mode,GLuint start,GLuint end,GLint first,GLsizei count)const;
void glUniform3i64NV(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)const;
void glMatrixPopEXT(GLenum mode)const;
void glVertexStream1sATI(GLenum stream,GLshort x)const;
void glGetnPixelMapuivARB(GLenum map,GLsizei bufSize,GLuint* values)const;
void glMultiTexEnviEXT(GLenum texunit,GLenum target,GLenum pname,GLint param)const;
void glVertexAttribI2iEXT(GLuint index,GLint x,GLint y)const;
void glProgramParameter4fvNV(GLenum target,GLuint index,const GLfloat* v)const;
void glNamedFramebufferSampleLocationsfvNV(GLuint framebuffer,GLuint start,GLsizei count,const GLfloat* v)const;
void glTexCoordP4uiv(GLenum type,const GLuint* coords)const;
void glRectxvOES(const GLfixed* v1,const GLfixed* v2)const;
void glGetVariantIntegervEXT(GLuint id,GLenum value,GLint* data)const;
void glDeleteLists(GLuint list,GLsizei range)const;
void glTexGendv(GLenum coord,GLenum pname,const GLdouble* params)const;
void glVertexP2uiv(GLenum type,const GLuint* value)const;
void glGetPerfMonitorGroupsAMD(GLint* numGroups,GLsizei groupsSize,GLuint* groups)const;
void glMultTransposeMatrixfARB(const GLfloat* m)const;
void glVertexAttribI2ivEXT(GLuint index,const GLint* v)const;
void glReplacementCodeuiColor4fNormal3fVertex3fvSUN(const GLuint* rc,const GLfloat* c,const GLfloat* n,const GLfloat* v)const;
void glDeleteStatesNV(GLsizei n,const GLuint* states)const;
void glGetBufferParameteri64v(GLenum target,GLenum pname,GLint64* params)const;
void glProgramUniform4dv(GLuint program,GLint location,GLsizei count,const GLdouble* value)const;
void glEdgeFlagPointerEXT(GLsizei stride,GLsizei count,const GLboolean* pointer)const;
void glVideoCaptureStreamParameterivNV(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLint* params)const;
void glVertexStream4iATI(GLenum stream,GLint x,GLint y,GLint z,GLint w)const;
void glVDPAUFiniNV()const;
void glMakeBufferNonResidentNV(GLenum target)const;
void glUniform1ui64ARB(GLint location,GLuint64 x)const;
void glStencilStrokePathNV(GLuint path,GLint reference,GLuint mask)const;
void glProgramUniform3uiv(GLuint program,GLint location,GLsizei count,const GLuint* value)const;
void glVariantuivEXT(GLuint id,const GLuint* addr)const;
void glCopyTexSubImage3DEXT(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
void glSpriteParameteriSGIX(GLenum pname,GLint param)const;
void glMultiTexCoord1sARB(GLenum target,GLshort s)const;
void glConvolutionParameterfv(GLenum target,GLenum pname,const GLfloat* params)const;
void glMakeTextureHandleResidentNV(GLuint64 handle)const;
void glMultMatrixxOES(const GLfixed* m)const;
void glTextureNormalEXT(GLenum mode)const;
void glGetQueryivARB(GLenum target,GLenum pname,GLint* params)const;
void glCompressedMultiTexImage3DEXT(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void* bits)const;
GLint glGetInstrumentsSGIX()const;
void glProgramUniformMatrix4x3fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glPointParameterf(GLenum pname,GLfloat param)const;
void glProgramUniform3dEXT(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z)const;
void glMultiTexCoord2hNV(GLenum target,GLhalfNV s,GLhalfNV t)const;
void glGetConvolutionFilterEXT(GLenum target,GLenum format,GLenum type,void* image)const;
void glVertexAttrib2hNV(GLuint index,GLhalfNV x,GLhalfNV y)const;
void glCurrentPaletteMatrixARB(GLint index)const;
void glFogxvOES(GLenum pname,const GLfixed* param)const;
void glCreateRenderbuffers(GLsizei n,GLuint* renderbuffers)const;
void glVertexAttrib4Nusv(GLuint index,const GLushort* v)const;
void glCombinerInputNV(GLenum stage,GLenum portion,GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)const;
void glDepthFunc(GLenum func)const;
void glWindowPos4fMESA(GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
void glEnableClientStateIndexedEXT(GLenum array,GLuint index)const;
void glTexCoord4iv(const GLint* v)const;
void glProgramUniform4i64ARB(GLuint program,GLint location,GLint64 x,GLint64 y,GLint64 z,GLint64 w)const;
void glBlendFunci(GLuint buf,GLenum src,GLenum dst)const;
void glResolveDepthValuesNV()const;
void glTextureColorMaskSGIS(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)const;
GLuint glCreateShaderProgramEXT(GLenum type,const GLchar* string)const;
void glBufferStorage(GLenum target,GLsizeiptr size,const void* data,GLbitfield flags)const;
void glMakeNamedBufferNonResidentNV(GLuint buffer)const;
void glRenderbufferStorageMultisampleEXT(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)const;
void glGetFloati_v(GLenum target,GLuint index,GLfloat* data)const;
void glUniform2ui64ARB(GLint location,GLuint64 x,GLuint64 y)const;
void glVertex3fv(const GLfloat* v)const;
GLint glGetUniformLocation(GLuint program,const GLchar* name)const;
void glVertexStream1svATI(GLenum stream,const GLshort* coords)const;
void glVertexStream3fATI(GLenum stream,GLfloat x,GLfloat y,GLfloat z)const;
void glNamedFramebufferDrawBuffers(GLuint framebuffer,GLsizei n,const GLenum* bufs)const;
void glUniform2ui64vNV(GLint location,GLsizei count,const GLuint64EXT* value)const;
void glTexCoordPointervINTEL(GLint size,GLenum type,const void** pointer)const;
void glUniform4fv(GLint location,GLsizei count,const GLfloat* value)const;
void glNormalPointerEXT(GLenum type,GLsizei stride,GLsizei count,const void* pointer)const;
void glVertexAttrib4hNV(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)const;
void glNormal3f(GLfloat nx,GLfloat ny,GLfloat nz)const;
void glVertexStream2iATI(GLenum stream,GLint x,GLint y)const;
void glVertexAttribP4uiv(GLuint index,GLenum type,GLboolean normalized,const GLuint* value)const;
void glCompressedTextureSubImage3D(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void* data)const;
void glAsyncMarkerSGIX(GLuint marker)const;
void glTextureStorageSparseAMD(GLuint texture,GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)const;
void glGetConvolutionParameterivEXT(GLenum target,GLenum pname,GLint* params)const;
void glEndPerfQueryINTEL(GLuint queryHandle)const;
void glFragmentLightModeliSGIX(GLenum pname,GLint param)const;
void glPrioritizeTexturesEXT(GLsizei n,const GLuint* textures,const GLclampf* priorities)const;
void glEndConditionalRender()const;
void glEnableClientState(GLenum cap)const;
void glResetHistogram(GLenum target)const;
void glGetOcclusionQueryivNV(GLuint id,GLenum pname,GLint* params)const;
void glUniform1uiEXT(GLint location,GLuint v0)const;
void glMultiTexCoord2sv(GLenum target,const GLshort* v)const;
void glTexSubImage2DEXT(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void* pixels)const;
void glProgramUniform2uiv(GLuint program,GLint location,GLsizei count,const GLuint* value)const;
void glMultiTexCoord2iARB(GLenum target,GLint s,GLint t)const;
void glGetQueryObjectuiv(GLuint id,GLenum pname,GLuint* params)const;
void glGenerateMultiTexMipmapEXT(GLenum texunit,GLenum target)const;
void glVertexAttrib4iv(GLuint index,const GLint* v)const;
void glWindowPos3dvMESA(const GLdouble* v)const;
void glLabelObjectEXT(GLenum type,GLuint object,GLsizei length,const GLchar* label)const;
void glProgramUniform1uiv(GLuint program,GLint location,GLsizei count,const GLuint* value)const;
void glFramebufferTexture(GLenum target,GLenum attachment,GLuint texture,GLint level)const;
void glMultiTexEnvfEXT(GLenum texunit,GLenum target,GLenum pname,GLfloat param)const;
void glGetTexGendv(GLenum coord,GLenum pname,GLdouble* params)const;
void glVertex4xOES(GLfixed x,GLfixed y,GLfixed z)const;
void glVertexAttribI2uivEXT(GLuint index,const GLuint* v)const;
void glNamedProgramLocalParameter4fvEXT(GLuint program,GLenum target,GLuint index,const GLfloat* params)const;
void glPointParameterfvSGIS(GLenum pname,const GLfloat* params)const;
void glGetPixelTransformParameterfvEXT(GLenum target,GLenum pname,GLfloat* params)const;
void glIndexxvOES(const GLfixed* component)const;
void glDepthMask(GLboolean flag)const;
void glProgramUniformMatrix2x4fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
GLboolean glAreProgramsResidentNV(GLsizei n,const GLuint* programs,GLboolean* residences)const;
void glColorTable(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const GLvoid* table)const;
void glBeginQueryIndexed(GLenum target,GLuint index,GLuint id)const;
void glVertexStream1dvATI(GLenum stream,const GLdouble* coords)const;
void glGetMultiTexEnvfvEXT(GLenum texunit,GLenum target,GLenum pname,GLfloat* params)const;
void glDeleteFencesNV(GLsizei n,const GLuint* fences)const;
void glVertexAttribs1dvNV(GLuint index,GLsizei count,const GLdouble* v)const;
void glVertexStream2sATI(GLenum stream,GLshort x,GLshort y)const;
void glGetnSeparableFilterARB(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void* row,GLsizei columnBufSize,void* column,void* span)const;
void glProgramUniform2dv(GLuint program,GLint location,GLsizei count,const GLdouble* value)const;
void glActiveStencilFaceEXT(GLenum face)const;
void glProgramUniform4dEXT(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
void glPointSizexOES(GLfixed size)const;
void glRasterPos2sv(const GLshort* v)const;
GLuint glBindParameterEXT(GLenum value)const;
void glTexCoord1sv(const GLshort* v)const;
void glBlendParameteriNV(GLenum pname,GLint value)const;
void glNamedProgramLocalParameter4dvEXT(GLuint program,GLenum target,GLuint index,const GLdouble* params)const;
void glProgramUniformHandleui64NV(GLuint program,GLint location,GLuint64 value)const;
void glGetTextureParameterfvEXT(GLuint texture,GLenum target,GLenum pname,GLfloat* params)const;
void glGetPathMetricsNV(GLbitfield metricQueryMask,GLsizei numPaths,GLenum pathNameType,const void* paths,GLuint pathBase,GLsizei stride,GLfloat* metrics)const;
void glVertex2i(GLint x,GLint y)const;
void glNewList(GLuint list,GLenum mode)const;
void glMatrixLoad3x3fNV(GLenum matrixMode,const GLfloat* m)const;
void glMultiTexCoord2fARB(GLenum target,GLfloat s,GLfloat t)const;
void glWeightdvARB(GLint size,const GLdouble* weights)const;
GLboolean glIsTransformFeedbackNV(GLuint id)const;
void glVertexAttribDivisorARB(GLuint index,GLuint divisor)const;
void glSecondaryColorP3uiv(GLenum type,const GLuint* color)const;
void glGetnCompressedTexImageARB(GLenum target,GLint lod,GLsizei bufSize,void* img)const;
void glGetIntegerv(GLenum pname,GLint* params)const;
void glMatrixLoaddEXT(GLenum mode,const GLdouble* m)const;
GLfloat glGetPathLengthNV(GLuint path,GLsizei startSegment,GLsizei numSegments)const;
void glProgramUniformMatrix3dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glUniform4i64NV(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)const;
void glGetHistogramEXT(GLenum target,GLboolean reset,GLenum format,GLenum type,void* values)const;
void glVertexAttrib4NuivARB(GLuint index,const GLuint* v)const;
void glMapGrid2xOES(GLint n,GLfixed u1,GLfixed u2,GLfixed v1,GLfixed v2)const;
void glTexImage2D(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const GLvoid* pixels)const;
void glWindowPos2fvARB(const GLfloat* v)const;
void glEnableIndexedEXT(GLenum target,GLuint index)const;
void glTexCoord1bvOES(const GLbyte* coords)const;
void glDrawPixels(GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid* pixels)const;
void glMultMatrixd(const GLdouble* m)const;
void glMultMatrixf(const GLfloat* m)const;
void glReplacementCodePointerSUN(GLenum type,GLsizei stride,const void** pointer)const;
void glLoadTransposeMatrixdARB(const GLdouble* m)const;
void glVertexAttrib4Nubv(GLuint index,const GLubyte* v)const;
void glVertexArrayVertexAttribIOffsetEXT(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)const;
void glCompileShaderARB(GLhandleARB shaderObj)const;
void glWindowPos3dMESA(GLdouble x,GLdouble y,GLdouble z)const;
void glNormalStream3fvATI(GLenum stream,const GLfloat* coords)const;
void glColor4usv(const GLushort* v)const;
void glMapGrid1f(GLint un,GLfloat u1,GLfloat u2)const;
void glPolygonStipple(const GLubyte* mask)const;
void glUniform4ui64ARB(GLint location,GLuint64 x,GLuint64 y,GLuint64 z,GLuint64 w)const;
void glTextureRenderbufferEXT(GLuint texture,GLenum target,GLuint renderbuffer)const;
GLint glGetSubroutineUniformLocation(GLuint program,GLenum shadertype,const GLchar* name)const;
void glGetFramebufferParameteriv(GLenum target,GLenum pname,GLint* params)const;
void glPixelMapusv(GLenum map,GLsizei mapsize,const GLushort* values)const;
void glGetSamplerParameteriv(GLuint sampler,GLenum pname,GLint* params)const;
void glVertexStream2fvATI(GLenum stream,const GLfloat* coords)const;
void glProgramStringARB(GLenum target,GLenum format,GLsizei len,const void* string)const;
void glProgramUniformMatrix3dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glSeparableFilter2D(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid* row,const GLvoid* column)const;
void glVertexAttribI1uiv(GLuint index,const GLuint* v)const;
void glTexStorage2D(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)const;
void glColor3fv(const GLfloat* v)const;
void glVertexAttribL4dvEXT(GLuint index,const GLdouble* v)const;
void glGetActiveUniform(GLuint program,GLuint index,GLsizei bufSize,GLsizei* length,GLint* size,GLenum* type,GLchar* name)const;
void glUniform2ui64vARB(GLint location,GLsizei count,const GLuint64* value)const;
void glMakeNamedBufferResidentNV(GLuint buffer,GLenum access)const;
GLenum glPathGlyphIndexRangeNV(GLenum fontTarget,const void* fontName,GLbitfield fontStyle,GLuint pathParameterTemplate,GLfloat emScale,GLuint baseAndCount[2])const;
void glColorPointer(GLint size,GLenum type,GLsizei stride,const GLvoid* ptr)const;
void glProgramEnvParameterI4ivNV(GLenum target,GLuint index,const GLint* params)const;
void glMultiTexParameterfEXT(GLenum texunit,GLenum target,GLenum pname,GLfloat param)const;
void glNamedFramebufferTextureLayer(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)const;
void glGetVertexArrayIntegervEXT(GLuint vaobj,GLenum pname,GLint* param)const;
void glVertexAttrib3dARB(GLuint index,GLdouble x,GLdouble y,GLdouble z)const;
GLboolean glVDPAUIsSurfaceNV(GLvdpauSurfaceNV surface)const;
void glMultiTexImage1DEXT(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void* pixels)const;
GLboolean glIsAsyncMarkerSGIX(GLuint marker)const;
void glGetDoublei_vEXT(GLenum pname,GLuint index,GLdouble* params)const;
void glUniform2i64NV(GLint location,GLint64EXT x,GLint64EXT y)const;
GLboolean glIsCommandListNV(GLuint list)const;
void glUniform3uiEXT(GLint location,GLuint v0,GLuint v1,GLuint v2)const;
void glTexParameterIuivEXT(GLenum target,GLenum pname,const GLuint* params)const;
void glProgramUniformMatrix4fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glVertex2fv(const GLfloat* v)const;
void glVertexAttribL3dEXT(GLuint index,GLdouble x,GLdouble y,GLdouble z)const;
void glFramebufferRenderbuffer(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)const;
GLint glGetUniformLocationARB(GLhandleARB programObj,const GLcharARB* name)const;
void glPathParameterfvNV(GLuint path,GLenum pname,const GLfloat* value)const;
void glVertexAttrib3sNV(GLuint index,GLshort x,GLshort y,GLshort z)const;
void glGetDoublei_v(GLenum target,GLuint index,GLdouble* data)const;
void glVertexAttrib1sv(GLuint index,const GLshort* v)const;
void glBindSampler(GLuint unit,GLuint sampler)const;
void glLineWidth(GLfloat width)const;
void glVertexArrayRangeAPPLE(GLsizei length,void* pointer)const;
void glBindBufferOffsetEXT(GLenum target,GLuint index,GLuint buffer,GLintptr offset)const;
void glWeightfvARB(GLint size,const GLfloat* weights)const;
void glGetIntegeri_v(GLenum target,GLuint index,GLint* data)const;
void glGetTransformFeedbackVarying(GLuint program,GLuint index,GLsizei bufSize,GLsizei* length,GLsizei* size,GLenum* type,GLchar* name)const;
void glProgramLocalParameter4fvARB(GLenum target,GLuint index,const GLfloat* params)const;
void glGetTransformFeedbackVaryingNV(GLuint program,GLuint index,GLint* location)const;
void glWindowPos2iv(const GLint* v)const;
void glVertexStream1dATI(GLenum stream,GLdouble x)const;
void glColorFragmentOp2ATI(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)const;
void glFogiv(GLenum pname,const GLint* params)const;
GLuint64 glGetTextureHandleNV(GLuint texture)const;
void glLightModeliv(GLenum pname,const GLint* params)const;
void glDepthRangef(GLfloat n,GLfloat f)const;
void glGetFragmentMaterialivSGIX(GLenum face,GLenum pname,GLint* params)const;
void glVideoCaptureStreamParameterfvNV(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLfloat* params)const;
void glDeleteProgramsARB(GLsizei n,const GLuint* programs)const;
void glWindowPos3fvARB(const GLfloat* v)const;
void glFeedbackBufferxOES(GLsizei n,GLenum type,const GLfixed* buffer)const;
void glGetTexBumpParameterfvATI(GLenum pname,GLfloat* param)const;
void glEnablei(GLenum target,GLuint index)const;
void glGetActiveSubroutineName(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei* length,GLchar* name)const;
void glDrawBuffersARB(GLsizei n,const GLenum* bufs)const;
void glBindProgramARB(GLenum target,GLuint program)const;
void glEvalCoord1fv(const GLfloat* u)const;
void glProgramUniform3ui64vARB(GLuint program,GLint location,GLsizei count,const GLuint64* value)const;
void glProgramUniformMatrix2dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glMultiTexCoord2hvNV(GLenum target,const GLhalfNV* v)const;
void glGetFloatIndexedvEXT(GLenum target,GLuint index,GLfloat* data)const;
void glSampleCoverageARB(GLfloat value,GLboolean invert)const;
void glProgramUniform2ui64vARB(GLuint program,GLint location,GLsizei count,const GLuint64* value)const;
void glPixelDataRangeNV(GLenum target,GLsizei length,const void* pointer)const;
void glVertexStream3svATI(GLenum stream,const GLshort* coords)const;
void glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(const GLuint* rc,const GLfloat* tc,const GLfloat* n,const GLfloat* v)const;
void glTexCoord3hvNV(const GLhalfNV* v)const;
void glSampleMaski(GLuint maskNumber,GLbitfield mask)const;
void glIndexFuncEXT(GLenum func,GLclampf ref)const;
void glPointParameteriNV(GLenum pname,GLint param)const;
void glUniformMatrix3x2fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glGetFramebufferParameterivEXT(GLuint framebuffer,GLenum pname,GLint* params)const;
void glUniform2i64ARB(GLint location,GLint64 x,GLint64 y)const;
void glNamedBufferStorageEXT(GLuint buffer,GLsizeiptr size,const void* data,GLbitfield flags)const;
void glNamedFramebufferTexture3DEXT(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)const;
void glVertexAttrib2dv(GLuint index,const GLdouble* v)const;
void glGetVertexArrayPointervEXT(GLuint vaobj,GLenum pname,void** param)const;
void glGetVertexAttribArrayObjectivATI(GLuint index,GLenum pname,GLint* params)const;
void glProgramUniformMatrix3fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glEnableVertexArrayEXT(GLuint vaobj,GLenum array)const;
void glColorTableParameterfvSGI(GLenum target,GLenum pname,const GLfloat* params)const;
void glEdgeFlag(GLboolean flag)const;
void glFogCoordf(GLfloat coord)const;
void glVertex3d(GLdouble x,GLdouble y,GLdouble z)const;
void glVertex3f(GLfloat x,GLfloat y,GLfloat z)const;
void glSpriteParameterivSGIX(GLenum pname,const GLint* params)const;
void glPathGlyphRangeNV(GLuint firstPathName,GLenum fontTarget,const void* fontName,GLbitfield fontStyle,GLuint firstGlyph,GLsizei numGlyphs,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)const;
void glPrimitiveBoundingBoxARB(GLfloat minX,GLfloat minY,GLfloat minZ,GLfloat minW,GLfloat maxX,GLfloat maxY,GLfloat maxZ,GLfloat maxW)const;
void glVertexAttribL3ui64vNV(GLuint index,const GLuint64EXT* v)const;
void glVertex3s(GLshort x,GLshort y,GLshort z)const;
void glTexCoordP2ui(GLenum type,GLuint coords)const;
void glProgramUniform2fvEXT(GLuint program,GLint location,GLsizei count,const GLfloat* value)const;
void glDeletePathsNV(GLuint path,GLsizei range)const;
void glPrimitiveRestartIndexNV(GLuint index)const;
void glTexCoord2fColor3fVertex3fvSUN(const GLfloat* tc,const GLfloat* c,const GLfloat* v)const;
void glTexCoordPointerListIBM(GLint size,GLenum type,GLint stride,const void** pointer,GLint ptrstride)const;
void glRectxOES(GLfixed x1,GLfixed y1,GLfixed x2,GLfixed y2)const;
void glCopyNamedBufferSubData(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)const;
void glGenProgramsNV(GLsizei n,GLuint* programs)const;
void glFragmentLightfSGIX(GLenum light,GLenum pname,GLfloat param)const;
void glTexStorage3D(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)const;
void glTextureParameteriv(GLuint texture,GLenum pname,const GLint* param)const;
void glNamedBufferDataEXT(GLuint buffer,GLsizeiptr size,const void* data,GLenum usage)const;
void glMultiTexCoord3fvARB(GLenum target,const GLfloat* v)const;
void glUniformMatrix3x4fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glSubpixelPrecisionBiasNV(GLuint xbits,GLuint ybits)const;
void glNormalPointer(GLenum type,GLsizei stride,const GLvoid* ptr)const;
void glNamedFramebufferTexture(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)const;
void glVertexAttrib4NsvARB(GLuint index,const GLshort* v)const;
void glPassThrough(GLfloat token)const;
void glSecondaryColorP3ui(GLenum type,GLuint color)const;
void glInvalidateTexSubImage(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth)const;
GLboolean glIsImageHandleResidentARB(GLuint64 handle)const;
void glTangent3fvEXT(const GLfloat* v)const;
void glProgramUniformMatrix4x3fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glBegin(GLenum mode)const;
void glEvalCoord2dv(const GLdouble* u)const;
void glColor3ubv(const GLubyte* v)const;
void glFogCoordfvEXT(const GLfloat* coord)const;
void glVertexP3ui(GLenum type,GLuint value)const;
void glLightfv(GLenum light,GLenum pname,const GLfloat* params)const;
void glVertexAttribL3i64NV(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z)const;
void glStencilClearTagEXT(GLsizei stencilTagBits,GLuint stencilClearTag)const;
void glGetActiveUniformName(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei* length,GLchar* uniformName)const;
void glTangentPointerEXT(GLenum type,GLsizei stride,const void* pointer)const;
void glUniform4ui64vNV(GLint location,GLsizei count,const GLuint64EXT* value)const;
void glDebugMessageEnableAMD(GLenum category,GLenum severity,GLsizei count,const GLuint* ids,GLboolean enabled)const;
void glProgramUniform2ui(GLuint program,GLint location,GLuint v0,GLuint v1)const;
void glCopyTexSubImage2DEXT(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
void glGenRenderbuffersEXT(GLsizei n,GLuint* renderbuffers)const;
void glNamedProgramLocalParameterI4ivEXT(GLuint program,GLenum target,GLuint index,const GLint* params)const;
void glMultiTexCoord2f(GLenum target,GLfloat s,GLfloat t)const;
void glMapGrid2d(GLint un,GLdouble u1,GLdouble u2,GLint vn,GLdouble v1,GLdouble v2)const;
void glGetMultiTexParameterIuivEXT(GLenum texunit,GLenum target,GLenum pname,GLuint* params)const;
void glBlendEquationiARB(GLuint buf,GLenum mode)const;
void glTexParameteriv(GLenum target,GLenum pname,const GLint* params)const;
void glUniform4ivARB(GLint location,GLsizei count,const GLint* value)const;
void glMatrixOrthoEXT(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)const;
void glVertexArrayVertexBuffer(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)const;
void glProgramLocalParametersI4ivNV(GLenum target,GLuint index,GLsizei count,const GLint* params)const;
void glProgramUniform4ui64vNV(GLuint program,GLint location,GLsizei count,const GLuint64EXT* value)const;
void glGetNamedStringivARB(GLint namelen,const GLchar* name,GLenum pname,GLint* params)const;
void glVertexAttribL1i64vNV(GLuint index,const GLint64EXT* v)const;
void glTransformFeedbackBufferBase(GLuint xfb,GLuint index,GLuint buffer)const;
void glIndexsv(const GLshort* c)const;
void glPointParameterivNV(GLenum pname,const GLint* params)const;
void glGetDetailTexFuncSGIS(GLenum target,GLfloat* points)const;
void glReplacementCodeuiColor3fVertex3fvSUN(const GLuint* rc,const GLfloat* c,const GLfloat* v)const;
void glProgramLocalParameter4fARB(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
void glBitmap(GLsizei width,GLsizei height,GLfloat xorig,GLfloat yorig,GLfloat xmove,GLfloat ymove,const GLubyte* bitmap)const;
void glNamedFramebufferTextureLayerEXT(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)const;
void glMultiTexGenfvEXT(GLenum texunit,GLenum coord,GLenum pname,const GLfloat* params)const;
void glGetNamedBufferSubData(GLuint buffer,GLintptr offset,GLsizeiptr size,void* data)const;
void glStencilFuncSeparateATI(GLenum frontfunc,GLenum backfunc,GLint ref,GLuint mask)const;
void glProgramUniform2iv(GLuint program,GLint location,GLsizei count,const GLint* value)const;
void glGetQueryiv(GLenum target,GLenum pname,GLint* params)const;
void glTexCoord4f(GLfloat s,GLfloat t,GLfloat r,GLfloat q)const;
void glMapGrid2f(GLint un,GLfloat u1,GLfloat u2,GLint vn,GLfloat v1,GLfloat v2)const;
void glListParameterivSGIX(GLuint list,GLenum pname,const GLint* params)const;
void glCreateQueries(GLenum target,GLsizei n,GLuint* ids)const;
void glGetSamplerParameterfv(GLuint sampler,GLenum pname,GLfloat* params)const;
void glTexCoord4i(GLint s,GLint t,GLint r,GLint q)const;
void glObjectLabel(GLenum identifier,GLuint name,GLsizei length,const GLchar* label)const;
void glProgramUniform3i64NV(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)const;
GLuint64 glGetTextureHandleARB(GLuint texture)const;
void glTexCoord4s(GLshort s,GLshort t,GLshort r,GLshort q)const;
void glUniform4iARB(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)const;
void glGetUniformIndices(GLuint program,GLsizei uniformCount,const GLchar*const* uniformNames,GLuint* uniformIndices)const;
void glMultiTexImage3DEXT(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void* pixels)const;
void glCoverageModulationTableNV(GLsizei n,const GLfloat* v)const;
void glPointParameteriv(GLenum pname,const GLint* params)const;
void glMultiTexCoord4svARB(GLenum target,const GLshort* v)const;
void glNormal3fv(const GLfloat* v)const;
void glProgramUniformMatrix3x4dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glTexCoord1fv(const GLfloat* v)const;
void glProgramUniformMatrix4x3dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glGetActiveVaryingNV(GLuint program,GLuint index,GLsizei bufSize,GLsizei* length,GLsizei* size,GLenum* type,GLchar* name)const;
void glUniform1i64vARB(GLint location,GLsizei count,const GLint64* value)const;
void glMultiTexCoord1dv(GLenum target,const GLdouble* v)const;
void glTexCoord3fv(const GLfloat* v)const;
void glMatrixTranslatefEXT(GLenum mode,GLfloat x,GLfloat y,GLfloat z)const;
void glProgramUniform1ui64vNV(GLuint program,GLint location,GLsizei count,const GLuint64EXT* value)const;
void glTextureMaterialEXT(GLenum face,GLenum mode)const;
void glMultiTexCoordP3uiv(GLenum texture,GLenum type,const GLuint* coords)const;
void glVertexAttribP3ui(GLuint index,GLenum type,GLboolean normalized,GLuint value)const;
void glInterpolatePathsNV(GLuint resultPath,GLuint pathA,GLuint pathB,GLfloat weight)const;
void glTextureBufferRange(GLuint texture,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)const;
void glVertexAttribL2dEXT(GLuint index,GLdouble x,GLdouble y)const;
void glGetPixelTransformParameterivEXT(GLenum target,GLenum pname,GLint* params)const;
void glTexCoord4xvOES(const GLfixed* coords)const;
void glGetVariantBooleanvEXT(GLuint id,GLenum value,GLboolean* data)const;
void glDepthRange(GLclampd near_val,GLclampd far_val)const;
void glGetVertexAttribdvARB(GLuint index,GLenum pname,GLdouble* params)const;
void glGetColorTableParameterfv(GLenum target,GLenum pname,GLfloat* params)const;
void glDrawArraysInstancedEXT(GLenum mode,GLint start,GLsizei count,GLsizei primcount)const;
void glDisableClientStateIndexedEXT(GLenum array,GLuint index)const;
void glDrawBuffer(GLenum mode)const;
void glMultiDrawArraysIndirectBindlessNV(GLenum mode,const void* indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)const;
void glGetnPixelMapusv(GLenum map,GLsizei bufSize,GLushort* values)const;
void glRasterPos3fv(const GLfloat* v)const;
void glClearBufferuiv(GLenum buffer,GLint drawbuffer,const GLuint* value)const;
void glGetInternalformati64v(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint64* params)const;
void glShaderSourceARB(GLhandleARB shaderObj,GLsizei count,const GLcharARB** string,const GLint* length)const;
void glShaderOp3EXT(GLenum op,GLuint res,GLuint arg1,GLuint arg2,GLuint arg3)const;
void glWindowPos2dvMESA(const GLdouble* v)const;
void glClearIndex(GLfloat c)const;
void glProvokingVertexEXT(GLenum mode)const;
void glVariantubvEXT(GLuint id,const GLubyte* addr)const;
void glFlush()const;
void glGetColorTableParameterivEXT(GLenum target,GLenum pname,GLint* params)const;
void glPresentFrameDualFillNV(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLenum target1,GLuint fill1,GLenum target2,GLuint fill2,GLenum target3,GLuint fill3)const;
GLuint glGenVertexShadersEXT(GLuint range)const;
void glProgramUniformHandleui64vARB(GLuint program,GLint location,GLsizei count,const GLuint64* values)const;
void glDepthRangefOES(GLclampf n,GLclampf f)const;
void glDrawElementsInstancedBaseVertexBaseInstance(GLenum mode,GLsizei count,GLenum type,const void* indices,GLsizei instancecount,GLint basevertex,GLuint baseinstance)const;
void glGetTexLevelParameteriv(GLenum target,GLint level,GLenum pname,GLint* params)const;
void glStencilFillPathNV(GLuint path,GLenum fillMode,GLuint mask)const;
void glWindowPos3iARB(GLint x,GLint y,GLint z)const;
void glPrioritizeTextures(GLsizei n,const GLuint* textures,const GLclampf* priorities)const;
void glWindowPos3fvMESA(const GLfloat* v)const;
void glProgramUniformMatrix3x2dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glVertex4xvOES(const GLfixed* coords)const;
void glTexStorage3DMultisample(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)const;
void glWindowPos2sARB(GLshort x,GLshort y)const;
void glStencilOpValueAMD(GLenum face,GLuint value)const;
void glProgramVertexLimitNV(GLenum target,GLint limit)const;
void glGetTexParameterPointervAPPLE(GLenum target,GLenum pname,void** params)const;
void glProgramUniform3uivEXT(GLuint program,GLint location,GLsizei count,const GLuint* value)const;
void glClampColor(GLenum target,GLenum clamp)const;
void glClearStencil(GLint s)const;
void glTexCoordP1uiv(GLenum type,const GLuint* coords)const;
void glVertexAttribs3svNV(GLuint index,GLsizei count,const GLshort* v)const;
void glMultiTexCoord3fv(GLenum target,const GLfloat* v)const;
void glVertexBlendEnvfATI(GLenum pname,GLfloat param)const;
GLboolean glIsFenceAPPLE(GLuint fence)const;
void glGetBufferParameterui64vNV(GLenum target,GLenum pname,GLuint64EXT* params)const;
void glVertexAttribI4bvEXT(GLuint index,const GLbyte* v)const;
void glUniform2fARB(GLint location,GLfloat v0,GLfloat v1)const;
void glStopInstrumentsSGIX(GLint marker)const;
void glVertexAttrib3fNV(GLuint index,GLfloat x,GLfloat y,GLfloat z)const;
void glMapVertexAttrib2dAPPLE(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble* points)const;
void glVertex2f(GLfloat x,GLfloat y)const;
void glCopyTextureImage2DEXT(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)const;
void glVertex2d(GLdouble x,GLdouble y)const;
void glSecondaryColor3bvEXT(const GLbyte* v)const;
void glMultiTexCoord4fARB(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)const;
void glPolygonOffset(GLfloat factor,GLfloat units)const;
void glTangent3bvEXT(const GLbyte* v)const;
void glHistogram(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)const;
void glGetProgramiv(GLuint program,GLenum pname,GLint* params)const;
void glMatrixIndexubvARB(GLint size,const GLubyte* indices)const;
void glVertex2s(GLshort x,GLshort y)const;
void glGetVertexAttribLui64vNV(GLuint index,GLenum pname,GLuint64EXT* params)const;
void glGetProgramStringARB(GLenum target,GLenum pname,void* string)const;
void glFlushMappedBufferRange(GLenum target,GLintptr offset,GLsizeiptr length)const;
void glVertexAttribI3uiEXT(GLuint index,GLuint x,GLuint y,GLuint z)const;
void glLineWidthxOES(GLfixed width)const;
void glProgramUniformMatrix2fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glGetTextureParameterIuivEXT(GLuint texture,GLenum target,GLenum pname,GLuint* params)const;
void glGetMultiTexEnvivEXT(GLenum texunit,GLenum target,GLenum pname,GLint* params)const;
void glPixelTexGenParameterivSGIS(GLenum pname,const GLint* params)const;
void glGenQueries(GLsizei n,GLuint* ids)const;
void glGetPixelMapfv(GLenum map,GLfloat* values)const;
void glBlendColorEXT(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)const;
void glResetMinmax(GLenum target)const;
void glGetnUniformivARB(GLuint program,GLint location,GLsizei bufSize,GLint* params)const;
void glVertexBlendARB(GLint count)const;
void glVertexAttrib4d(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GLint glGetVaryingLocationNV(GLuint program,const GLchar* name)const;
void glGetMapAttribParameterivNV(GLenum target,GLuint index,GLenum pname,GLint* params)const;
void glTexSubImage3D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const GLvoid* pixels)const;
void glDeleteSamplers(GLsizei count,const GLuint* samplers)const;
void glGetLightxOES(GLenum light,GLenum pname,GLfixed* params)const;
void glGetVertexAttribArrayObjectfvATI(GLuint index,GLenum pname,GLfloat* params)const;
void glVertexArrayNormalOffsetEXT(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)const;
void glGetBufferParameterivARB(GLenum target,GLenum pname,GLint* params)const;
void glGetTextureParameterfv(GLuint texture,GLenum pname,GLfloat* params)const;
void glDrawMeshArraysSUN(GLenum mode,GLint first,GLsizei count,GLsizei width)const;
void glVertexAttrib4dNV(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
void glGetMultisamplefvNV(GLenum pname,GLuint index,GLfloat* val)const;
void* glMapObjectBufferATI(GLuint buffer)const;
void glGetPathCommandsNV(GLuint path,GLubyte* commands)const;
void glVertexArrayTexCoordOffsetEXT(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)const;
void glGetHistogram(GLenum target,GLboolean reset,GLenum format,GLenum type,GLvoid* values)const;
void glMatrixMode(GLenum mode)const;
void glColorFormatNV(GLint size,GLenum type,GLsizei stride)const;
void glProgramUniformui64NV(GLuint program,GLint location,GLuint64EXT value)const;
void glProgramUniformMatrix4x2fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glLoadMatrixxOES(const GLfixed* m)const;
void glGetColorTableParameterfvEXT(GLenum target,GLenum pname,GLfloat* params)const;
void glRasterPos4i(GLint x,GLint y,GLint z,GLint w)const;
void glVertexAttribL2i64NV(GLuint index,GLint64EXT x,GLint64EXT y)const;
void glBindTextures(GLuint first,GLsizei count,const GLuint* textures)const;
void glMatrixRotatefEXT(GLenum mode,GLfloat angle,GLfloat x,GLfloat y,GLfloat z)const;
void glGetClipPlanexOES(GLenum plane,GLfixed* equation)const;
void glSecondaryColor3uivEXT(const GLuint* v)const;
void glGetPerfQueryInfoINTEL(GLuint queryId,GLuint queryNameLength,GLchar* queryName,GLuint* dataSize,GLuint* noCounters,GLuint* noInstances,GLuint* capsMask)const;
void glGetDoublev(GLenum pname,GLdouble* params)const;
void glBindBufferRangeEXT(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)const;
void glCompressedTexImage2D(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const GLvoid* data)const;
void* glMapBufferARB(GLenum target,GLenum access)const;
void glGetPathSpacingNV(GLenum pathListMode,GLsizei numPaths,GLenum pathNameType,const void* paths,GLuint pathBase,GLfloat advanceScale,GLfloat kerningScale,GLenum transformType,GLfloat* returnedSpacing)const;
void glUniform4dv(GLint location,GLsizei count,const GLdouble* value)const;
void glGlobalAlphaFactordSUN(GLdouble factor)const;
void glProgramUniform3dv(GLuint program,GLint location,GLsizei count,const GLdouble* value)const;
void glGetShaderSourceARB(GLhandleARB obj,GLsizei maxLength,GLsizei* length,GLcharARB* source)const;
void glVertexAttrib3dvARB(GLuint index,const GLdouble* v)const;
void glInvalidateBufferData(GLuint buffer)const;
void glMatrixLoad3x2fNV(GLenum matrixMode,const GLfloat* m)const;
void glCompressedTextureSubImage1D(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void* data)const;
void glTexCoord3xvOES(const GLfixed* coords)const;
void glGenTexturesEXT(GLsizei n,GLuint* textures)const;
void glTangent3iEXT(GLint tx,GLint ty,GLint tz)const;
void glClearTexImage(GLuint texture,GLint level,GLenum format,GLenum type,const void* data)const;
void glBinormal3bvEXT(const GLbyte* v)const;
void glUniform3fv(GLint location,GLsizei count,const GLfloat* value)const;
void glGetnPixelMapusvARB(GLenum map,GLsizei bufSize,GLushort* values)const;
void glMultiTexCoordP1ui(GLenum texture,GLenum type,GLuint coords)const;
void glClearNamedBufferDataEXT(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void* data)const;
void glUniformMatrix4dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glWindowPos3fMESA(GLfloat x,GLfloat y,GLfloat z)const;
void glDeleteRenderbuffers(GLsizei n,const GLuint* renderbuffers)const;
void glGetTextureLevelParameterfvEXT(GLuint texture,GLenum target,GLint level,GLenum pname,GLfloat* params)const;
void glGetHistogramParameterxvOES(GLenum target,GLenum pname,GLfixed* params)const;
void glMultiDrawElements(GLenum mode,const GLsizei* count,GLenum type,const void*const* indices,GLsizei drawcount)const;
void glMakeImageHandleNonResidentNV(GLuint64 handle)const;
void glTexSubImage1DEXT(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void* pixels)const;
void glNormalStream3dATI(GLenum stream,GLdouble nx,GLdouble ny,GLdouble nz)const;
void glVertexAttribL4i64vNV(GLuint index,const GLint64EXT* v)const;
void glDrawBuffers(GLsizei n,const GLenum* bufs)const;
void glCopyTextureSubImage1DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)const;
void glWindowRectanglesEXT(GLenum mode,GLsizei count,const GLint* box)const;
void glNamedFramebufferReadBuffer(GLuint framebuffer,GLenum src)const;
void glUniform2i64vARB(GLint location,GLsizei count,const GLint64* value)const;
void glVertexAttribI1uivEXT(GLuint index,const GLuint* v)const;
void glGetTexGenfv(GLenum coord,GLenum pname,GLfloat* params)const;
void glBeginQueryARB(GLenum target,GLuint id)const;
void glUniform1iARB(GLint location,GLint v0)const;
void glVertex4bvOES(const GLbyte* coords)const;
void glInvalidateSubFramebuffer(GLenum target,GLsizei numAttachments,const GLenum* attachments,GLint x,GLint y,GLsizei width,GLsizei height)const;
void glUniform1fvARB(GLint location,GLsizei count,const GLfloat* value)const;
GLboolean glTestFenceNV(GLuint fence)const;
void glBindTransformFeedback(GLenum target,GLuint id)const;
void glMultiTexCoord2iv(GLenum target,const GLint* v)const;
void glCopyMultiTexSubImage1DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)const;
void glVariantbvEXT(GLuint id,const GLbyte* addr)const;
void glTexCoord1hNV(GLhalfNV s)const;
void glGenFencesNV(GLsizei n,GLuint* fences)const;
void glRasterPos3iv(const GLint* v)const;
void glVertexAttribL2ui64NV(GLuint index,GLuint64EXT x,GLuint64EXT y)const;
void glMultiTexCoord1hvNV(GLenum target,const GLhalfNV* v)const;
void glGetnConvolutionFilter(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void* image)const;
void glNormal3bv(const GLbyte* v)const;
void glWeightbvARB(GLint size,const GLbyte* weights)const;
void glTexCoord4sv(const GLshort* v)const;
void glUniform2uiv(GLint location,GLsizei count,const GLuint* value)const;
void glBeginConditionalRenderNVX(GLuint id)const;
void glFinish()const;
void glColorTableParameterfv(GLenum target,GLenum pname,const GLfloat* params)const;
void glFragmentCoverageColorNV(GLuint color)const;
void glProgramUniform3ivEXT(GLuint program,GLint location,GLsizei count,const GLint* value)const;
void glVertexArrayVertexOffsetEXT(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)const;
void glViewportPositionWScaleNV(GLuint index,GLfloat xcoeff,GLfloat ycoeff)const;
void glGetProgramLocalParameterIuivNV(GLenum target,GLuint index,GLuint* params)const;
void glReplacementCodeuiTexCoord2fVertex3fvSUN(const GLuint* rc,const GLfloat* tc,const GLfloat* v)const;
void glUniform1uiv(GLint location,GLsizei count,const GLuint* value)const;
void glUniformMatrix2dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glIndexdv(const GLdouble* c)const;
void glSecondaryColor3ivEXT(const GLint* v)const;
void glTexCoord3iv(const GLint* v)const;
void glVertexStream4fvATI(GLenum stream,const GLfloat* coords)const;
void glDeformationMap3fSGIX(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,GLfloat w1,GLfloat w2,GLint wstride,GLint worder,const GLfloat* points)const;
void glClearDepth(GLclampd depth)const;
GLuint glGenAsyncMarkersSGIX(GLsizei range)const;
void glDisableIndexedEXT(GLenum target,GLuint index)const;
void glVertexWeightfvEXT(const GLfloat* weight)const;
void glGetProgramLocalParameterIivNV(GLenum target,GLuint index,GLint* params)const;
void glCompressedTexImage3DARB(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void* data)const;
void glProgramParameter4fNV(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
void glConvolutionParameterxOES(GLenum target,GLenum pname,GLfixed param)const;
void glInsertComponentEXT(GLuint res,GLuint src,GLuint num)const;
void glCreateTextures(GLenum target,GLsizei n,GLuint* textures)const;
void glSecondaryColor3iv(const GLint* v)const;
void glCreateBuffers(GLsizei n,GLuint* buffers)const;
void glMultiTexCoord2xvOES(GLenum texture,const GLfixed* coords)const;
void glTexGenxvOES(GLenum coord,GLenum pname,const GLfixed* params)const;
void glMultTransposeMatrixf(const GLfloat m[16])const;
void glBeginTransformFeedbackEXT(GLenum primitiveMode)const;
void glTexCoord2fColor3fVertex3fSUN(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)const;
void glNormal3sv(const GLshort* v)const;
void glFreeObjectBufferATI(GLuint buffer)const;
void glBlendBarrierNV()const;
void glUniform4i64vNV(GLint location,GLsizei count,const GLint64EXT* value)const;
void glGetnUniformuivARB(GLuint program,GLint location,GLsizei bufSize,GLuint* params)const;
void glAlphaFragmentOp3ATI(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)const;
void glProgramEnvParameters4fvEXT(GLenum target,GLuint index,GLsizei count,const GLfloat* params)const;
void glBlendFuncSeparateEXT(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)const;
void glConvolutionParameterivEXT(GLenum target,GLenum pname,const GLint* params)const;
void glPixelTexGenSGIX(GLenum mode)const;
void glDeleteProgram(GLuint program)const;
void glUniformMatrix4x3dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glGetVideoCaptureStreamivNV(GLuint video_capture_slot,GLuint stream,GLenum pname,GLint* params)const;
void glProgramUniform4uiEXT(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)const;
void glMakeImageHandleNonResidentARB(GLuint64 handle)const;
void glSecondaryColor3dEXT(GLdouble red,GLdouble green,GLdouble blue)const;
void glDeleteQueries(GLsizei n,const GLuint* ids)const;
void glNormalP3uiv(GLenum type,const GLuint* coords)const;
void glRasterPos2d(GLdouble x,GLdouble y)const;
void glInitNames()const;
void glBinormal3fvEXT(const GLfloat* v)const;
void glColor3dv(const GLdouble* v)const;
void glVertexArrayVertexAttribDivisorEXT(GLuint vaobj,GLuint index,GLuint divisor)const;
void glArrayElementEXT(GLint i)const;
void glProgramParameter4dNV(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
void glIndexxOES(GLfixed component)const;
void glUniform3uivEXT(GLint location,GLsizei count,const GLuint* value)const;
void glPopGroupMarkerEXT()const;
void glClearNamedFramebufferuiv(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLuint* value)const;
void glSetLocalConstantEXT(GLuint id,GLenum type,const void* addr)const;
void glProgramUniform1ui64NV(GLuint program,GLint location,GLuint64EXT x)const;
void glColor4hvNV(const GLhalfNV* v)const;
void glGetVertexAttribfv(GLuint index,GLenum pname,GLfloat* params)const;
void glDispatchCompute(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z)const;
void glGetActiveAttrib(GLuint program,GLuint index,GLsizei bufSize,GLsizei* length,GLint* size,GLenum* type,GLchar* name)const;
void glFragmentColorMaterialSGIX(GLenum face,GLenum mode)const;
void glTexSubImage2D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid* pixels)const;
void glGetnMinmaxARB(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void* values)const;
void glLogicOp(GLenum opcode)const;
void glProgramUniformMatrix3x4fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glWindowPos4iMESA(GLint x,GLint y,GLint z,GLint w)const;
void glPixelTransferf(GLenum pname,GLfloat param)const;
void glGetTextureParameterIuiv(GLuint texture,GLenum pname,GLuint* params)const;
void glMultiTexCoord1xOES(GLenum texture,GLfixed s)const;
void glProgramUniformMatrix4dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glGetnUniformiv(GLuint program,GLint location,GLsizei bufSize,GLint* params)const;
void glFramebufferTexture1DEXT(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)const;
void glVertexPointervINTEL(GLint size,GLenum type,const void** pointer)const;
void glTextureParameterIiv(GLuint texture,GLenum pname,const GLint* params)const;
void glGetSeparableFilterEXT(GLenum target,GLenum format,GLenum type,void* row,void* column,void* span)const;
void glMultiTexCoord3iARB(GLenum target,GLint s,GLint t,GLint r)const;
void glRasterPos4xvOES(const GLfixed* coords)const;
void glDrawTransformFeedbackStream(GLenum mode,GLuint id,GLuint stream)const;
void glVertex3hvNV(const GLhalfNV* v)const;
void glVertexArrayMultiTexCoordOffsetEXT(GLuint vaobj,GLuint buffer,GLenum texunit,GLint size,GLenum type,GLsizei stride,GLintptr offset)const;
void glProvokingVertex(GLenum mode)const;
void glAccumxOES(GLenum op,GLfixed value)const;
void glShaderBinary(GLsizei count,const GLuint* shaders,GLenum binaryformat,const void* binary,GLsizei length)const;
void glGetMultiTexGenivEXT(GLenum texunit,GLenum coord,GLenum pname,GLint* params)const;
void glPointParameterxvOES(GLenum pname,const GLfixed* params)const;
void glCreateStatesNV(GLsizei n,GLuint* states)const;
void glClearDepthdNV(GLdouble depth)const;
void glClearColorIuiEXT(GLuint red,GLuint green,GLuint blue,GLuint alpha)const;
void glBindMultiTextureEXT(GLenum texunit,GLenum target,GLuint texture)const;
void glTexGeniv(GLenum coord,GLenum pname,const GLint* params)const;
void glDrawElements(GLenum mode,GLsizei count,GLenum type,const GLvoid* indices)const;
void glProgramUniform4iv(GLuint program,GLint location,GLsizei count,const GLint* value)const;
void glDisableVertexArrayEXT(GLuint vaobj,GLenum array)const;
void glProgramUniform3ui64NV(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)const;
void glClientActiveTexture(GLenum texture)const;
void glMultiTexParameterIivEXT(GLenum texunit,GLenum target,GLenum pname,const GLint* params)const;
void glUniform1i64ARB(GLint location,GLint64 x)const;
void glUniform1iv(GLint location,GLsizei count,const GLint* value)const;
void glVertexAttribArrayObjectATI(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLuint buffer,GLuint offset)const;
void glUniform2iARB(GLint location,GLint v0,GLint v1)const;
void glDrawArraysInstanced(GLenum mode,GLint first,GLsizei count,GLsizei instancecount)const;
void glVertexAttrib2sNV(GLuint index,GLshort x,GLshort y)const;
void glTexBufferEXT(GLenum target,GLenum internalformat,GLuint buffer)const;
void glVertexStream2fATI(GLenum stream,GLfloat x,GLfloat y)const;
void glDebugMessageCallbackAMD(GLDEBUGPROCAMD callback,void* userParam)const;
void glSamplerParameteriv(GLuint sampler,GLenum pname,const GLint* param)const;
void glVertexAttrib4uiv(GLuint index,const GLuint* v)const;
void glEndQueryIndexed(GLenum target,GLuint index)const;
void glNormalStream3sATI(GLenum stream,GLshort nx,GLshort ny,GLshort nz)const;
void glProgramParameteriARB(GLuint program,GLenum pname,GLint value)const;
void glTexEnvxOES(GLenum target,GLenum pname,GLfixed param)const;
void glProgramUniform1iv(GLuint program,GLint location,GLsizei count,const GLint* value)const;
void glDisableVertexAttribAPPLE(GLuint index,GLenum pname)const;
void glBindRenderbuffer(GLenum target,GLuint renderbuffer)const;
void glMultiTexSubImage3DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void* pixels)const;
GLboolean glIsProgram(GLuint program)const;
void glMultiDrawElementsIndirectAMD(GLenum mode,GLenum type,const void* indirect,GLsizei primcount,GLsizei stride)const;
void glGetProgramInfoLog(GLuint program,GLsizei bufSize,GLsizei* length,GLchar* infoLog)const;
void glGetLocalConstantBooleanvEXT(GLuint id,GLenum value,GLboolean* data)const;
void glPixelTransformParameteriEXT(GLenum target,GLenum pname,GLint param)const;
void glTexCoord4bOES(GLbyte s,GLbyte t,GLbyte r,GLbyte q)const;
void glVertexAttrib4fv(GLuint index,const GLfloat* v)const;
void glProgramUniformMatrix2x3dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glProgramEnvParametersI4uivNV(GLenum target,GLuint index,GLsizei count,const GLuint* params)const;
void glTexCoord3xOES(GLfixed s,GLfixed t,GLfixed r)const;
void glLoadTransposeMatrixfARB(const GLfloat* m)const;
void glImageTransformParameteriHP(GLenum target,GLenum pname,GLint param)const;
void glMultiTexCoord4xOES(GLenum texture,GLfixed s,GLfixed t,GLfixed r,GLfixed q)const;
void glVertexAttribs3fvNV(GLuint index,GLsizei count,const GLfloat* v)const;
void glVertexAttrib2fv(GLuint index,const GLfloat* v)const;
void glUniform3ui64NV(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)const;
void glCombinerParameterfvNV(GLenum pname,const GLfloat* params)const;
void glFragmentMaterialiSGIX(GLenum face,GLenum pname,GLint param)const;
void glGetBooleani_v(GLenum target,GLuint index,GLboolean* data)const;
GLuint glGetProgramResourceIndex(GLuint program,GLenum programInterface,const GLchar* name)const;
void glBeginConditionalRenderNV(GLuint id,GLenum mode)const;
void glDisableClientState(GLenum cap)const;
void glPathFogGenNV(GLenum genMode)const;
void glStencilThenCoverFillPathNV(GLuint path,GLenum fillMode,GLuint mask,GLenum coverMode)const;
void glVertexArrayIndexOffsetEXT(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)const;
void glProgramBufferParametersIuivNV(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLuint* params)const;
void glPixelTransformParameterivEXT(GLenum target,GLenum pname,const GLint* params)const;
void glDisableClientStateiEXT(GLenum array,GLuint index)const;
void glTexBufferARB(GLenum target,GLenum internalformat,GLuint buffer)const;
void glGetLocalConstantIntegervEXT(GLuint id,GLenum value,GLint* data)const;
void glColor4uiv(const GLuint* v)const;
void glProgramUniform3i(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)const;
void glMultiDrawElementsIndirectBindlessCountNV(GLenum mode,GLenum type,const void* indirect,GLsizei drawCount,GLsizei maxDrawCount,GLsizei stride,GLint vertexBufferCount)const;
void glGetBufferPointervARB(GLenum target,GLenum pname,void** params)const;
void glMultiTexParameterIuivEXT(GLenum texunit,GLenum target,GLenum pname,const GLuint* params)const;
void glEvalMesh2(GLenum mode,GLint i1,GLint i2,GLint j1,GLint j2)const;
void glEvalMesh1(GLenum mode,GLint i1,GLint i2)const;
void glProgramUniform3f(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)const;
void glStencilThenCoverFillPathInstancedNV(GLsizei numPaths,GLenum pathNameType,const void* paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum coverMode,GLenum transformType,const GLfloat* transformValues)const;
void glProgramUniform3d(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2)const;
void glMapVertexAttrib1dAPPLE(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble* points)const;
void glEvalCoord2fv(const GLfloat* u)const;
void glGetUniformivARB(GLhandleARB programObj,GLint location,GLint* params)const;
void glLoadTransposeMatrixd(const GLdouble m[16])const;
void glLoadTransposeMatrixf(const GLfloat m[16])const;
void glGetPointervEXT(GLenum pname,void** params)const;
void glEndConditionalRenderNV()const;
void glTexCoord2fNormal3fVertex3fSUN(GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)const;
void glUniform3i64vARB(GLint location,GLsizei count,const GLint64* value)const;
void glProgramUniform2uiEXT(GLuint program,GLint location,GLuint v0,GLuint v1)const;
void glVertexAttribI1ui(GLuint index,GLuint x)const;
void glProgramNamedParameter4dvNV(GLuint id,GLsizei len,const GLubyte* name,const GLdouble* v)const;
void glCompileCommandListNV(GLuint list)const;
void glGetRenderbufferParameterivEXT(GLenum target,GLenum pname,GLint* params)const;
void glGetnPolygonStipple(GLsizei bufSize,GLubyte* pattern)const;
GLboolean glIsBufferResidentNV(GLenum target)const;
void glSecondaryColor3ubvEXT(const GLubyte* v)const;
void glGetNamedRenderbufferParameterivEXT(GLuint renderbuffer,GLenum pname,GLint* params)const;
void glNamedFramebufferSampleLocationsfvARB(GLuint framebuffer,GLuint start,GLsizei count,const GLfloat* v)const;
void glMultiTexGendvEXT(GLenum texunit,GLenum coord,GLenum pname,const GLdouble* params)const;
void glVertexArrayRangeNV(GLsizei length,const void* pointer)const;
GLboolean glIsTextureHandleResidentNV(GLuint64 handle)const;
void glGetProgramEnvParameterdvARB(GLenum target,GLuint index,GLdouble* params)const;
GLboolean glIsNamedStringARB(GLint namelen,const GLchar* name)const;
void glSecondaryColorFormatNV(GLint size,GLenum type,GLsizei stride)const;
void glVertexAttrib4ubvNV(GLuint index,const GLubyte* v)const;
void glTagSampleBufferSGIX()const;
void glVDPAUUnregisterSurfaceNV(GLvdpauSurfaceNV surface)const;
void glGetPerfQueryIdByNameINTEL(GLchar* queryName,GLuint* queryId)const;
void glGetInteger64v(GLenum pname,GLint64* data)const;
void glClipPlane(GLenum plane,const GLdouble* equation)const;
void glColor4ubVertex3fSUN(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)const;
void glIndexub(GLubyte c)const;
void glGetProgramEnvParameterfvARB(GLenum target,GLuint index,GLfloat* params)const;
void glVertexAttrib4usvARB(GLuint index,const GLushort* v)const;
void glNamedFramebufferRenderbuffer(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)const;
void glProgramUniformMatrix3x4dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
GLboolean glTestFenceAPPLE(GLuint fence)const;
void glVertexAttrib4Niv(GLuint index,const GLint* v)const;
void glVertexAttribL2i64vNV(GLuint index,const GLint64EXT* v)const;
void glColorP4uiv(GLenum type,const GLuint* color)const;
void glUniformMatrix2x3fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glCallCommandListNV(GLuint list)const;
void glClearBufferiv(GLenum buffer,GLint drawbuffer,const GLint* value)const;
void glNamedStringARB(GLenum type,GLint namelen,const GLchar* name,GLint stringlen,const GLchar* string)const;
void glMatrixMult3x2fNV(GLenum matrixMode,const GLfloat* m)const;
void glGetNamedProgramStringEXT(GLuint program,GLenum target,GLenum pname,void* string)const;
void glGetnHistogramARB(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void* values)const;
void glGetTextureLevelParameterfv(GLuint texture,GLint level,GLenum pname,GLfloat* params)const;
void glMultiTexCoord1fv(GLenum target,const GLfloat* v)const;
void glBitmapxOES(GLsizei width,GLsizei height,GLfixed xorig,GLfixed yorig,GLfixed xmove,GLfixed ymove,const GLubyte* bitmap)const;
void glGetSamplerParameterIuiv(GLuint sampler,GLenum pname,GLuint* params)const;
void glTexCoordP3ui(GLenum type,GLuint coords)const;
void glTextureSubImage1D(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void* pixels)const;
void glVertexAttribLPointerEXT(GLuint index,GLint size,GLenum type,GLsizei stride,const void* pointer)const;
void glFogCoordPointerEXT(GLenum type,GLsizei stride,const void* pointer)const;
void glWindowPos3s(GLshort x,GLshort y,GLshort z)const;
void glVertexAttribs2svNV(GLuint index,GLsizei count,const GLshort* v)const;
void glTextureImage3DEXT(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void* pixels)const;
void glWindowPos3i(GLint x,GLint y,GLint z)const;
void glWindowPos3d(GLdouble x,GLdouble y,GLdouble z)const;
void glWindowPos3f(GLfloat x,GLfloat y,GLfloat z)const;
GLboolean glIsEnabledIndexedEXT(GLenum target,GLuint index)const;
void glGetNamedProgramivEXT(GLuint program,GLenum target,GLenum pname,GLint* params)const;
void glVertex3xvOES(const GLfixed* coords)const;
void glColor3us(GLushort red,GLushort green,GLushort blue)const;
void glBeginPerfMonitorAMD(GLuint monitor)const;
void glProgramUniformMatrix4x3dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glGetNamedProgramLocalParameterIuivEXT(GLuint program,GLenum target,GLuint index,GLuint* params)const;
void glReadnPixels(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void* data)const;
void glMultiTexCoord4f(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)const;
void glColor3ub(GLubyte red,GLubyte green,GLubyte blue)const;
void glMultiTexCoord4d(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)const;
void glVertexAttribL3ui64NV(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)const;
void glColor3ui(GLuint red,GLuint green,GLuint blue)const;
void glProgramUniform4fvEXT(GLuint program,GLint location,GLsizei count,const GLfloat* value)const;
void glVertexAttrib2sARB(GLuint index,GLshort x,GLshort y)const;
void glMultiTexCoord4i(GLenum target,GLint s,GLint t,GLint r,GLint q)const;
GLenum glCheckFramebufferStatusEXT(GLenum target)const;
void glGetnMapivARB(GLenum target,GLenum query,GLsizei bufSize,GLint* v)const;
void glMultiTexCoord1ivARB(GLenum target,const GLint* v)const;
void glDisableVertexAttribArrayARB(GLuint index)const;
void glGetPolygonStipple(GLubyte* mask)const;
void glVertexAttribI4ui(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)const;
void glGetPathDashArrayNV(GLuint path,GLfloat* dashArray)const;
void glMultiTexRenderbufferEXT(GLenum texunit,GLenum target,GLuint renderbuffer)const;
void glCopyTextureSubImage1D(GLuint texture,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)const;
void glDeleteOcclusionQueriesNV(GLsizei n,const GLuint* ids)const;
void glVertex4hvNV(const GLhalfNV* v)const;
void glGetnTexImage(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void* pixels)const;
void glProgramLocalParameter4dARB(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
void glBlendEquation(GLenum mode)const;
void glUnlockArraysEXT()const;
void glGetQueryObjectui64vEXT(GLuint id,GLenum pname,GLuint64* params)const;
void glVertexAttribI4uivEXT(GLuint index,const GLuint* v)const;
void glUniform1i64vNV(GLint location,GLsizei count,const GLint64EXT* value)const;
void glMultiTexCoord3dv(GLenum target,const GLdouble* v)const;
void glColor4sv(const GLshort* v)const;
void glVertexStream4ivATI(GLenum stream,const GLint* coords)const;
void glPopClientAttrib()const;
void glClearBufferData(GLenum target,GLenum internalformat,GLenum format,GLenum type,const void* data)const;
void glGetProgramivNV(GLuint id,GLenum pname,GLint* params)const;
void glBeginTransformFeedback(GLenum primitiveMode)const;
void glFinishObjectAPPLE(GLenum object,GLint name)const;
void glGetMinmaxParameterivEXT(GLenum target,GLenum pname,GLint* params)const;
void glColor3iv(const GLint* v)const;
void glVertexAttrib3sv(GLuint index,const GLshort* v)const;
void glCompressedTexImage1D(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const GLvoid* data)const;
void glDeleteTransformFeedbacks(GLsizei n,const GLuint* ids)const;
void glGetVideoi64vNV(GLuint video_slot,GLenum pname,GLint64EXT* params)const;
void glDrawRangeElementsBaseVertex(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void* indices,GLint basevertex)const;
void glUniform4i64vARB(GLint location,GLsizei count,const GLint64* value)const;
void glTextureStorage3DMultisampleEXT(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)const;
void glGetTexParameterfv(GLenum target,GLenum pname,GLfloat* params)const;
void glProgramUniformui64vNV(GLuint program,GLint location,GLsizei count,const GLuint64EXT* value)const;
void glCompressedMultiTexImage1DEXT(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void* bits)const;
void glProgramUniform2ivEXT(GLuint program,GLint location,GLsizei count,const GLint* value)const;
void glPushGroupMarkerEXT(GLsizei length,const GLchar* marker)const;
void glVertexAttrib1dv(GLuint index,const GLdouble* v)const;
void glMatrixLoadIdentityEXT(GLenum mode)const;
void glMultTransposeMatrixxOES(const GLfixed* m)const;
void glGetPixelMapxv(GLenum map,GLint size,GLfixed* values)const;
void glFramebufferSampleLocationsfvARB(GLenum target,GLuint start,GLsizei count,const GLfloat* v)const;
void glGetLightiv(GLenum light,GLenum pname,GLint* params)const;
void glBlendFuncSeparatei(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)const;
void glGetBooleanIndexedvEXT(GLenum target,GLuint index,GLboolean* data)const;
void glGetProgramSubroutineParameteruivNV(GLenum target,GLuint index,GLuint* param)const;
void glUniform2ui(GLint location,GLuint v0,GLuint v1)const;
void glApplyFramebufferAttachmentCMAAINTEL()const;
void glWindowPos2fv(const GLfloat* v)const;
void glDisablei(GLenum target,GLuint index)const;
void glSelectPerfMonitorCountersAMD(GLuint monitor,GLboolean enable,GLuint group,GLint numCounters,GLuint* counterList)const;
void glGetVertexAttribLi64vNV(GLuint index,GLenum pname,GLint64EXT* params)const;
void glBlendFuncSeparateiARB(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)const;
void glWeightuivARB(GLint size,const GLuint* weights)const;
void glWindowPos2iARB(GLint x,GLint y)const;
void glGetProgramLocalParameterdvARB(GLenum target,GLuint index,GLdouble* params)const;
void glGetUniformui64vARB(GLuint program,GLint location,GLuint64* params)const;
void glGetSynciv(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei* length,GLint* values)const;
void glMakeImageHandleResidentARB(GLuint64 handle,GLenum access)const;
void glGetProgramNamedParameterfvNV(GLuint id,GLsizei len,const GLubyte* name,GLfloat* params)const;
void glTextureStorage3D(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)const;
void glVertexAttrib4svNV(GLuint index,const GLshort* v)const;
void glProgramUniform2i(GLuint program,GLint location,GLint v0,GLint v1)const;
void glListDrawCommandsStatesClientNV(GLuint list,GLuint segment,const void** indirects,const GLsizei* sizes,const GLuint* states,const GLuint* fbos,GLuint count)const;
void glProgramLocalParametersI4uivNV(GLenum target,GLuint index,GLsizei count,const GLuint* params)const;
void glBeginTransformFeedbackNV(GLenum primitiveMode)const;
void glGetProgramBinary(GLuint program,GLsizei bufSize,GLsizei* length,GLenum* binaryFormat,void* binary)const;
void glBinormal3iEXT(GLint bx,GLint by,GLint bz)const;
void glEvalPoint1(GLint i)const;
void glEvalPoint2(GLint i,GLint j)const;
void glPauseTransformFeedback()const;
void glWindowPos2sMESA(GLshort x,GLshort y)const;
void glGlobalAlphaFactorbSUN(GLbyte factor)const;
void glCreateTransformFeedbacks(GLsizei n,GLuint* ids)const;
void glTexturePageCommitmentEXT(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean commit)const;
void glTransformFeedbackVaryingsNV(GLuint program,GLsizei count,const GLint* locations,GLenum bufferMode)const;
void glTexSubImage1D(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const GLvoid* pixels)const;
void glConvolutionParameterfvEXT(GLenum target,GLenum pname,const GLfloat* params)const;
void glBlitFramebufferEXT(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)const;
void glUniformMatrix4fvARB(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glProgramEnvParameter4dvARB(GLenum target,GLuint index,const GLdouble* params)const;
void glSecondaryColor3hNV(GLhalfNV red,GLhalfNV green,GLhalfNV blue)const;
void glVertexAttribP3uiv(GLuint index,GLenum type,GLboolean normalized,const GLuint* value)const;
void glFogCoordFormatNV(GLenum type,GLsizei stride)const;
void glGetMultiTexLevelParameterivEXT(GLenum texunit,GLenum target,GLint level,GLenum pname,GLint* params)const;
GLboolean glIsOcclusionQueryNV(GLuint id)const;
void glCompressedTexImage2DARB(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void* data)const;
void glGetProgramEnvParameterIuivNV(GLenum target,GLuint index,GLuint* params)const;
void glVertexAttrib4sv(GLuint index,const GLshort* v)const;
void glVertexAttrib4fvARB(GLuint index,const GLfloat* v)const;
void glLoadName(GLuint name)const;
void glBindVertexShaderEXT(GLuint id)const;
void glGetNamedProgramLocalParameterIivEXT(GLuint program,GLenum target,GLuint index,GLint* params)const;
void glProgramUniform3uiEXT(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)const;
void glProgramUniformMatrix4x2dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glTexCoord1hvNV(const GLhalfNV* v)const;
void glLoadMatrixd(const GLdouble* m)const;
void glTexParameterfv(GLenum target,GLenum pname,const GLfloat* params)const;
void glVariantdvEXT(GLuint id,const GLdouble* addr)const;
void glCullParameterfvEXT(GLenum pname,GLfloat* params)const;
void glUniform3dv(GLint location,GLsizei count,const GLdouble* value)const;
void glProgramUniform3fv(GLuint program,GLint location,GLsizei count,const GLfloat* value)const;
GLboolean glIsBufferARB(GLuint buffer)const;
void glMultiTexCoord1bOES(GLenum texture,GLbyte s)const;
void glFogCoordhNV(GLhalfNV fog)const;
void glFramebufferSampleLocationsfvNV(GLenum target,GLuint start,GLsizei count,const GLfloat* v)const;
GLuint glGenSymbolsEXT(GLenum datatype,GLenum storagetype,GLenum range,GLuint components)const;
void glGetConvolutionFilter(GLenum target,GLenum format,GLenum type,GLvoid* image)const;
void glProgramUniform1fvEXT(GLuint program,GLint location,GLsizei count,const GLfloat* value)const;
void glGetNextPerfQueryIdINTEL(GLuint queryId,GLuint* nextQueryId)const;
void glCompressedTexImage1DARB(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void* data)const;
void glBindSamplers(GLuint first,GLsizei count,const GLuint* samplers)const;
void glGetProgramEnvParameterIivNV(GLenum target,GLuint index,GLint* params)const;
void glGetQueryObjectui64v(GLuint id,GLenum pname,GLuint64* params)const;
void glVertexAttribL4ui64vNV(GLuint index,const GLuint64EXT* v)const;
void glGetVideoivNV(GLuint video_slot,GLenum pname,GLint* params)const;
void glGetTextureImage(GLuint texture,GLint level,GLenum format,GLenum type,GLsizei bufSize,void* pixels)const;
void glProgramUniform1fv(GLuint program,GLint location,GLsizei count,const GLfloat* value)const;
void glUniformMatrix4fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glColorMask(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)const;
void glBeginFragmentShaderATI()const;
void glMultiDrawArraysEXT(GLenum mode,const GLint* first,const GLsizei* count,GLsizei primcount)const;
void glGenNamesAMD(GLenum identifier,GLuint num,GLuint* names)const;
void glPathParameteriNV(GLuint path,GLenum pname,GLint value)const;
void glCreateCommandListsNV(GLsizei n,GLuint* lists)const;
void glDeleteProgramPipelines(GLsizei n,const GLuint* pipelines)const;
void glCopyColorSubTableEXT(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)const;
void glVariantsvEXT(GLuint id,const GLshort* addr)const;
void glGenProgramPipelines(GLsizei n,GLuint* pipelines)const;
void glVertexArrayEdgeFlagOffsetEXT(GLuint vaobj,GLuint buffer,GLsizei stride,GLintptr offset)const;
void glWindowPos2s(GLshort x,GLshort y)const;
void glSecondaryColor3iEXT(GLint red,GLint green,GLint blue)const;
void glWindowPos2i(GLint x,GLint y)const;
void glWindowPos2f(GLfloat x,GLfloat y)const;
void glWindowPos2d(GLdouble x,GLdouble y)const;
void glUniform4uivEXT(GLint location,GLsizei count,const GLuint* value)const;
void glOrthoxOES(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f)const;
void glUniformSubroutinesuiv(GLenum shadertype,GLsizei count,const GLuint* indices)const;
void glRectdv(const GLdouble* v1,const GLdouble* v2)const;
void glProgramUniform1i64vNV(GLuint program,GLint location,GLsizei count,const GLint64EXT* value)const;
void glVertexAttribI4uiEXT(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)const;
void glSecondaryColor3ubEXT(GLubyte red,GLubyte green,GLubyte blue)const;
void glCompressedMultiTexSubImage1DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void* bits)const;
void glMultiTexGendEXT(GLenum texunit,GLenum coord,GLenum pname,GLdouble param)const;
void glColorP3uiv(GLenum type,const GLuint* color)const;
void glFogCoordfv(const GLfloat* coord)const;
void glCompileShader(GLuint shader)const;
void glTexCoord2hNV(GLhalfNV s,GLhalfNV t)const;
void glUniform1uivEXT(GLint location,GLsizei count,const GLuint* value)const;
void glMatrixLoadTransposedEXT(GLenum mode,const GLdouble* m)const;
void glIndexfv(const GLfloat* c)const;
void glGetCompressedTextureImage(GLuint texture,GLint level,GLsizei bufSize,void* pixels)const;
void glGetUniformuivEXT(GLuint program,GLint location,GLuint* params)const;
void glGetnPixelMapfvARB(GLenum map,GLsizei bufSize,GLfloat* values)const;
void glFramebufferTextureEXT(GLenum target,GLenum attachment,GLuint texture,GLint level)const;
void glVertexAttribIPointer(GLuint index,GLint size,GLenum type,GLsizei stride,const void* pointer)const;
void glMultiTexCoordP3ui(GLenum texture,GLenum type,GLuint coords)const;
void glEvaluateDepthValuesARB()const;
void glGetNamedBufferParameteriv(GLuint buffer,GLenum pname,GLint* params)const;
void glGetNamedProgramLocalParameterfvEXT(GLuint program,GLenum target,GLuint index,GLfloat* params)const;
void glColor4fNormal3fVertex3fvSUN(const GLfloat* c,const GLfloat* n,const GLfloat* v)const;
void glSeparableFilter2DEXT(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void* row,const void* column)const;
void glTexParameterxOES(GLenum target,GLenum pname,GLfixed param)const;
void glClearAccumxOES(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)const;
void glInvalidateFramebuffer(GLenum target,GLsizei numAttachments,const GLenum* attachments)const;
void glWeightubvARB(GLint size,const GLubyte* weights)const;
void glVertexAttrib1d(GLuint index,GLdouble x)const;
void glVertexAttrib1f(GLuint index,GLfloat x)const;
void glVertex4fv(const GLfloat* v)const;
void glClearNamedFramebufferfi(GLuint framebuffer,GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)const;
void glGetQueryBufferObjectuiv(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)const;
void glClearNamedFramebufferfv(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLfloat* value)const;
void glEndVertexShaderEXT()const;
void glVertexAttrib1s(GLuint index,GLshort x)const;
void glMultiTexCoord4dvARB(GLenum target,const GLdouble* v)const;
void glMultiTexCoord1sv(GLenum target,const GLshort* v)const;
void glUniform1ui64vNV(GLint location,GLsizei count,const GLuint64EXT* value)const;
void glGetClipPlanefOES(GLenum plane,GLfloat* equation)const;
void glRasterPos2s(GLshort x,GLshort y)const;
void glWeightivARB(GLint size,const GLint* weights)const;
void glMultiTexCoord4hvNV(GLenum target,const GLhalfNV* v)const;
void glNormal3hNV(GLhalfNV nx,GLhalfNV ny,GLhalfNV nz)const;
void glGetSeparableFilter(GLenum target,GLenum format,GLenum type,GLvoid* row,GLvoid* column,GLvoid* span)const;
void glGetPathTexGenivNV(GLenum texCoordSet,GLenum pname,GLint* value)const;
void glColor4bv(const GLbyte* v)const;
void glRasterPos2f(GLfloat x,GLfloat y)const;
void glNamedBufferPageCommitmentARB(GLuint buffer,GLintptr offset,GLsizeiptr size,GLboolean commit)const;
void glLoadIdentity()const;
void glRasterPos2i(GLint x,GLint y)const;
void glRasterPos4iv(const GLint* v)const;
void glMultiTexCoord2fvARB(GLenum target,const GLfloat* v)const;
void glUniformMatrix4x3fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glClearBufferfv(GLenum buffer,GLint drawbuffer,const GLfloat* value)const;
void glMultiTexCoord4hNV(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q)const;
void glTextureBarrier()const;
void glReplacementCodeuivSUN(const GLuint* code)const;
void glDeleteAsyncMarkersSGIX(GLuint marker,GLsizei range)const;
void glTexCoord2bvOES(const GLbyte* coords)const;
void glEvalCoord2xOES(GLfixed u,GLfixed v)const;
void glGetSharpenTexFuncSGIS(GLenum target,GLfloat* points)const;
void glProgramUniformHandleui64vNV(GLuint program,GLint location,GLsizei count,const GLuint64* values)const;
void glIglooInterfaceSGIX(GLenum pname,const void* params)const;
void glWindowPos2dvARB(const GLdouble* v)const;
void glClearBufferfi(GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)const;
void glDrawArraysIndirect(GLenum mode,const void* indirect)const;
void glGenVertexArrays(GLsizei n,GLuint* arrays)const;
void glGetTransformFeedbacki64_v(GLuint xfb,GLenum pname,GLuint index,GLint64* param)const;
void glEnableVertexArrayAttrib(GLuint vaobj,GLuint index)const;
void glProgramUniformMatrix3x2dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glVertexStream4fATI(GLenum stream,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
void glVertexBindingDivisor(GLuint bindingindex,GLuint divisor)const;
void glGetSamplerParameterIiv(GLuint sampler,GLenum pname,GLint* params)const;
void glGetCoverageModulationTableNV(GLsizei bufsize,GLfloat* v)const;
void glDepthRangedNV(GLdouble zNear,GLdouble zFar)const;
void glVertexAttrib3f(GLuint index,GLfloat x,GLfloat y,GLfloat z)const;
void glMultiDrawRangeElementArrayAPPLE(GLenum mode,GLuint start,GLuint end,const GLint* first,const GLsizei* count,GLsizei primcount)const;
void glVertexAttribFormatNV(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride)const;
void glGetQueryBufferObjecti64v(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)const;
void glGetVertexAttribdv(GLuint index,GLenum pname,GLdouble* params)const;
void glGetUniformi64vARB(GLuint program,GLint location,GLint64* params)const;
GLboolean glAreTexturesResidentEXT(GLsizei n,const GLuint* textures,GLboolean* residences)const;
GLhandleARB glGetHandleARB(GLenum pname)const;
void glVideoCaptureStreamParameterdvNV(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLdouble* params)const;
void glMapParameterivNV(GLenum target,GLenum pname,const GLint* params)const;
GLboolean glIsVertexArray(GLuint array)const;
void glSecondaryColor3sEXT(GLshort red,GLshort green,GLshort blue)const;
void glGetTexParameterIivEXT(GLenum target,GLenum pname,GLint* params)const;
void glFrameTerminatorGREMEDY()const;
void glBlendBarrierKHR()const;
void glVertexAttrib4NubARB(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)const;
void glPrimitiveRestartNV()const;
void glVertexAttribL1ui64vARB(GLuint index,const GLuint64EXT* v)const;
void glVertexAttribI4ivEXT(GLuint index,const GLint* v)const;
void glVertexAttribs4svNV(GLuint index,GLsizei count,const GLshort* v)const;
void glUniform1ui(GLint location,GLuint v0)const;
void glVertexAttrib2fvARB(GLuint index,const GLfloat* v)const;
void glVertexAttribI4svEXT(GLuint index,const GLshort* v)const;
void glTextureImage3DMultisampleCoverageNV(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)const;
void glMemoryBarrier(GLbitfield barriers)const;
void glGetVariantArrayObjectfvATI(GLuint id,GLenum pname,GLfloat* params)const;
void glTexCoord4fColor4fNormal3fVertex4fvSUN(const GLfloat* tc,const GLfloat* c,const GLfloat* n,const GLfloat* v)const;
GLboolean glIsProgramARB(GLuint program)const;
void glBindImageTextureEXT(GLuint index,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLint format)const;
GLint glGetFragDataLocation(GLuint program,const GLchar* name)const;
void glMultiTexCoord1svARB(GLenum target,const GLshort* v)const;
void glGetMapxvOES(GLenum target,GLenum query,GLfixed* v)const;
void glTextureStorage2DMultisampleEXT(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)const;
void glGetMaterialfv(GLenum face,GLenum pname,GLfloat* params)const;
void glVertexAttrib4NbvARB(GLuint index,const GLbyte* v)const;
void glPixelMapuiv(GLenum map,GLsizei mapsize,const GLuint* values)const;
void glColorPointerEXT(GLint size,GLenum type,GLsizei stride,GLsizei count,const void* pointer)const;
void glEnableClientStateiEXT(GLenum array,GLuint index)const;
void glClearTexSubImage(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void* data)const;
void glEvalCoord1xvOES(const GLfixed* coords)const;
void glDetachObjectARB(GLhandleARB containerObj,GLhandleARB attachedObj)const;
void glGetTextureParameterIiv(GLuint texture,GLenum pname,GLint* params)const;
void glVariantusvEXT(GLuint id,const GLushort* addr)const;
void glCompressedTextureImage3DEXT(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void* bits)const;
void glMultiTexCoord1dARB(GLenum target,GLdouble s)const;
void glGetVertexArrayIntegeri_vEXT(GLuint vaobj,GLuint index,GLenum pname,GLint* param)const;
void glVertexAttribI4ubv(GLuint index,const GLubyte* v)const;
void glPixelTexGenParameterfSGIS(GLenum pname,GLfloat param)const;
void glProgramUniformMatrix4x2dv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glUniform3fARB(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)const;
GLboolean glIsShader(GLuint shader)const;
void glConvolutionParameteriv(GLenum target,GLenum pname,const GLint* params)const;
void glCopyMultiTexSubImage2DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
void glEnableVertexAttribArrayARB(GLuint index)const;
void glEnable(GLenum cap)const;
void glGetActiveUniformsiv(GLuint program,GLsizei uniformCount,const GLuint* uniformIndices,GLenum pname,GLint* params)const;
void glGetVertexAttribivARB(GLuint index,GLenum pname,GLint* params)const;
void glTexCoord4hvNV(const GLhalfNV* v)const;
void glUseProgramObjectARB(GLhandleARB programObj)const;
GLint glGetAttribLocation(GLuint program,const GLchar* name)const;
void glVertexAttrib4dv(GLuint index,const GLdouble* v)const;
void glGetTextureParameteriv(GLuint texture,GLenum pname,GLint* params)const;
void glPathSubCoordsNV(GLuint path,GLsizei coordStart,GLsizei numCoords,GLenum coordType,const void* coords)const;
void glMatrixIndexusvARB(GLint size,const GLushort* indices)const;
void glGetVideouivNV(GLuint video_slot,GLenum pname,GLuint* params)const;
void glGetVideoCaptureivNV(GLuint video_capture_slot,GLenum pname,GLint* params)const;
void glProgramUniform3ui(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)const;
void glVertexAttrib3svARB(GLuint index,const GLshort* v)const;
void glGetNamedBufferParameterivEXT(GLuint buffer,GLenum pname,GLint* params)const;
void glMatrixScaledEXT(GLenum mode,GLdouble x,GLdouble y,GLdouble z)const;
void glProgramUniformMatrix2x3fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glGetFragmentLightivSGIX(GLenum light,GLenum pname,GLint* params)const;
void glWindowPos2svARB(const GLshort* v)const;
void glVertexAttrib2svNV(GLuint index,const GLshort* v)const;
void glWindowPos2ivARB(const GLint* v)const;
void glGetVertexAttribPointervNV(GLuint index,GLenum pname,void** pointer)const;
void glPushMatrix()const;
void glEdgeFlagPointerListIBM(GLint stride,const GLboolean** pointer,GLint ptrstride)const;
void glGenerateMipmapEXT(GLenum target)const;
void glWindowPos3sv(const GLshort* v)const;
void glPathCoordsNV(GLuint path,GLsizei numCoords,GLenum coordType,const void* coords)const;
void glProgramUniform1i(GLuint program,GLint location,GLint v0)const;
void glProgramUniform1d(GLuint program,GLint location,GLdouble v0)const;
void glProgramUniform1f(GLuint program,GLint location,GLfloat v0)const;
void glProgramParameteriEXT(GLuint program,GLenum pname,GLint value)const;
void glCompressedMultiTexImage2DEXT(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void* bits)const;
void glProgramUniform3iv(GLuint program,GLint location,GLsizei count,const GLint* value)const;
void glIndexiv(const GLint* c)const;
void glMultiTexCoord4xvOES(GLenum texture,const GLfixed* coords)const;
void glEGLImageTargetTexture2DOES(GLenum target,GLeglImageOES image)const;
void glPixelZoom(GLfloat xfactor,GLfloat yfactor)const;
void glVertex3bvOES(const GLbyte* coords)const;
void glFramebufferReadBufferEXT(GLuint framebuffer,GLenum mode)const;
void glExtractComponentEXT(GLuint res,GLuint src,GLuint num)const;
void glCombinerParameterivNV(GLenum pname,const GLint* params)const;
void glMinmax(GLenum target,GLenum internalformat,GLboolean sink)const;
void glGenBuffersARB(GLsizei n,GLuint* buffers)const;
void glColor3usv(const GLushort* v)const;
void glBlendEquationi(GLuint buf,GLenum mode)const;
void glGetFogFuncSGIS(GLfloat* points)const;
void glVertexAttrib4fvNV(GLuint index,const GLfloat* v)const;
void glGetnMinmax(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void* values)const;
void glFragmentLightiSGIX(GLenum light,GLenum pname,GLint param)const;
void glMultiTexCoord1bvOES(GLenum texture,const GLbyte* coords)const;
void glSecondaryColorPointerEXT(GLint size,GLenum type,GLsizei stride,const void* pointer)const;
void glMultiTexCoordP4uiv(GLenum texture,GLenum type,const GLuint* coords)const;
void glGetBufferSubDataARB(GLenum target,GLintptrARB offset,GLsizeiptrARB size,void* data)const;
void glGetPathParameterivNV(GLuint path,GLenum pname,GLint* value)const;
void glFlushRasterSGIX()const;
void glElementPointerATI(GLenum type,const void* pointer)const;
void glGetAttachedObjectsARB(GLhandleARB containerObj,GLsizei maxCount,GLsizei* count,GLhandleARB* obj)const;
void glUniform4iv(GLint location,GLsizei count,const GLint* value)const;
void glFogxOES(GLenum pname,GLfixed param)const;
void glSharpenTexFuncSGIS(GLenum target,GLsizei n,const GLfloat* points)const;
void glClearDepthfOES(GLclampf depth)const;
void glDeleteCommandListsNV(GLsizei n,const GLuint* lists)const;
void glVertex4hNV(GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w)const;
void glSecondaryColor3dvEXT(const GLdouble* v)const;
void glGenTextures(GLsizei n,GLuint* textures)const;
void glTextureStorage2DMultisample(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)const;
void glUniform3ui64vNV(GLint location,GLsizei count,const GLuint64EXT* value)const;
void glBlendFuncSeparateIndexedAMD(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)const;
void glMakeBufferResidentNV(GLenum target,GLenum access)const;
void glShaderOp2EXT(GLenum op,GLuint res,GLuint arg1,GLuint arg2)const;
void glGetVertexAttribivNV(GLuint index,GLenum pname,GLint* params)const;
void glTexParameterIivEXT(GLenum target,GLenum pname,const GLint* params)const;
void glGetPerfQueryDataINTEL(GLuint queryHandle,GLuint flags,GLsizei dataSize,GLvoid* data,GLuint* bytesWritten)const;
void glVertexAttrib4dvARB(GLuint index,const GLdouble* v)const;
void glTextureSubImage1DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void* pixels)const;
void glGetActiveUniformBlockName(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei* length,GLchar* uniformBlockName)const;
void glVertexAttrib2dvARB(GLuint index,const GLdouble* v)const;
void glVertexAttribPointer(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void* pointer)const;
void glDepthBoundsdNV(GLdouble zmin,GLdouble zmax)const;
void glDeleteTexturesEXT(GLsizei n,const GLuint* textures)const;
void glDrawBuffersATI(GLsizei n,const GLenum* bufs)const;
void glLightModelxvOES(GLenum pname,const GLfixed* param)const;
void glApplyTextureEXT(GLenum mode)const;
GLuint64 glGetImageHandleNV(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)const;
void glGetMinmax(GLenum target,GLboolean reset,GLenum format,GLenum types,GLvoid* values)const;
void glGetFixedvOES(GLenum pname,GLfixed* params)const;
void glSamplePatternEXT(GLenum pattern)const;
void glUniform1f(GLint location,GLfloat v0)const;
void glColor4fNormal3fVertex3fSUN(GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)const;
void glFogCoorddvEXT(const GLdouble* coord)const;
void glCopyTextureImage1DEXT(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)const;
void glFlushMappedBufferRangeAPPLE(GLenum target,GLintptr offset,GLsizeiptr size)const;
void glVertex3sv(const GLshort* v)const;
void glFlushStaticDataIBM(GLenum target)const;
void glProgramUniform4ui64NV(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)const;
void glRasterPos4xOES(GLfixed x,GLfixed y,GLfixed z,GLfixed w)const;
void glVertexAttribP1ui(GLuint index,GLenum type,GLboolean normalized,GLuint value)const;
void glProgramUniform4dvEXT(GLuint program,GLint location,GLsizei count,const GLdouble* value)const;
void glEndTransformFeedbackEXT()const;
void glBinormal3dEXT(GLdouble bx,GLdouble by,GLdouble bz)const;
void glGetTextureSubImage(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,GLsizei bufSize,void* pixels)const;
void glGetNamedRenderbufferParameteriv(GLuint renderbuffer,GLenum pname,GLint* params)const;
void glBindBuffersRange(GLenum target,GLuint first,GLsizei count,const GLuint* buffers,const GLintptr* offsets,const GLsizeiptr* sizes)const;
GLint glFinishAsyncSGIX(GLuint* markerp)const;
void glBindFragDataLocationIndexed(GLuint program,GLuint colorNumber,GLuint index,const GLchar* name)const;
void glMultiTexCoord2dv(GLenum target,const GLdouble* v)const;
void glUniform2iv(GLint location,GLsizei count,const GLint* value)const;
void glProgramUniform2i64vNV(GLuint program,GLint location,GLsizei count,const GLint64EXT* value)const;
void glFlushVertexArrayRangeAPPLE(GLsizei length,void* pointer)const;
void glTextureParameterf(GLuint texture,GLenum pname,GLfloat param)const;
void glMultiTexCoord3dvARB(GLenum target,const GLdouble* v)const;
void glFeedbackBuffer(GLsizei size,GLenum type,GLfloat* buffer)const;
void glDebugMessageInsertARB(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar* buf)const;
void glMultiTexCoord2i(GLenum target,GLint s,GLint t)const;
void glTextureSubImage3D(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void* pixels)const;
void glFramebufferTexture1D(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)const;
void glGetShaderiv(GLuint shader,GLenum pname,GLint* params)const;
void glMultiTexCoord2d(GLenum target,GLdouble s,GLdouble t)const;
void glArrayObjectATI(GLenum array,GLint size,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)const;
void glGetPointeri_vEXT(GLenum pname,GLuint index,void** params)const;
void glGetPerfMonitorCountersAMD(GLuint group,GLint* numCounters,GLint* maxActiveCounters,GLsizei counterSize,GLuint* counters)const;
void glNamedBufferStorage(GLuint buffer,GLsizeiptr size,const void* data,GLbitfield flags)const;
void glTexEnvxvOES(GLenum target,GLenum pname,const GLfixed* params)const;
void glProgramUniform2ui64NV(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y)const;
void glMultiTexCoord3bOES(GLenum texture,GLbyte s,GLbyte t,GLbyte r)const;
void glUniform1dv(GLint location,GLsizei count,const GLdouble* value)const;
void glPixelTransferi(GLenum pname,GLint param)const;
void glSecondaryColor3usvEXT(const GLushort* v)const;
void glProgramEnvParameterI4uivNV(GLenum target,GLuint index,const GLuint* params)const;
void glVertex2sv(const GLshort* v)const;
void glWindowPos4dMESA(GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
void glDebugMessageControlARB(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint* ids,GLboolean enabled)const;
GLboolean glIsTextureEXT(GLuint texture)const;
void glFragmentMaterialivSGIX(GLenum face,GLenum pname,const GLint* params)const;
void glLinkProgramARB(GLhandleARB programObj)const;
void glFinishFenceAPPLE(GLuint fence)const;
void glVertexArrayVertexAttribBindingEXT(GLuint vaobj,GLuint attribindex,GLuint bindingindex)const;
void glMultiTexCoord4fv(GLenum target,const GLfloat* v)const;
void glRasterPos3i(GLint x,GLint y,GLint z)const;
void glRasterPos3d(GLdouble x,GLdouble y,GLdouble z)const;
GLint glPollAsyncSGIX(GLuint* markerp)const;
void glRasterPos3f(GLfloat x,GLfloat y,GLfloat z)const;
void glCompressedTexImage3D(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const GLvoid* data)const;
void glVariantivEXT(GLuint id,const GLint* addr)const;
void glUnmapTexture2DINTEL(GLuint texture,GLint level)const;
void glGetVertexAttribiv(GLuint index,GLenum pname,GLint* params)const;
void glGetPathCoordsNV(GLuint path,GLfloat* coords)const;
void glColor4xvOES(const GLfixed* components)const;
void glVertexAttrib3fv(GLuint index,const GLfloat* v)const;
void glRasterPos3s(GLshort x,GLshort y,GLshort z)const;
void glVertex4bOES(GLbyte x,GLbyte y,GLbyte z,GLbyte w)const;
void glTransformFeedbackVaryingsEXT(GLuint program,GLsizei count,const GLchar*const* varyings,GLenum bufferMode)const;
void glCombinerOutputNV(GLenum stage,GLenum portion,GLenum abOutput,GLenum cdOutput,GLenum sumOutput,GLenum scale,GLenum bias,GLboolean abDotProduct,GLboolean cdDotProduct,GLboolean muxSum)const;
void glWindowPos4sMESA(GLshort x,GLshort y,GLshort z,GLshort w)const;
void glVertexAttrib4svARB(GLuint index,const GLshort* v)const;
GLboolean glIsList(GLuint list)const;
void glGetInfoLogARB(GLhandleARB obj,GLsizei maxLength,GLsizei* length,GLcharARB* infoLog)const;
void glUniformMatrix2fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glVertexAttribs3dvNV(GLuint index,GLsizei count,const GLdouble* v)const;
void glGlobalAlphaFactorsSUN(GLshort factor)const;
void glGetTrackMatrixivNV(GLenum target,GLuint address,GLenum pname,GLint* params)const;
void glTextureParameterfvEXT(GLuint texture,GLenum target,GLenum pname,const GLfloat* params)const;
GLboolean glIsNamedBufferResidentNV(GLuint buffer)const;
void glProgramUniform4ui64vARB(GLuint program,GLint location,GLsizei count,const GLuint64* value)const;
void glTbufferMask3DFX(GLuint mask)const;
void glCoverFillPathNV(GLuint path,GLenum coverMode)const;
void glVertexAttrib1fvARB(GLuint index,const GLfloat* v)const;
void glGenerateTextureMipmap(GLuint texture)const;
void glNamedProgramLocalParameterI4uivEXT(GLuint program,GLenum target,GLuint index,const GLuint* params)const;
void glMultiDrawElementsBaseVertex(GLenum mode,const GLsizei* count,GLenum type,const void*const* indices,GLsizei drawcount,const GLint* basevertex)const;
void glProgramSubroutineParametersuivNV(GLenum target,GLsizei count,const GLuint* params)const;
void glProgramUniformMatrix2x4dvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glRotatexOES(GLfixed angle,GLfixed x,GLfixed y,GLfixed z)const;
void glMemoryBarrierEXT(GLbitfield barriers)const;
void glVertexAttrib3svNV(GLuint index,const GLshort* v)const;
void glVertexStream3iATI(GLenum stream,GLint x,GLint y,GLint z)const;
void glCompressedTexSubImage1D(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const GLvoid* data)const;
void glSetFenceNV(GLuint fence,GLenum condition)const;
void glAttachObjectARB(GLhandleARB containerObj,GLhandleARB obj)const;
void glCopyConvolutionFilter1D(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)const;
void glProgramParameters4fvNV(GLenum target,GLuint index,GLsizei count,const GLfloat* v)const;
void glNamedFramebufferParameteriEXT(GLuint framebuffer,GLenum pname,GLint param)const;
void glVertexAttrib4Nsv(GLuint index,const GLshort* v)const;
void glVertexAttribI4usvEXT(GLuint index,const GLushort* v)const;
void glTextureBufferRangeEXT(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)const;
void glVertexP3uiv(GLenum type,const GLuint* value)const;
GLboolean glIsPathNV(GLuint path)const;
void glGetnUniformi64vARB(GLuint program,GLint location,GLsizei bufSize,GLint64* params)const;
void glFramebufferTextureMultiviewOVR(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint baseViewIndex,GLsizei numViews)const;
void glCompressedMultiTexSubImage2DEXT(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void* bits)const;
void glGetnMapdv(GLenum target,GLenum query,GLsizei bufSize,GLdouble* v)const;
void glDebugMessageCallback(GLDEBUGPROC callback,const void* userParam)const;
void glTangent3svEXT(const GLshort* v)const;
void glVertexAttribParameteriAMD(GLuint index,GLenum pname,GLint param)const;
void glBufferSubDataARB(GLenum target,GLintptrARB offset,GLsizeiptrARB size,const void* data)const;
void glGetVertexAttribLui64vARB(GLuint index,GLenum pname,GLuint64EXT* params)const;
void glVertexAttribL4ui64NV(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)const;
void glReplacementCodeuiColor4ubVertex3fSUN(GLuint rc,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)const;
void glImageTransformParameterfHP(GLenum target,GLenum pname,GLfloat param)const;
void glMap1f(GLenum target,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat* points)const;
void glRasterPos4fv(const GLfloat* v)const;
void glVertex2bvOES(const GLbyte* coords)const;
void glGetMapControlPointsNV(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLboolean packed,void* points)const;
void glNamedProgramLocalParametersI4ivEXT(GLuint program,GLenum target,GLuint index,GLsizei count,const GLint* params)const;
void glBindBufferRangeNV(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)const;
void glVertexStream3dvATI(GLenum stream,const GLdouble* coords)const;
void glNormalPointerListIBM(GLenum type,GLint stride,const void** pointer,GLint ptrstride)const;
void glFogFuncSGIS(GLsizei n,const GLfloat* points)const;
void glMultiModeDrawArraysIBM(const GLenum* mode,const GLint* first,const GLsizei* count,GLsizei primcount,GLint modestride)const;
void glGetNamedFramebufferAttachmentParameterivEXT(GLuint framebuffer,GLenum attachment,GLenum pname,GLint* params)const;
void glGetFloatv(GLenum pname,GLfloat* params)const;
void glVertexArrayVertexAttribIFormatEXT(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)const;
void glHint(GLenum target,GLenum mode)const;
GLboolean glPointAlongPathNV(GLuint path,GLsizei startSegment,GLsizei numSegments,GLfloat distance,GLfloat* x,GLfloat* y,GLfloat* tangentX,GLfloat* tangentY)const;
void glVertexStream2svATI(GLenum stream,const GLshort* coords)const;
void glMultiDrawArraysIndirect(GLenum mode,const void* indirect,GLsizei drawcount,GLsizei stride)const;
void glVertexAttribP2uiv(GLuint index,GLenum type,GLboolean normalized,const GLuint* value)const;
void glProgramUniform1i64vARB(GLuint program,GLint location,GLsizei count,const GLint64* value)const;
void glFramebufferTextureARB(GLenum target,GLenum attachment,GLuint texture,GLint level)const;
void glPushClientAttribDefaultEXT(GLbitfield mask)const;
void glScalef(GLfloat x,GLfloat y,GLfloat z)const;
void glScaled(GLdouble x,GLdouble y,GLdouble z)const;
void glGetConvolutionParameterxvOES(GLenum target,GLenum pname,GLfixed* params)const;
void glGetProgramResourceName(GLuint program,GLenum programInterface,GLuint index,GLsizei bufSize,GLsizei* length,GLchar* name)const;
void glCopyColorTable(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)const;
void glDepthRangeArrayv(GLuint first,GLsizei count,const GLdouble* v)const;
void glCoverFillPathInstancedNV(GLsizei numPaths,GLenum pathNameType,const void* paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat* transformValues)const;
void glMultiTexParameterivEXT(GLenum texunit,GLenum target,GLenum pname,const GLint* params)const;
void glGetActiveAtomicCounterBufferiv(GLuint program,GLuint bufferIndex,GLenum pname,GLint* params)const;
void glStencilOpSeparate(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)const;
void glVertexAttrib4fNV(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
void glGetColorTableParameterivSGI(GLenum target,GLenum pname,GLint* params)const;
void glVertexArrayAttribBinding(GLuint vaobj,GLuint attribindex,GLuint bindingindex)const;
void glProgramParameters4dvNV(GLenum target,GLuint index,GLsizei count,const GLdouble* v)const;
void glVertexAttribL4dv(GLuint index,const GLdouble* v)const;
void glVertexStream3dATI(GLenum stream,GLdouble x,GLdouble y,GLdouble z)const;
GLintptr glGetUniformOffsetEXT(GLuint program,GLint location)const;
void glGetVertexAttribPointerv(GLuint index,GLenum pname,void** pointer)const;
void glProgramUniform3i64vNV(GLuint program,GLint location,GLsizei count,const GLint64EXT* value)const;
void glTangent3fEXT(GLfloat tx,GLfloat ty,GLfloat tz)const;
void glGetPathMetricRangeNV(GLbitfield metricQueryMask,GLuint firstPathName,GLsizei numPaths,GLsizei stride,GLfloat* metrics)const;
void glWindowPos2iMESA(GLint x,GLint y)const;
void glVertex2xvOES(const GLfixed* coords)const;
void glGetnCompressedTexImage(GLenum target,GLint lod,GLsizei bufSize,void* pixels)const;
void glWindowPos2dv(const GLdouble* v)const;
void glReplacementCodeuiVertex3fSUN(GLuint rc,GLfloat x,GLfloat y,GLfloat z)const;
void glGetTransformFeedbackVaryingEXT(GLuint program,GLuint index,GLsizei bufSize,GLsizei* length,GLsizei* size,GLenum* type,GLchar* name)const;
void glWindowPos3fARB(GLfloat x,GLfloat y,GLfloat z)const;
void* glMapNamedBufferEXT(GLuint buffer,GLenum access)const;
void glDisable(GLenum cap)const;
GLboolean glIsPointInFillPathNV(GLuint path,GLuint mask,GLfloat x,GLfloat y)const;
void glVertexAttribI2uiEXT(GLuint index,GLuint x,GLuint y)const;
void glProgramUniform4uiv(GLuint program,GLint location,GLsizei count,const GLuint* value)const;
void glQueryCounter(GLuint id,GLenum target)const;
void glFramebufferRenderbufferEXT(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)const;
void glBinormal3svEXT(const GLshort* v)const;
void glBindBufferOffsetNV(GLenum target,GLuint index,GLuint buffer,GLintptr offset)const;
void glCopyTextureSubImage2D(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
void glGetProgramResourcefvNV(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum* props,GLsizei bufSize,GLsizei* length,GLfloat* params)const;
void glBinormalPointerEXT(GLenum type,GLsizei stride,const void* pointer)const;
void glGetLightfv(GLenum light,GLenum pname,GLfloat* params)const;
void glVertex2bOES(GLbyte x,GLbyte y)const;
void glUniform2ivARB(GLint location,GLsizei count,const GLint* value)const;
void glMultiTexCoord3s(GLenum target,GLshort s,GLshort t,GLshort r)const;
void glGetHistogramParameterfvEXT(GLenum target,GLenum pname,GLfloat* params)const;
void glGetProgramStringNV(GLuint id,GLenum pname,GLubyte* program)const;
void glGetTexGenxvOES(GLenum coord,GLenum pname,GLfixed* params)const;
void glTextureSubImage2D(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void* pixels)const;
GLenum glObjectPurgeableAPPLE(GLenum objectType,GLuint name,GLenum option)const;
void glColorTableSGI(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void* table)const;
void glCopyConvolutionFilter2DEXT(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)const;
void glMultiTexCoord3f(GLenum target,GLfloat s,GLfloat t,GLfloat r)const;
void glMultiTexCoord3d(GLenum target,GLdouble s,GLdouble t,GLdouble r)const;
void glFogCoorddv(const GLdouble* coord)const;
void glGetBufferPointerv(GLenum target,GLenum pname,void** params)const;
void glProgramUniform1fEXT(GLuint program,GLint location,GLfloat v0)const;
void glWindowPos2fvMESA(const GLfloat* v)const;
void glPolygonOffsetxOES(GLfixed factor,GLfixed units)const;
void glVertexAttrib4dARB(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
void glUniformHandleui64vARB(GLint location,GLsizei count,const GLuint64* value)const;
void glFragmentLightModelfvSGIX(GLenum pname,const GLfloat* params)const;
void glSwizzleEXT(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)const;
void glBindFragmentShaderATI(GLuint id)const;
void glVertexAttribs3hvNV(GLuint index,GLsizei n,const GLhalfNV* v)const;
void glColorP3ui(GLenum type,GLuint color)const;
void glListParameterfvSGIX(GLuint list,GLenum pname,const GLfloat* params)const;
void glNamedRenderbufferStorageMultisample(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)const;
void glVertexAttribI1iEXT(GLuint index,GLint x)const;
void glMultiTexCoord2ivARB(GLenum target,const GLint* v)const;
void glLightModelxOES(GLenum pname,GLfixed param)const;
void glColor3xOES(GLfixed red,GLfixed green,GLfixed blue)const;
void glReadBuffer(GLenum mode)const;
void glStencilFillPathInstancedNV(GLsizei numPaths,GLenum pathNameType,const void* paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum transformType,const GLfloat* transformValues)const;
void glVDPAUUnmapSurfacesNV(GLsizei numSurface,const GLvdpauSurfaceNV* surfaces)const;
void glProgramUniform4i64NV(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)const;
void glVertexStream4dvATI(GLenum stream,const GLdouble* coords)const;
GLboolean glIsQuery(GLuint id)const;
void glProgramUniformMatrix4fvEXT(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glVertexAttrib3hNV(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z)const;
void glFlushMappedNamedBufferRange(GLuint buffer,GLintptr offset,GLsizeiptr length)const;
void glPushName(GLuint name)const;
void glGetClipPlane(GLenum plane,GLdouble* equation)const;
void glVertex4dv(const GLdouble* v)const;
void glVertexAttrib3d(GLuint index,GLdouble x,GLdouble y,GLdouble z)const;
void glBlendColor(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)const;
void glBindTransformFeedbackNV(GLenum target,GLuint id)const;
void glSamplerParameterIuiv(GLuint sampler,GLenum pname,const GLuint* param)const;
void glIndexubv(const GLubyte* c)const;
void glNamedBufferPageCommitmentEXT(GLuint buffer,GLintptr offset,GLsizeiptr size,GLboolean commit)const;
GLenum glCheckNamedFramebufferStatus(GLuint framebuffer,GLenum target)const;
void glGetObjectBufferfvATI(GLuint buffer,GLenum pname,GLfloat* params)const;
void glRasterPos4d(GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
void glRasterPos4f(GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
void glGetPerfMonitorCounterStringAMD(GLuint group,GLuint counter,GLsizei bufSize,GLsizei* length,GLchar* counterString)const;
void glVertexAttrib3s(GLuint index,GLshort x,GLshort y,GLshort z)const;
void glDrawElementsInstancedEXT(GLenum mode,GLsizei count,GLenum type,const void* indices,GLsizei primcount)const;
void glNamedProgramLocalParameterI4iEXT(GLuint program,GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)const;
void glRasterPos4s(GLshort x,GLshort y,GLshort z,GLshort w)const;
void glGetProgramStageiv(GLuint program,GLenum shadertype,GLenum pname,GLint* values)const;
void glGetMaterialxOES(GLenum face,GLenum pname,GLfixed param)const;
void glPopMatrix()const;
void glGetVideoui64vNV(GLuint video_slot,GLenum pname,GLuint64EXT* params)const;
void glTangent3bEXT(GLbyte tx,GLbyte ty,GLbyte tz)const;
GLenum glGetGraphicsResetStatusARB()const;
void glUniform4i(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)const;
void glActiveTexture(GLenum texture)const;
void glEnableVertexAttribArray(GLuint index)const;
void glTexCoord4fVertex4fvSUN(const GLfloat* tc,const GLfloat* v)const;
void glUniform4d(GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
void glUniform4f(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)const;
void glRenderbufferStorageMultisample(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)const;
void glCreateProgramPipelines(GLsizei n,GLuint* pipelines)const;
void glVertexAttribLPointer(GLuint index,GLint size,GLenum type,GLsizei stride,const void* pointer)const;
void glUniform2uiEXT(GLint location,GLuint v0,GLuint v1)const;
void glMultiTexCoord3sv(GLenum target,const GLshort* v)const;
void glDrawElementsInstancedBaseVertex(GLenum mode,GLsizei count,GLenum type,const void* indices,GLsizei instancecount,GLint basevertex)const;
void glPixelTransformParameterfvEXT(GLenum target,GLenum pname,const GLfloat* params)const;
void glDrawTransformFeedbackNV(GLenum mode,GLuint id)const;
void glTextureImage2DMultisampleCoverageNV(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)const;
void glNamedRenderbufferStorageMultisampleCoverageEXT(GLuint renderbuffer,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)const;
GLboolean glIsTexture(GLuint texture)const;
void glMultiTexCoord4iv(GLenum target,const GLint* v)const;
void glTexEnvfv(GLenum target,GLenum pname,const GLfloat* params)const;
void glPopDebugGroup()const;
void glUniformBlockBinding(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding)const;
void glWindowPos2svMESA(const GLshort* v)const;
void glGenerateTextureMipmapEXT(GLuint texture,GLenum target)const;
GLuint glBindLightParameterEXT(GLenum light,GLenum value)const;
void glTexCoord3bOES(GLbyte s,GLbyte t,GLbyte r)const;
void glTexCoordPointer(GLint size,GLenum type,GLsizei stride,const GLvoid* ptr)const;
void glProgramUniformMatrix3x2fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glUniform2fvARB(GLint location,GLsizei count,const GLfloat* value)const;
void glProgramLocalParameterI4uivNV(GLenum target,GLuint index,const GLuint* params)const;
void glFlushVertexArrayRangeNV()const;
void glSecondaryColor3svEXT(const GLshort* v)const;
void glGetBufferParameteriv(GLenum target,GLenum pname,GLint* params)const;
void glGetQueryIndexediv(GLenum target,GLuint index,GLenum pname,GLint* params)const;
void glFramebufferTexture3DEXT(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)const;
void glLoadTransposeMatrixxOES(const GLfixed* m)const;
void glDeleteTransformFeedbacksNV(GLsizei n,const GLuint* ids)const;
void glGetCompressedTextureImageEXT(GLuint texture,GLenum target,GLint lod,void* img)const;
void glIndexMaterialEXT(GLenum face,GLenum mode)const;
void glFogCoorddEXT(GLdouble coord)const;
void glTexCoord2hvNV(const GLhalfNV* v)const;
void glFramebufferTexture2DEXT(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)const;
void glTexEnviv(GLenum target,GLenum pname,const GLint* params)const;
void glEndTransformFeedbackNV()const;
void glGlobalAlphaFactoruiSUN(GLuint factor)const;
void glSelectBuffer(GLsizei size,GLuint* buffer)const;
void glNamedBufferSubDataEXT(GLuint buffer,GLintptr offset,GLsizeiptr size,const void* data)const;
void glDisableVertexArrayAttrib(GLuint vaobj,GLuint index)const;
void glBlendFunc(GLenum sfactor,GLenum dfactor)const;
GLuint glCreateProgram()const;
void glVertexStream2dATI(GLenum stream,GLdouble x,GLdouble y)const;
void glUniform4ui64vARB(GLint location,GLsizei count,const GLuint64* value)const;
void glPrimitiveRestartIndex(GLuint index)const;
void glNormalStream3fATI(GLenum stream,GLfloat nx,GLfloat ny,GLfloat nz)const;
void glProgramUniformMatrix2fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glVertexAttribs1hvNV(GLuint index,GLsizei n,const GLhalfNV* v)const;
void glWindowPos4svMESA(const GLshort* v)const;
void glDeleteFragmentShaderATI(GLuint id)const;
void glBindImageTextures(GLuint first,GLsizei count,const GLuint* textures)const;
void glMap2xOES(GLenum target,GLfixed u1,GLfixed u2,GLint ustride,GLint uorder,GLfixed v1,GLfixed v2,GLint vstride,GLint vorder,GLfixed points)const;
void glEnd()const;
void glMultiTexCoord2dARB(GLenum target,GLdouble s,GLdouble t)const;
void glUniform1i64NV(GLint location,GLint64EXT x)const;
void glPathStringNV(GLuint path,GLenum format,GLsizei length,const void* pathString)const;
void glGetNamedFramebufferParameterivEXT(GLuint framebuffer,GLenum pname,GLint* params)const;
void glGetProgramNamedParameterdvNV(GLuint id,GLsizei len,const GLubyte* name,GLdouble* params)const;
void glPathDashArrayNV(GLuint path,GLsizei dashCount,const GLfloat* dashArray)const;
void glUniform3uiv(GLint location,GLsizei count,const GLuint* value)const;
void glColor3fVertex3fvSUN(const GLfloat* c,const GLfloat* v)const;
void glMultTransposeMatrixd(const GLdouble m[16])const;
void glClearColor(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)const;
GLuint64 glGetImageHandleARB(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)const;
void glTangent3dEXT(GLdouble tx,GLdouble ty,GLdouble tz)const;
void glGetQueryObjectivARB(GLuint id,GLenum pname,GLint* params)const;
void glGetLocalConstantFloatvEXT(GLuint id,GLenum value,GLfloat* data)const;
void glUseShaderProgramEXT(GLenum type,GLuint program)const;
void glBindRenderbufferEXT(GLenum target,GLuint renderbuffer)const;
void glInterleavedArrays(GLenum format,GLsizei stride,const GLvoid* pointer)const;
void glGetPerfMonitorGroupStringAMD(GLuint group,GLsizei bufSize,GLsizei* length,GLchar* groupString)const;
void glUniform3ui(GLint location,GLuint v0,GLuint v1,GLuint v2)const;
void glGetNamedProgramLocalParameterdvEXT(GLuint program,GLenum target,GLuint index,GLdouble* params)const;
void glSecondaryColor3us(GLushort red,GLushort green,GLushort blue)const;
void glVertexAttribI4uiv(GLuint index,const GLuint* v)const;
void glVertexAttrib4bv(GLuint index,const GLbyte* v)const;
void glMultiTexCoord3xOES(GLenum texture,GLfixed s,GLfixed t,GLfixed r)const;
void glSecondaryColor3ub(GLubyte red,GLubyte green,GLubyte blue)const;
void glFragmentMaterialfSGIX(GLenum face,GLenum pname,GLfloat param)const;
void glGetVariantArrayObjectivATI(GLuint id,GLenum pname,GLint* params)const;
void glSecondaryColor3ui(GLuint red,GLuint green,GLuint blue)const;
void glVertexAttrib1dARB(GLuint index,GLdouble x)const;
void glGetNamedBufferPointerv(GLuint buffer,GLenum pname,void** params)const;
void glLockArraysEXT(GLint first,GLsizei count)const;
void glVertexAttribPointerNV(GLuint index,GLint fsize,GLenum type,GLsizei stride,const void* pointer)const;
void glConvolutionParameterf(GLenum target,GLenum pname,GLfloat params)const;
void glBindBufferBaseEXT(GLenum target,GLuint index,GLuint buffer)const;
void glTexCoord2xvOES(const GLfixed* coords)const;
void glGetQueryBufferObjectui64v(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)const;
void glSetMultisamplefvAMD(GLenum pname,GLuint index,const GLfloat* val)const;
void glPathColorGenNV(GLenum color,GLenum genMode,GLenum colorFormat,const GLfloat* coeffs)const;
void glVertexAttrib3sARB(GLuint index,GLshort x,GLshort y,GLshort z)const;
void glVertexAttrib4ivARB(GLuint index,const GLint* v)const;
void glGenTransformFeedbacks(GLsizei n,GLuint* ids)const;
void glGetVertexAttribIuiv(GLuint index,GLenum pname,GLuint* params)const;
void glPixelTransformParameterfEXT(GLenum target,GLenum pname,GLfloat param)const;
void glGetTexParameterIuivEXT(GLenum target,GLenum pname,GLuint* params)const;
void glGetObjectParameterivARB(GLhandleARB obj,GLenum pname,GLint* params)const;
void glVertexArraySecondaryColorOffsetEXT(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)const;
void glWindowPos2fARB(GLfloat x,GLfloat y)const;
void glCompressedTexSubImage2D(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const GLvoid* data)const;
void glCompressedTexSubImage3DARB(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void* data)const;
void glProgramBinary(GLuint program,GLenum binaryFormat,const void* binary,GLsizei length)const;
void glPresentFrameKeyedNV(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLuint key0,GLenum target1,GLuint fill1,GLuint key1)const;
void glVertexAttribI4bv(GLuint index,const GLbyte* v)const;
void glPathCoverDepthFuncNV(GLenum func)const;
void glTransformFeedbackStreamAttribsNV(GLsizei count,const GLint* attribs,GLsizei nbuffers,const GLint* bufstreams,GLenum bufferMode)const;
void glSecondaryColor3usEXT(GLushort red,GLushort green,GLushort blue)const;
void glCopyColorTableSGI(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)const;
void glProgramEnvParameter4fvARB(GLenum target,GLuint index,const GLfloat* params)const;
void glMultiTexCoord4sARB(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)const;
void glGetVertexArrayIndexed64iv(GLuint vaobj,GLuint index,GLenum pname,GLint64* param)const;
void glMatrixMultTranspose3x3fNV(GLenum matrixMode,const GLfloat* m)const;
void glTexParameterIiv(GLenum target,GLenum pname,const GLint* params)const;
void glVertexArrayAttribFormat(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)const;
void glEndTransformFeedback()const;
void glDrawCommandsStatesAddressNV(const GLuint64* indirects,const GLsizei* sizes,const GLuint* states,const GLuint* fbos,GLuint count)const;
void glUniform4ui64NV(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)const;
void glMaterialiv(GLenum face,GLenum pname,const GLint* params)const;
void glTexImage2DMultisample(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)const;
void glBindTextureEXT(GLenum target,GLuint texture)const;
GLboolean glIsBuffer(GLuint buffer)const;
void glVertexAttribI1iv(GLuint index,const GLint* v)const;
void glGetFinalCombinerInputParameterfvNV(GLenum variable,GLenum pname,GLfloat* params)const;
void glMultiTexCoord3bvOES(GLenum texture,const GLbyte* coords)const;
void glVertexAttribDivisor(GLuint index,GLuint divisor)const;
void glCopyBufferSubData(GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)const;
GLuint glBindTexGenParameterEXT(GLenum unit,GLenum coord,GLenum value)const;
void glNormalStream3bATI(GLenum stream,GLbyte nx,GLbyte ny,GLbyte nz)const;
void glTextureImage2DEXT(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void* pixels)const;
void glGetColorTableParameteriv(GLenum target,GLenum pname,GLint* params)const;
void glActiveTextureARB(GLenum texture)const;
void glTexCoord4xOES(GLfixed s,GLfixed t,GLfixed r,GLfixed q)const;
void glSecondaryColor3fvEXT(const GLfloat* v)const;
void glUniformMatrix4x2fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glStartInstrumentsSGIX()const;
void glProgramNamedParameter4fvNV(GLuint id,GLsizei len,const GLubyte* name,const GLfloat* v)const;
void glEndVideoCaptureNV(GLuint video_capture_slot)const;
GLuint glGenLists(GLsizei range)const;
void glUniform1fARB(GLint location,GLfloat v0)const;
void glNamedFramebufferTexture1DEXT(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)const;
void* glMapBufferRange(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)const;
void glMultiDrawElementsIndirectCountARB(GLenum mode,GLenum type,GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)const;
void glProgramUniformMatrix4x2fv(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glGetTextureParameterIivEXT(GLuint texture,GLenum target,GLenum pname,GLint* params)const;
void glMultiTexCoord3hNV(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r)const;
void glNamedProgramLocalParametersI4uivEXT(GLuint program,GLenum target,GLuint index,GLsizei count,const GLuint* params)const;
void glEndList()const;
void glTexCoord2fColor4fNormal3fVertex3fSUN(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)const;
void glGenTransformFeedbacksNV(GLsizei n,GLuint* ids)const;
void glEdgeFlagv(const GLboolean* flag)const;
void glVertexAttribI2iv(GLuint index,const GLint* v)const;
void glCopyMultiTexImage2DEXT(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)const;
void glUniformMatrix3x2dv(GLint location,GLsizei count,GLboolean transpose,const GLdouble* value)const;
void glTexImage3DMultisampleCoverageNV(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)const;
void glGetShaderPrecisionFormat(GLenum shadertype,GLenum precisiontype,GLint* range,GLint* precision)const;
void glTexSubImage4DSGIS(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint woffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLenum format,GLenum type,const void* pixels)const;
void glRasterSamplesEXT(GLuint samples,GLboolean fixedsamplelocations)const;
void glTextureView(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers)const;
void glEvalMapsNV(GLenum target,GLenum mode)const;
GLint glGetFragDataLocationEXT(GLuint program,const GLchar* name)const;
void glGetCompressedMultiTexImageEXT(GLenum texunit,GLenum target,GLint lod,void* img)const;
void glIndexMask(GLuint mask)const;
void glPushClientAttrib(GLbitfield mask)const;
void glShaderSource(GLuint shader,GLsizei count,const GLchar*const* string,const GLint* length)const;
void glDispatchComputeGroupSizeARB(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z,GLuint group_size_x,GLuint group_size_y,GLuint group_size_z)const;
void glGetnPixelMapfv(GLenum map,GLsizei bufSize,GLfloat* values)const;
void glTexCoordP2uiv(GLenum type,const GLuint* coords)const;
void glUniform2f(GLint location,GLfloat v0,GLfloat v1)const;
void glGetNamedBufferParameteri64v(GLuint buffer,GLenum pname,GLint64* params)const;
void glCommandListSegmentsNV(GLuint list,GLuint segments)const;
void glTextureParameterIivEXT(GLuint texture,GLenum target,GLenum pname,const GLint* params)const;
void glMultiTexParameterfvEXT(GLenum texunit,GLenum target,GLenum pname,const GLfloat* params)const;
void glProgramUniform2ui64ARB(GLuint program,GLint location,GLuint64 x,GLuint64 y)const;
void glVertex4d(GLdouble x,GLdouble y,GLdouble z,GLdouble w)const;
GLuint glNewObjectBufferATI(GLsizei size,const void* pointer,GLenum usage)const;
void glViewportSwizzleNV(GLuint index,GLenum swizzlex,GLenum swizzley,GLenum swizzlez,GLenum swizzlew)const;
void glBufferData(GLenum target,GLsizeiptr size,const void* data,GLenum usage)const;
void glTextureImage1DEXT(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void* pixels)const;
void glGetTexParameterIiv(GLenum target,GLenum pname,GLint* params)const;
void glCopyTexSubImage1DEXT(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)const;
void glVertex4f(GLfloat x,GLfloat y,GLfloat z,GLfloat w)const;
void glUniformMatrix3fvARB(GLint location,GLsizei count,GLboolean transpose,const GLfloat* value)const;
void glTexCoordP1ui(GLenum type,GLuint coords)const;
void glPointParameterfvEXT(GLenum pname,const GLfloat* params)const;
void glUniform4fARB(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)const;
void glCopyTextureSubImage3D(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)const;
void glMultiTexCoord2fv(GLenum target,const GLfloat* v)const;
void glMultiTexEnvfvEXT(GLenum texunit,GLenum target,GLenum pname,const GLfloat* params)const;
void glNormalP3ui(GLenum type,GLuint coords)const;
void glDrawRangeElementArrayATI(GLenum mode,GLuint start,GLuint end,GLsizei count)const;
void glVertexAttribI1i(GLuint index,GLint x)const;
void glDrawArraysInstancedARB(GLenum mode,GLint first,GLsizei count,GLsizei primcount)const;
void glEnableVertexAttribAPPLE(GLuint index,GLenum pname)const;
GLuint glGetDebugMessageLogARB(GLuint count,GLsizei bufSize,GLenum* sources,GLenum* types,GLuint* ids,GLenum* severities,GLsizei* lengths,GLchar* messageLog)const;
void glGetPathTexGenfvNV(GLenum texCoordSet,GLenum pname,GLfloat* value)const;
void glNamedProgramLocalParameters4fvEXT(GLuint program,GLenum target,GLuint index,GLsizei count,const GLfloat* params)const;
void glVertexStream3fvATI(GLenum stream,const GLfloat* coords)const;
void glFramebufferTexture3D(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)const;
void glCompressedTextureSubImage2DEXT(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void* bits)const;
void glWindowPos3dv(const GLdouble* v)const;
void glCopyConvolutionFilter2D(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)const;
void glReadInstrumentsSGIX(GLint marker)const;
void glSamplerParameterfv(GLuint sampler,GLenum pname,const GLfloat* param)const;
void glBindBufferARB(GLenum target,GLuint buffer)const;
void glVertexAttrib1sNV(GLuint index,GLshort x)const;
void glGetMaterialiv(GLenum face,GLenum pname,GLint* params)const;
void glUniform1fv(GLint location,GLsizei count,const GLfloat* value)const;
void glBeginOcclusionQueryNV(GLuint id)const;
void glGenFencesAPPLE(GLsizei n,GLuint* fences)const;
void glScissorIndexedv(GLuint index,const GLint* v)const;
void glDisableVariantClientStateEXT(GLuint id)const;
void glMinmaxEXT(GLenum target,GLenum internalformat,GLboolean sink)const;
void glNormalPointervINTEL(GLenum type,const void** pointer)const;
void glNormal3s(GLshort nx,GLshort ny,GLshort nz)const;
void glGetnPixelMapuiv(GLenum map,GLsizei bufSize,GLuint* values)const;
void glNormalStream3bvATI(GLenum stream,const GLbyte* coords)const;
void glGetObjectParameterivAPPLE(GLenum objectType,GLuint name,GLenum pname,GLint* params)const;
void glNormal3i(GLint nx,GLint ny,GLint nz)const;
void glUniform1ivARB(GLint location,GLsizei count,const GLint* value)const;
void glNormal3d(GLdouble nx,GLdouble ny,GLdouble nz)const;
void glUpdateObjectBufferATI(GLuint buffer,GLuint offset,GLsizei size,const void* pointer,GLenum preserve)const;
void glNormal3b(GLbyte nx,GLbyte ny,GLbyte nz)const;
GLint glGetUniformBufferSizeEXT(GLuint program,GLint location)const;
void glMultiTexCoord4dv(GLenum target,const GLdouble* v)const;
void glProgramUniform3i64ARB(GLuint program,GLint location,GLint64 x,GLint64 y,GLint64 z)const;
void glVertexAttrib2d(GLuint index,GLdouble x,GLdouble y)const;
void glVertexAttrib2f(GLuint index,GLfloat x,GLfloat y)const;
void glMultiDrawElementsEXT(GLenum mode,const GLsizei* count,GLenum type,const void*const* indices,GLsizei primcount)const;
void glVertexAttrib3dv(GLuint index,const GLdouble* v)const;
void glMultiTexCoord2bOES(GLenum texture,GLbyte s,GLbyte t)const;
void glVertexAttrib2s(GLuint index,GLshort x,GLshort y)const;
void glTexImage3DMultisample(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)const;
GLuint glGetUniformBlockIndex(GLuint program,const GLchar* uniformBlockName)const;
void glFrontFace(GLenum mode)const;
void glEvalCoord1xOES(GLfixed u)const;
void glDrawArraysInstancedBaseInstance(GLenum mode,GLint first,GLsizei count,GLsizei instancecount,GLuint baseinstance)const;
GLboolean glIsPointInStrokePathNV(GLuint path,GLfloat x,GLfloat y)const;
